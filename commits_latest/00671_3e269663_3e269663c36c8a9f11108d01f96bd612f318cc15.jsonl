{"prompt": "refactor(storage): add redis structs to storage impls (#1910)", "response": "Files to modify:\n\n\n**connection.rs**\n  Remove:\n    - function: private::on_acquire\n    - function: pub::diesel_make_pg_pool\n    - struct: private::TestTransaction\n    - impl: impl CustomizeConnection<PgPooledConn, ConnectionError> for TestTransaction\n\n**services.rs**\n  Modify existing code\n\n**generate_schema.rs**\n  Modify existing code\n\n**store.rs**\n  Add:\n    - function: private::get_write_pool\n    - function: private::get_read_pool\n    - function: private::get_write_pool\n    - function: private::get_read_pool\n    - trait: pub::DatabaseStore\n\n**lib.rs**\n  Add:\n    - function: pub::new\n    - function: pub::test_store\n    - function: pub::from_store\n    - function: pub::get_drainer_stream_name\n    - function: private::push_to_drainer_stream\n    - struct: pub::RouterStore\n    - struct: pub::KVRouterStore\n    - impl: impl RouterStore<T>\n    - impl: impl KVRouterStore<T>\n    - mod: pub::redis\n\n**redis.rs**\n  Add:\n    - function: pub::new\n    - function: pub::set_error_callback\n    - function: pub::subscribe_to_channel\n    - struct: pub::CacheStore\n    - impl: impl CacheStore\n    - mod: pub::kv_store\n\n**kv_store.rs**\n  Add:\n    - function: private::partition_number\n    - function: private::shard_key\n    - function: private::fmt\n    - enum: pub::PartitionKey\n    - trait: pub::KvStorePartition\n    - impl: impl std::fmt::Display for PartitionKey<'a>"}
