{"prompt": "refactor(db_interfaces): move db interfaces in router to domain_models (#9830)\n\nCo-authored-by: Ankit Kumar Gupta <ankit.gupta.001@juspay.in>\nCo-authored-by: hyperswitch-bot[bot] <148525504+hyperswitch-bot[bot]@users.noreply.github.com>\nCo-authored-by: Gaurav Rawat <104276743+GauravRawat369@users.noreply.github.com>", "response": "Files to modify:\n\n\n**lib.rs**\n  Modify existing code\n\n**types.rs**\n  Add:\n    - trait: pub::TenantConfig\n\n**unified_connector_service.rs**\n  Remove:\n    - enum: pub::UnifiedConnectorServiceError\n\n**business_profile.rs**\n  Add:\n    - trait: pub::ProfileInterface\n\n**configs.rs**\n  Add:\n    - trait: pub::ConfigInterface\n\n**customer.rs**\n  Add:\n    - function: pub::update_connector_customer_in_customers\n    - function: pub::update_connector_customer_in_customers\n\n**lib.rs**\n  Modify existing code\n\n**merchant_account.rs**\n  Add:\n    - trait: pub::MerchantAccountInterface\n\n**merchant_connector_account.rs**\n  Add:\n    - trait: pub::MerchantConnectorAccountInterface\n\n**merchant_key_store.rs**\n  Add:\n    - trait: pub::MerchantKeyStoreInterface\n\n**api_client.rs**\n  Add:\n    - function: pub::execute_connector_processing_step\n    - function: pub::handle_ucs_response\n    - function: pub::call_connector_api\n    - function: pub::handle_response\n    - function: pub::store_raw_connector_response_if_required\n    - function: pub::get_flow_name\n    - trait: pub::ConnectorConverter\n    - trait: pub::RequestBuilder\n    - trait: pub::ApiClient\n    - trait: pub::ApiClientWrapper\n\n**configs.rs**\n  Add:\n    - trait: pub::ConfigInterface\n\n**consts.rs**\n  Modify existing code\n\n**events.rs**\n  Add:\n    - trait: pub::EventHandlerInterface\n\n**helpers.rs**\n  Add:\n    - trait: pub::ForeignTryFrom\n\n**lib.rs**\n  Modify existing code\n\n**metrics.rs**\n  Modify existing code\n\n**unified_connector_service.rs**\n  Remove:\n    - enum: pub::UnifiedConnectorServiceError\n\n**transformers.rs**\n  Add:\n    - function: private::foreign_try_from\n    - function: private::foreign_try_from\n    - function: pub::convert_connector_service_status_code\n    - struct: pub::WebhookTransformData\n    - enum: pub::UnifiedConnectorServiceError\n    - impl: impl ForeignTryFrom<payments_grpc::PaymentServiceGetResponse> for Result<(PaymentsResponseData, AttemptStatus), ErrorResponse>\n    - impl: impl ForeignTryFrom<payments_grpc::PaymentStatus> for AttemptStatus\n\n**defaults.rs**\n  Remove:\n    - function: private::default\n    - impl: impl Default for super::settings::GlobalTenant\n\n**settings.rs**\n  Remove:\n    - function: private::get_tenant_id\n    - function: private::get_accounts_schema\n    - function: private::get_schema\n    - function: private::get_redis_key_prefix\n    - function: private::get_clickhouse_database\n    - function: private::get_tenant_id\n    - function: private::get_accounts_schema\n    - function: private::get_schema\n    - function: private::get_redis_key_prefix\n    - function: private::get_clickhouse_database\n    - struct: pub::Tenant\n    - struct: pub::TenantUserConfig\n    - struct: pub::GlobalTenant\n    - struct: pub::InternalMerchantIdProfileIdAuthSettings\n    - struct: pub::InternalServicesConfig\n    - impl: impl storage_impl::config::TenantConfig for Tenant\n    - impl: impl storage_impl::config::TenantConfig for GlobalTenant\n\n**customers.rs**\n  Remove:\n    - function: pub::update_connector_customer_in_customers\n    - function: pub::update_connector_customer_in_customers\n\n**psync_flow.rs**\n  Modify existing code\n\n**helpers.rs**\n  Add:\n    - trait: pub::ForeignTryFrom\n\n**unified_connector_service.rs**\n  Remove:\n    - enum: pub::UnifiedConnectorServiceError\n\n**transformers.rs**\n  Add:\n    - function: private::foreign_try_from\n    - function: private::foreign_try_from\n    - function: pub::convert_connector_service_status_code\n    - struct: pub::WebhookTransformData\n    - enum: pub::UnifiedConnectorServiceError\n    - impl: impl ForeignTryFrom<payments_grpc::PaymentServiceGetResponse> for Result<(PaymentsResponseData, AttemptStatus), ErrorResponse>\n    - impl: impl ForeignTryFrom<payments_grpc::PaymentStatus> for AttemptStatus\n\n**db.rs**\n  Modify existing code\n\n**business_profile.rs**\n  Add:\n    - trait: pub::ProfileInterface\n\n**configs.rs**\n  Add:\n    - trait: pub::ConfigInterface\n\n**events.rs**\n  Add:\n    - trait: pub::EventHandlerInterface\n\n**kafka_store.rs**\n  Modify existing code\n\n**merchant_account.rs**\n  Add:\n    - trait: pub::MerchantAccountInterface\n\n**merchant_connector_account.rs**\n  Add:\n    - trait: pub::MerchantConnectorAccountInterface\n\n**merchant_key_store.rs**\n  Add:\n    - trait: pub::MerchantKeyStoreInterface\n\n**events.rs**\n  Add:\n    - trait: pub::EventHandlerInterface\n\n**app.rs**\n  Add:\n    - function: private::get_api_client\n    - function: private::get_proxy\n    - function: private::get_request_id\n    - function: private::get_request_id_str\n    - function: private::get_tenant\n    - function: private::get_connectors\n    - function: private::event_handler\n    - impl: impl hyperswitch_interfaces::api_client::ApiClientWrapper for SessionState\n\n**services.rs**\n  Modify existing code\n\n**api.rs**\n  Remove:\n    - function: private::handle_ucs_response\n    - function: private::store_raw_connector_response_if_required\n    - function: pub::execute_connector_processing_step\n    - function: pub::call_connector_api\n    - function: private::handle_response\n\n**client.rs**\n  Remove:\n    - trait: pub::RequestBuilder\n    - trait: pub::ApiClient\n  Add:\n    - function: private::get_request_id\n\n**kafka.rs**\n  Modify existing code\n\n**business_profile.rs**\n  Add:\n    - trait: pub::ProfileInterface\n\n**config.rs**\n  Remove:\n    - trait: pub::TenantConfig\n\n**configs.rs**\n  Add:\n    - trait: pub::ConfigInterface\n\n**store.rs**\n  Modify existing code\n\n**kv_router_store.rs**\n  Modify existing code\n\n**lib.rs**\n  Modify existing code\n\n**merchant_account.rs**\n  Add:\n    - trait: pub::MerchantAccountInterface\n\n**merchant_connector_account.rs**\n  Add:\n    - trait: pub::MerchantConnectorAccountInterface\n\n**merchant_key_store.rs**\n  Add:\n    - trait: pub::MerchantKeyStoreInterface\n\n**mock_db.rs**\n  Add:\n    - function: pub::get_master_key\n\n**utils.rs**\n  Add:\n    - function: pub::pg_accounts_connection_read\n    - function: pub::pg_accounts_connection_write"}
