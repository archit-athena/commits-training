{"prompt": "fix(router): Add scoped error enum for customer error (#1988)\n\nCo-authored-by: Sanchith Hegde <22217505+SanchithHegde@users.noreply.github.com>", "response": "Files to modify:\n\n\n**customers.rs**\n  Modify existing code\n\n**errors.rs**\n  Remove:\n    - impl: impl common_utils::errors::ErrorSwitch<StripeErrorCode> for errors::ApiErrorResponse\n  Add:\n    - function: private::switch\n    - impl: impl ErrorSwitch<StripeErrorCode> for errors::ApiErrorResponse\n    - impl: impl ErrorSwitch<StripeErrorCode> for CustomersErrorResponse\n\n**payment_intents.rs**\n  Modify existing code\n\n**refunds.rs**\n  Modify existing code\n\n**setup_intents.rs**\n  Modify existing code\n\n**wrap.rs**\n  Modify existing code\n\n**customers.rs**\n  Modify existing code\n\n**errors.rs**\n  Remove:\n    - impl: impl common_utils::errors::ErrorSwitch<StripeErrorCode> for errors::ApiErrorResponse\n  Add:\n    - function: private::switch\n    - impl: impl ErrorSwitch<StripeErrorCode> for errors::ApiErrorResponse\n    - impl: impl ErrorSwitch<StripeErrorCode> for CustomersErrorResponse\n\n**customers_error_response.rs**\n  Add:\n    - function: private::status_code\n    - function: private::error_response\n    - enum: pub::CustomersErrorResponse\n    - impl: impl actix_web::ResponseError for CustomersErrorResponse\n\n**transformers.rs**\n  Add:\n    - function: private::switch\n    - function: private::switch\n    - function: private::switch\n    - function: private::switch\n    - impl: impl ErrorSwitch<api_models::errors::types::ApiErrorResponse> for CustomersErrorResponse\n    - impl: impl ErrorSwitch<CustomersErrorResponse> for StorageError\n    - impl: impl ErrorSwitch<CustomersErrorResponse> for common_utils::errors::CryptoError\n    - impl: impl ErrorSwitch<CustomersErrorResponse> for ApiErrorResponse\n\n**utils.rs**\n  Add:\n    - function: private::to_not_found_response\n    - function: private::to_duplicate_response\n    - impl: impl StorageErrorExt<T, errors::CustomersErrorResponse> for error_stack::Result<T, errors::StorageError>"}
