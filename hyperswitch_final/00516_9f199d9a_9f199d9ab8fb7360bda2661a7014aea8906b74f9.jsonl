{"prompt": "refactor(storage_impl): Integrate the composite store from external crate (#1921)", "response": "Files to modify:\n\n\n**lib.rs**\n  Modify existing code\n\n**connection.rs**\n  Modify existing code\n\n**cashtocode.rs**\n  Modify existing code\n\n**tsys.rs**\n  Modify existing code\n\n**cache.rs**\n  Modify existing code\n\n**helpers.rs**\n  Modify existing code\n\n**vault.rs**\n  Modify existing code\n\n**payouts.rs**\n  Modify existing code\n\n**validator.rs**\n  Modify existing code\n\n**db.rs**\n  Add:\n    - impl: impl RedisConnInterface for MockDb\n\n**api_keys.rs**\n  Modify existing code\n\n**cache.rs**\n  Modify existing code\n\n**configs.rs**\n  Modify existing code\n\n**ephemeral_key.rs**\n  Modify existing code\n\n**merchant_account.rs**\n  Modify existing code\n\n**merchant_connector_account.rs**\n  Modify existing code\n\n**merchant_key_store.rs**\n  Modify existing code\n\n**payment_attempt.rs**\n  Modify existing code\n\n**payment_intent.rs**\n  Modify existing code\n\n**queue.rs**\n  Modify existing code\n\n**refund.rs**\n  Modify existing code\n\n**lib.rs**\n  Modify existing code\n\n**app.rs**\n  Modify existing code\n\n**services.rs**\n  Remove:\n    - function: private::subscribe\n    - function: private::publish\n    - function: private::on_message\n    - function: private::get_redis_conn\n    - function: pub::new\n    - function: pub::get_drainer_stream_name\n    - function: pub::redis_conn\n    - function: pub::push_to_drainer_stream\n    - struct: pub::Store\n    - struct: pub::StoreConfig\n    - trait: pub::PubSubInterface\n    - trait: pub::RedisConnInterface\n    - impl: impl PubSubInterface for redis_interface::RedisConnectionPool\n    - impl: impl RedisConnInterface for Store\n\n**payment_attempt.rs**\n  Modify existing code\n\n**payment_intent.rs**\n  Modify existing code\n\n**refund.rs**\n  Modify existing code\n\n**storage_partitioning.rs**\n  Remove:\n    - function: private::partition_number\n    - function: private::shard_key\n    - function: private::fmt\n    - enum: pub::PartitionKey\n    - trait: pub::KvStorePartition\n    - impl: impl std::fmt::Display for PartitionKey<'a>\n\n**cache.rs**\n  Modify existing code\n\n**payeezy.rs**\n  Modify existing code\n\n**diesel.rs**\n  Modify existing code\n\n**database.rs**\n  Modify existing code\n\n**store.rs**\n  Modify existing code\n\n**lib.rs**\n  Modify existing code\n\n**payments.rs**\n  Add:\n    - impl: impl KvStorePartition for PaymentIntent\n    - impl: impl KvStorePartition for PaymentAttempt\n\n**redis.rs**\n  Add:\n    - struct: pub::RedisStore\n    - mod: pub::cache\n    - mod: pub::pub_sub\n\n**cache.rs**\n  Modify existing code\n\n**kv_store.rs**\n  Add:\n    - enum: pub::PartitionKey\n    - trait: pub::KvStorePartition\n\n**pub_sub.rs**\n  Add:\n    - function: private::subscribe\n    - function: private::publish\n    - function: private::on_message\n    - trait: pub::PubSubInterface\n    - impl: impl PubSubInterface for redis_interface::RedisConnectionPool\n\n**refund.rs**\n  Modify existing code"}
