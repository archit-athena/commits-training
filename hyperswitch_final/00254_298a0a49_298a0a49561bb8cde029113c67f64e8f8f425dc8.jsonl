{"prompt": "feat(connector): [Nuvei] add support for card mandates (#818)\n\nCo-authored-by: Arun Raj M <jarnura47@gmail.com>", "response": "Files to modify:\n\n\n**payments.rs**\n  Modify existing code\n\n**lib.rs**\n  Add:\n    - function: private::from\n    - function: private::from\n    - function: private::serialize\n    - function: private::fmt\n    - function: private::fmt\n    - function: private::fmt\n    - function: private::fmt\n    - struct: pub::DDMMYYYY\n    - struct: pub::YYYYMMDD\n    - struct: pub::YYYYMMDDHHmmss\n    - struct: pub::DateTime\n    - enum: pub::DateFormat\n    - trait: pub::TimeStrategy\n    - impl: impl From<DateFormat> for &[FormatItem<'_>]\n    - impl: impl From<PrimitiveDateTime> for DateTime<T>\n    - impl: impl Serialize for DateTime<T>\n    - impl: impl std::fmt::Display for DateTime<T>\n    - impl: impl TimeStrategy for DDMMYYYY\n    - impl: impl TimeStrategy for YYYYMMDD\n    - impl: impl TimeStrategy for YYYYMMDDHHmmss\n\n**transformers.rs**\n  Remove:\n    - impl: impl TryFrom<(\n&types::RouterData<F, types::CompleteAuthorizeData, types::PaymentsResponseData>,\nString,\n)> for data\n  Add:\n    - function: private::from\n    - function: private::from\n    - function: private::from\n    - function: private::try_from\n    - struct: pub::NuveiMandateMeta\n    - struct: pub::NuveiCardDetails\n    - impl: impl From<api_models::payments::GooglePayWalletData> for NuveiPaymentsRequest\n    - impl: impl From<api_models::payments::ApplePayWalletData> for NuveiPaymentsRequest\n    - impl: impl From<NuveiCardDetails> for PaymentOption\n    - impl: impl TryFrom<(&types::PaymentsCompleteAuthorizeRouterData, String)> for PaymentOption::from(NuveiCardDetails {\ncard,\nthree_d: None,\n}),\nlet request = Self::try_from(NuveiPaymentRequestData {\nconnector_auth_type: item.connector_auth_type.clone(),\nclient_request_id: item.attempt_id.clone(),\nsession_token: data.1,\ncapture_method: item.request.capture_method,\n..Default::default()\n})?;\nOk(Self {\nrelated_transaction_id: request_data.related_transaction_id,\npayment_option: request_data.payment_option,\n..request\nimpl TryFrom<NuveiPaymentRequestData> for NuveiPaymentsRequest {\nfn try_from(request: NuveiPaymentRequestData) -> Result<Self, Self::Error> {\nlet session_token = request.session_token;\nfp_utils::when(session_token.is_empty(), || {\nErr(errors::ConnectorError::FailedToObtainAuthType)\n})?;\nlet connector_meta: NuveiAuthType = NuveiAuthType::try_from(&request.connector_auth_type)?;\nlet client_request_id = request.client_request_id;\nlet time_stamp =\ndate_time::format_date(date_time::now(), date_time::DateFormat::YYYYMMDDHHmmss)\n.into_report()\n.change_context(errors::ConnectorError::RequestEncodingFailed)?;\nsession_token,\ntransaction_type: request\n.capture_method\n.map(TransactionType::from)\n.unwrap_or_default(),\nrequest.amount.clone(),\nrequest.currency.clone(),\namount: request.amount,\ncurrency: request.currency,\n..Default::default()\nimpl TryFrom<NuveiPaymentRequestData> for NuveiPaymentFlowRequest {\nfn try_from(request: NuveiPaymentRequestData) -> Result<Self, Self::Error> {\nlet connector_meta: NuveiAuthType = NuveiAuthType::try_from(&request.connector_auth_type)?;\nlet client_request_id = request.client_request_id;\nlet time_stamp =\ndate_time::format_date(date_time::now(), date_time::DateFormat::YYYYMMDDHHmmss)\n.into_report()\n.change_context(errors::ConnectorError::RequestEncodingFailed)?;\nrequest.amount.clone(),\nrequest.currency.clone(),\nrequest.related_transaction_id.clone().unwrap_or_default(),\namount: request.amount,\ncurrency: request.currency,\nrelated_transaction_id: request.related_transaction_id,\n})\n}\n}\n\n/// Common request handler for all the flows that has below fields in common\n#[derive(Debug, Clone, Default)]\npub struct NuveiPaymentRequestData {\npub amount: String,\npub currency: String,\npub related_transaction_id: Option<String>,\npub client_request_id: String,\npub connector_auth_type: types::ConnectorAuthType,\npub session_token: String,\npub capture_method: Option<storage_models::enums::CaptureMethod>,\n}\n\nimpl TryFrom<&types::PaymentsCaptureRouterData> for NuveiPaymentFlowRequest {\ntype Error = error_stack::Report<errors::ConnectorError>\n\n**utils.rs**\n  Add:\n    - function: private::connector_mandate_id\n    - function: private::get_end_date\n    - function: private::get_metadata\n    - trait: pub::MandateData\n    - impl: impl MandateData for payments::MandateAmountData\n\n**errors.rs**\n  Modify existing code\n\n**helpers.rs**\n  Modify existing code\n\n**mandate.rs**\n  Modify existing code\n\n**schema.rs**\n  Modify existing code"}
