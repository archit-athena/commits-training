{"prompt": "feat(payouts): extend routing capabilities to payout operation (#3531)\n\nCo-authored-by: Kashif <mohammed.kashif@juspay.in>", "response": "Files to modify:\n\n\n**admin.rs**\n  Remove:\n    - function: private::expecting\n    - function: private::visit_map\n    - function: private::expecting\n    - function: private::visit_some\n    - function: private::visit_none\n    - function: private::visit_unit\n    - function: pub::deserialize\n    - function: pub::deserialize_option\n    - struct: private::RoutingAlgorithmVisitor\n    - struct: private::OptionalRoutingAlgorithmVisitor\n    - enum: pub::PayoutStraightThroughAlgorithm\n    - impl: impl Visitor<'de> for RoutingAlgorithmVisitor\n    - impl: impl Visitor<'de> for OptionalRoutingAlgorithmVisitor\n    - mod: pub::payout_routing_algorithm\n\n**enums.rs**\n  Add:\n    - function: private::from\n    - function: private::try_from\n    - impl: impl From<PayoutConnectors> for Connector\n    - impl: impl TryFrom<Connector> for PayoutConnectors\n\n**payouts.rs**\n  Modify existing code\n\n**routing.rs**\n  Modify existing code\n\n**enums.rs**\n  Add:\n    - function: private::from\n    - function: private::try_from\n    - impl: impl From<PayoutConnectors> for Connector\n    - impl: impl TryFrom<Connector> for PayoutConnectors\n\n**enums.rs**\n  Add:\n    - function: private::from\n    - function: private::try_from\n    - impl: impl From<PayoutConnectors> for Connector\n    - impl: impl TryFrom<Connector> for PayoutConnectors\n\n**payout_attempt.rs**\n  Modify existing code\n\n**routing_algorithm.rs**\n  Modify existing code\n\n**routing_algorithm.rs**\n  Modify existing code\n\n**schema.rs**\n  Modify existing code\n\n**openapi.rs**\n  Modify existing code\n\n**admin.rs**\n  Remove:\n    - function: private::expecting\n    - function: private::visit_map\n    - function: private::expecting\n    - function: private::visit_some\n    - function: private::visit_none\n    - function: private::visit_unit\n    - function: pub::deserialize\n    - function: pub::deserialize_option\n    - struct: private::RoutingAlgorithmVisitor\n    - struct: private::OptionalRoutingAlgorithmVisitor\n    - enum: pub::PayoutStraightThroughAlgorithm\n    - impl: impl Visitor<'de> for RoutingAlgorithmVisitor\n    - impl: impl Visitor<'de> for OptionalRoutingAlgorithmVisitor\n    - mod: pub::payout_routing_algorithm\n\n**cards.rs**\n  Modify existing code\n\n**payments.rs**\n  Modify existing code\n\n**routing.rs**\n  Modify existing code\n\n**payouts.rs**\n  Modify existing code\n\n**helpers.rs**\n  Modify existing code\n\n**routing.rs**\n  Modify existing code\n\n**helpers.rs**\n  Modify existing code\n\n**transformers.rs**\n  Add:\n    - function: private::from\n    - impl: impl From<&routing::TransactionData<'_, F>> for storage_enums::TransactionType\n\n**utils.rs**\n  Modify existing code\n\n**kafka_store.rs**\n  Add:\n    - function: private::list_routing_algorithm_metadata_by_merchant_id_transaction_type\n\n**routing_algorithm.rs**\n  Modify existing code\n\n**app.rs**\n  Modify existing code\n\n**routing.rs**\n  Modify existing code\n\n**api.rs**\n  Remove:\n    - function: private::convert_connector\n    - struct: pub::PayoutConnectorData\n    - struct: pub::PayoutSessionConnectorData\n    - enum: pub::PayoutConnectorChoice\n    - enum: pub::PayoutConnectorCallType\n    - impl: impl PayoutConnectorData\n  Add:\n    - impl: impl ConnectorData\n\n**admin.rs**\n  Remove:\n    - function: private::expecting\n    - function: private::visit_map\n    - function: private::expecting\n    - function: private::visit_some\n    - function: private::visit_none\n    - function: private::visit_unit\n    - function: pub::deserialize\n    - function: pub::deserialize_option\n    - struct: private::RoutingAlgorithmVisitor\n    - struct: private::OptionalRoutingAlgorithmVisitor\n    - enum: pub::PayoutStraightThroughAlgorithm\n    - impl: impl Visitor<'de> for RoutingAlgorithmVisitor\n    - impl: impl Visitor<'de> for OptionalRoutingAlgorithmVisitor\n    - mod: pub::payout_routing_algorithm\n\n**storage.rs**\n  Modify existing code\n\n**payout_attempt.rs**\n  Modify existing code\n\n**transformers.rs**\n  Add:\n    - function: private::from\n    - impl: impl From<&routing::TransactionData<'_, F>> for storage_enums::TransactionType\n\n**adyen.rs**\n  Modify existing code\n\n**utils.rs**\n  Modify existing code\n\n**wise.rs**\n  Modify existing code"}
