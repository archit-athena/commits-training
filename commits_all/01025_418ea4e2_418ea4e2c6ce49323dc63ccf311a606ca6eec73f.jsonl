{"prompt": "refactor: Add a GAT Data to Operation trait (#5825)\n\nCo-authored-by: hyperswitch-bot[bot] <148525504+hyperswitch-bot[bot]@users.noreply.github.com>", "response": "Files to modify:\n\n\n**payment_intents.rs**\n  Modify existing code\n\n**setup_intents.rs**\n  Modify existing code\n\n**admin.rs**\n  Modify existing code\n\n**fraud_check.rs**\n  Modify existing code\n\n**operation.rs**\n  Modify existing code\n\n**fraud_check_post.rs**\n  Remove:\n    - impl: impl Domain<F> for (\npayment_data: &mut payments::PaymentData<F>,\nlogger::debug!(\"payment_id : {:?} has been cancelled since it has been found fraudulent by configured frm connector\",payment_data.payment_attempt.payment_id)\n\n**fraud_check_pre.rs**\n  Modify existing code\n\n**types.rs**\n  Remove:\n    - struct: pub::FrmInfo\n  Add:\n    - struct: pub::FrmInfo\n\n**surcharge_decision_configs.rs**\n  Modify existing code\n\n**payments.rs**\n  Modify existing code\n\n**access_token.rs**\n  Modify existing code\n\n**conditional_configs.rs**\n  Modify existing code\n\n**flows.rs**\n  Modify existing code\n\n**approve_flow.rs**\n  Modify existing code\n\n**authorize_flow.rs**\n  Modify existing code\n\n**cancel_flow.rs**\n  Modify existing code\n\n**capture_flow.rs**\n  Modify existing code\n\n**complete_authorize_flow.rs**\n  Modify existing code\n\n**incremental_authorization_flow.rs**\n  Modify existing code\n\n**psync_flow.rs**\n  Modify existing code\n\n**reject_flow.rs**\n  Modify existing code\n\n**session_flow.rs**\n  Modify existing code\n\n**setup_mandate_flow.rs**\n  Modify existing code\n\n**tax_calculation_flow.rs**\n  Modify existing code\n\n**helpers.rs**\n  Remove:\n    - function: pub::get_customer_from_details\n    - function: pub::get_customer_details_even_for_redacted_customer\n    - function: pub::get_customer_from_details\n    - function: pub::get_customer_details_even_for_redacted_customer\n\n**operations.rs**\n  Modify existing code\n\n**payment_approve.rs**\n  Modify existing code\n\n**payment_cancel.rs**\n  Modify existing code\n\n**payment_capture.rs**\n  Modify existing code\n\n**payment_complete_authorize.rs**\n  Remove:\n    - impl: impl Domain<F, api::PaymentsRequest> for RouterResult<(BoxedOperation<'b, F, api::PaymentsRequest>, PaymentData<F>)>\n  Add:\n    - impl: impl Domain<F, api::PaymentsRequest, PaymentData<F>> for RouterResult<(CompleteAuthorizeOperation<'b, F>, PaymentData<F>)>\n\n**payment_confirm.rs**\n  Remove:\n    - impl: impl Domain<F, api::PaymentsRequest> for RouterResult<(BoxedOperation<'b, F, api::PaymentsRequest>, PaymentData<F>)>\n  Add:\n    - impl: impl Domain<F, api::PaymentsRequest, PaymentData<F>> for RouterResult<(\nBoxedOperation<'b, F, api::PaymentsRequest, PaymentData<F>>,\nPaymentData<F>,\n)>\n\n**payment_create.rs**\n  Modify existing code\n\n**payment_reject.rs**\n  Modify existing code\n\n**payment_session.rs**\n  Modify existing code\n\n**payment_start.rs**\n  Modify existing code\n\n**payment_status.rs**\n  Modify existing code\n\n**payment_update.rs**\n  Modify existing code\n\n**payments_incremental_authorization.rs**\n  Modify existing code\n\n**tax_calculation.rs**\n  Remove:\n    - impl: impl RouterResult<(\nBoxedOperation<'b, F, api::PaymentsDynamicTaxCalculationRequest>,\nPaymentData<F>,\n)>\n  Add:\n    - impl: impl RouterResult<(PaymentSessionUpdateOperation<'b, F>, PaymentData<F>)>\n\n**retry.rs**\n  Modify existing code\n\n**routing.rs**\n  Modify existing code\n\n**transformers.rs**\n  Remove:\n    - trait: pub::multiple_capture_data\n    - impl: impl ToResponse<PaymentData<F>, Op> for amount\n    - impl: impl ToResponse<PaymentData<F>, Op> for and_then(|mandate_ids| mandate_ids.mandate_id),\npayment_method: data.payment_attempt.payment_method,\npayment_token: data.token,\nerror_code: data.payment_attempt.error_code,\nerror_message: data.payment_attempt.error_message,\npub fn payments_to_payments_response<Op, F: Clone>(\n_payment_data: PaymentData<F>,\npub fn payments_to_payments_response<Op, F: Clone>(\npayment_data: PaymentData<F>,\nlet payment_attempt = payment_data.payment_attempt\n\n**helpers.rs**\n  Remove:\n    - function: pub::get_customer_from_details\n    - function: pub::get_customer_details_even_for_redacted_customer\n    - function: pub::get_customer_from_details\n    - function: pub::get_customer_details_even_for_redacted_customer\n\n**refunds.rs**\n  Modify existing code\n\n**routing.rs**\n  Modify existing code\n\n**transformers.rs**\n  Remove:\n    - trait: pub::multiple_capture_data\n    - impl: impl ToResponse<PaymentData<F>, Op> for amount\n    - impl: impl ToResponse<PaymentData<F>, Op> for and_then(|mandate_ids| mandate_ids.mandate_id),\npayment_method: data.payment_attempt.payment_method,\npayment_token: data.token,\nerror_code: data.payment_attempt.error_code,\nerror_message: data.payment_attempt.error_message,\npub fn payments_to_payments_response<Op, F: Clone>(\n_payment_data: PaymentData<F>,\npub fn payments_to_payments_response<Op, F: Clone>(\npayment_data: PaymentData<F>,\nlet payment_attempt = payment_data.payment_attempt\n\n**utils.rs**\n  Modify existing code\n\n**incoming.rs**\n  Modify existing code\n\n**payments.rs**\n  Modify existing code\n\n**utils.rs**\n  Modify existing code\n\n**outgoing_webhook_retry.rs**\n  Modify existing code\n\n**payment_sync.rs**\n  Modify existing code\n\n**payments.rs**\n  Modify existing code\n\n**payments2.rs**\n  Modify existing code\n\n**operation.rs**\n  Modify existing code"}
