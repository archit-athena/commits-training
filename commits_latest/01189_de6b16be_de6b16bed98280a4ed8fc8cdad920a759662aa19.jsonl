{"prompt": "feat(analytics): adding metric api for dispute analytics (#3810)\n\nCo-authored-by: Sampras Lopes <lsampras@pm.me>", "response": "Files to modify:\n\n\n**clickhouse.rs**\n  Add:\n    - function: private::try_into\n    - impl: impl super::disputes::metrics::DisputeMetricAnalytics for ClickhouseClient\n    - impl: impl TryInto<DisputeMetricRow> for serde_json::Value\n\n**disputes.rs**\n  Add:\n    - trait: pub::DisputeAnalytics\n    - mod: pub::accumulators\n    - mod: pub::metrics\n    - mod: pub::types\n\n**accumulators.rs**\n  Add:\n    - function: private::add_metrics_bucket\n    - function: private::collect\n    - function: private::add_metrics_bucket\n    - function: private::collect\n    - function: pub::collect\n    - struct: pub::DisputeMetricsAccumulator\n    - struct: pub::RateAccumulator\n    - struct: pub::SumAccumulator\n    - trait: pub::DisputeMetricAccumulator\n    - impl: impl DisputeMetricAccumulator for SumAccumulator\n    - impl: impl DisputeMetricAccumulator for RateAccumulator\n    - impl: impl DisputeMetricsAccumulator\n\n**core.rs**\n  Modify existing code\n\n**metrics.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::DisputeMetricRow\n    - trait: pub::DisputeMetricAnalytics\n    - trait: pub::DisputeMetric\n    - impl: impl DisputeMetric<T> for DisputeMetrics\n    - mod: private::dispute_status_metric\n    - mod: private::total_amount_disputed\n    - mod: private::total_dispute_lost_amount\n\n**dispute_status_metric.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::DisputeStatusMetric\n    - impl: impl super::DisputeMetric<T> for DisputeStatusMetric\n\n**total_amount_disputed.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::TotalAmountDisputed\n    - impl: impl super::DisputeMetric<T> for TotalAmountDisputed\n\n**total_dispute_lost_amount.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::TotalDisputeLostAmount\n    - impl: impl super::DisputeMetric<T> for TotalDisputeLostAmount\n\n**types.rs**\n  Add:\n    - function: private::set_filter_clause\n    - impl: impl QueryFilter<T> for DisputeFilters\n\n**lib.rs**\n  Add:\n    - function: pub::get_dispute_metrics\n\n**query.rs**\n  Modify existing code\n\n**sqlx.rs**\n  Add:\n    - function: private::from_row\n    - impl: impl super::disputes::metrics::DisputeMetricAnalytics for SqlxClient\n    - impl: impl FromRow<'a, PgRow> for super::disputes::metrics::DisputeMetricRow\n\n**analytics.rs**\n  Add:\n    - struct: pub::GetDisputeMetricRequest\n\n**disputes.rs**\n  Add:\n    - trait: pub::DisputeAnalytics\n    - mod: pub::accumulators\n    - mod: pub::metrics\n    - mod: pub::types\n\n**events.rs**\n  Modify existing code\n\n**analytics.rs**\n  Add:\n    - struct: pub::GetDisputeMetricRequest\n\n**events.rs**\n  Modify existing code\n\n**kafka.rs**\n  Modify existing code\n\n**dispute.rs**\n  Modify existing code\n\n**lib.rs**\n  Add:\n    - function: pub::get_dispute_metrics"}
