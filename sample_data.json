[
  {
    "prompt": "feat(connector): [PlaceToPay] Implement Cards for PlaceToPay (#3117)\n\nSigned-off-by: chikke srujan <121822803+srujanchikke@users.noreply.github.com>\nCo-authored-by: hyperswitch-bot[bot] <148525504+hyperswitch-bot[bot]@users.noreply.github.com>",
    "response": "Files to modify:\n\n\n**placetopay.rs**\n  Remove:\n    - function: private::get_auth_header\n    - impl: impl ConnectorValidation for Placetopay\n  Add:\n    - function: private::validate_capture_method\n    - function: private::get_request_body\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - impl: impl ConnectorValidation for Placetopay\n\n**transformers.rs**\n  Remove:\n    - struct: pub::PlacetopayAuthType\n    - enum: pub::PlacetopayPaymentStatus\n  Add:\n    - struct: pub::PlacetopayAuthType\n    - struct: pub::PlacetopayAuth\n    - struct: pub::PlacetopayPayment\n    - struct: pub::PlacetopayAmount\n    - struct: pub::PlacetopayInstrument\n    - enum: pub::PlacetopayAuthorizeAction\n\n**utils.rs**\n  Add:\n    - function: pub::generate_random_bytes"
  },
  {
    "prompt": "feat(connector): Remove Braintree SDK Flow support (#5264)",
    "response": "Files to modify:\n\n\n**braintree.rs**\n  Remove:\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::build_request\n    - function: private::get_error_response\n    - function: private::get_request_body\n    - function: private::handle_response\n    - struct: pub::Braintree\n    - mod: pub::braintree_graphql_transformers\n  Add:\n    - struct: pub::Braintree\n\n**braintree_graphql_transformers.rs**\n  Remove:\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::build_error_response\n    - function: private::get_error_response\n    - function: private::from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::get_braintree_redirect_form\n    - function: private::foreign_from\n    - function: pub::get_dispute_stage\n    - struct: pub::BraintreeRouterData\n    - struct: pub::PaymentInput\n    - struct: pub::VariablePaymentInput\n    - struct: pub::CardPaymentRequest\n    - struct: pub::MandatePaymentRequest\n    - struct: pub::BraintreeMeta\n    - struct: pub::RegularTransactionBody\n    - struct: pub::VaultTransactionBody\n    - struct: pub::TransactionTiming\n    - struct: pub::AuthResponse\n    - struct: private::PaymentMethodInfo\n    - struct: pub::TransactionAuthChargeResponseBody\n    - struct: pub::DataAuthResponse\n    - struct: pub::AuthChargeCreditCard\n    - struct: pub::ErrorDetails\n    - struct: pub::AdditionalErrorDetails\n    - struct: pub::PaymentsResponse\n    - struct: pub::DataResponse\n    - struct: pub::RefundInputData\n    - struct: pub::BraintreeRefundInput\n    - struct: pub::BraintreeRefundVariables\n    - struct: pub::BraintreeRefundRequest\n    - struct: pub::BraintreeRefundTransactionBody\n    - struct: pub::BraintreeRefundTransaction\n    - struct: pub::BraintreeRefundResponseData\n    - struct: pub::RefundResponse\n    - struct: pub::BraintreeRSyncRequest\n    - struct: pub::RSyncNodeData\n    - struct: pub::RSyncEdgeData\n    - struct: pub::RefundData\n    - struct: pub::RSyncSearchData\n    - struct: pub::RSyncResponseData\n    - struct: pub::RSyncResponse\n    - struct: pub::CreditCardData\n    - struct: pub::ClientTokenInput\n    - struct: pub::InputData\n    - struct: pub::InputClientTokenData\n    - struct: pub::VariableInput\n    - struct: pub::VariableClientTokenInput\n    - struct: pub::BraintreeTokenRequest\n    - struct: pub::BraintreeClientTokenRequest\n    - struct: pub::TokenizePaymentMethodData\n    - struct: pub::TokenizeCreditCardData\n    - struct: pub::ClientToken\n    - struct: pub::TokenizeCreditCard\n    - struct: pub::ClientTokenData\n    - struct: pub::ClientTokenResponse\n    - struct: pub::TokenResponse\n    - struct: pub::ErrorResponse\n    - struct: pub::CaptureTransactionBody\n    - struct: pub::CaptureInputData\n    - struct: pub::VariableCaptureInput\n    - struct: pub::BraintreeCaptureRequest\n    - struct: pub::CaptureResponseTransactionBody\n    - struct: pub::CaptureTransactionData\n    - struct: pub::CaptureResponseData\n    - struct: pub::CaptureResponse\n    - struct: pub::CancelInputData\n    - struct: pub::VariableCancelInput\n    - struct: pub::BraintreeCancelRequest\n    - struct: pub::CancelResponseTransactionBody\n    - struct: pub::CancelTransactionData\n    - struct: pub::CancelResponseData\n    - struct: pub::CancelResponse\n    - struct: pub::BraintreePSyncRequest\n    - struct: pub::NodeData\n    - struct: pub::EdgeData\n    - struct: pub::TransactionData\n    - struct: pub::SearchData\n    - struct: pub::PSyncResponseData\n    - struct: pub::PSyncResponse\n    - struct: pub::BraintreeThreeDsResponse\n    - struct: pub::BraintreeThreeDsErrorResponse\n    - struct: pub::BraintreeRedirectionResponse\n    - struct: pub::BraintreeWebhookResponse\n    - struct: pub::Notification\n    - struct: pub::BraintreeDisputeData\n    - struct: pub::DisputeTransaction\n    - struct: pub::DisputeEvidence\n    - enum: pub::BraintreePaymentsRequest\n    - enum: pub::TransactionBody\n    - enum: pub::BraintreeAuthResponse\n    - enum: pub::BraintreeCompleteAuthResponse\n    - enum: pub::BraintreePaymentStatus\n    - enum: pub::BraintreePaymentsResponse\n    - enum: pub::BraintreeCompleteChargeResponse\n    - enum: pub::BraintreeRefundStatus\n    - enum: pub::BraintreeRefundResponse\n    - enum: pub::BraintreeRSyncResponse\n    - enum: pub::BraintreeTokenResponse\n    - enum: pub::BraintreeCaptureResponse\n    - enum: pub::BraintreeCancelResponse\n    - enum: pub::BraintreePSyncResponse\n    - impl: impl TryFrom<(&api::CurrencyUnit, enums::Currency, i64, T)> for BraintreeRouterData<T>\n    - impl: impl TryFrom<&Option<pii::SecretSerdeValue>> for BraintreeMeta\n    - impl: impl TryFrom<(\n&BraintreeRouterData<&types::PaymentsAuthorizeRouterData>,\nString,\nBraintreeMeta,\n)> for MandatePaymentRequest\n    - impl: impl TryFrom<&BraintreeRouterData<&types::PaymentsAuthorizeRouterData>> for BraintreePaymentsRequest\n    - impl: impl TryFrom<&BraintreeRouterData<&types::PaymentsCompleteAuthorizeRouterData>> for BraintreePaymentsRequest\n    - impl: impl TryFrom<\ntypes::ResponseRouterData<\nF,\nBraintreeAuthResponse,\ntypes::PaymentsAuthorizeData,\ntypes::PaymentsResponseData,\n>,\n> for types::RouterData<F, types::PaymentsAuthorizeData, types::PaymentsResponseData>\n    - impl: impl From<BraintreePaymentStatus> for enums::AttemptStatus\n    - impl: impl TryFrom<\ntypes::ResponseRouterData<\nF,\nBraintreePaymentsResponse,\ntypes::PaymentsAuthorizeData,\ntypes::PaymentsResponseData,\n>,\n> for types::RouterData<F, types::PaymentsAuthorizeData, types::PaymentsResponseData>\n    - impl: impl TryFrom<\ntypes::ResponseRouterData<\nF,\nBraintreeCompleteChargeResponse,\ntypes::CompleteAuthorizeData,\ntypes::PaymentsResponseData,\n>,\n> for types::RouterData<F, types::CompleteAuthorizeData, types::PaymentsResponseData>\n    - impl: impl TryFrom<\ntypes::ResponseRouterData<\nF,\nBraintreeCompleteAuthResponse,\ntypes::CompleteAuthorizeData,\ntypes::PaymentsResponseData,\n>,\n> for types::RouterData<F, types::CompleteAuthorizeData, types::PaymentsResponseData>\n    - impl: impl TryFrom<BraintreeRouterData<&types::RefundsRouterData<F>>> for BraintreeRefundRequest\n    - impl: impl From<BraintreeRefundStatus> for enums::RefundStatus\n    - impl: impl TryFrom<types::RefundsResponseRouterData<api::Execute, BraintreeRefundResponse>> for types::RefundsRouterData<api::Execute>\n    - impl: impl TryFrom<&types::RefundSyncRouterData> for BraintreeRSyncRequest\n    - impl: impl TryFrom<types::RefundsResponseRouterData<api::RSync, BraintreeRSyncResponse>> for types::RefundsRouterData<api::RSync>\n    - impl: impl TryFrom<&types::TokenizationRouterData> for BraintreeTokenRequest\n    - impl: impl TryFrom<types::ResponseRouterData<F, BraintreeTokenResponse, T, types::PaymentsResponseData>> for types::RouterData<F, T, types::PaymentsResponseData>\n    - impl: impl TryFrom<&BraintreeRouterData<&types::PaymentsCaptureRouterData>> for BraintreeCaptureRequest\n    - impl: impl TryFrom<types::PaymentsCaptureResponseRouterData<BraintreeCaptureResponse>> for types::PaymentsCaptureRouterData\n    - impl: impl TryFrom<&types::PaymentsCancelRouterData> for BraintreeCancelRequest\n    - impl: impl TryFrom<types::ResponseRouterData<F, BraintreeCancelResponse, T, types::PaymentsResponseData>> for types::RouterData<F, T, types::PaymentsResponseData>\n    - impl: impl TryFrom<&types::PaymentsSyncRouterData> for BraintreePSyncRequest\n    - impl: impl TryFrom<types::ResponseRouterData<F, BraintreePSyncResponse, T, types::PaymentsResponseData>> for types::RouterData<F, T, types::PaymentsResponseData>\n    - impl: impl TryFrom<BraintreeMeta> for BraintreeClientTokenRequest\n    - impl: impl TryFrom<(\n&BraintreeRouterData<&types::PaymentsAuthorizeRouterData>,\nBraintreeMeta,\n)> for CardPaymentRequest\n    - impl: impl TryFrom<&BraintreeRouterData<&types::PaymentsCompleteAuthorizeRouterData>> for CardPaymentRequest\n    - impl: impl types::transformers::ForeignFrom<&str> for api_models::webhooks::IncomingWebhookEvent\n\n**transformers.rs**\n  Remove:\n    - struct: pub::DeviceData\n    - struct: pub::PaymentOptions\n    - struct: pub::TransactionBody\n  Add:\n    - function: private::try_from\n    - struct: pub::GenericBraintreeRequest\n    - struct: pub::GenericVariableInput\n    - struct: pub::BraintreeRouterData\n    - struct: pub::BraintreeErrorResponse\n    - struct: pub::PaymentInput\n    - struct: pub::BraintreeMeta\n    - struct: pub::TransactionTiming\n    - struct: pub::AuthResponse\n    - struct: private::PaymentMethodInfo\n    - struct: pub::TransactionAuthChargeResponseBody\n    - struct: pub::DataAuthResponse\n    - struct: pub::AuthChargeCreditCard\n    - enum: pub::GenericBraintreeResponse\n    - enum: pub::ErrorResponses\n    - enum: pub::BraintreePaymentsRequest\n    - enum: pub::BraintreeAuthResponse\n    - enum: pub::BraintreeCompleteAuthResponse\n\n**admin.rs**\n  Modify existing code\n\n**api.rs**\n  Modify existing code"
  },
  {
    "prompt": "feat(worldpay): migrate to v7 (#6109)\n\nCo-authored-by: hyperswitch-bot[bot] <148525504+hyperswitch-bot[bot]@users.noreply.github.com>",
    "response": "Files to modify:\n\n\n**enums.rs**\n  Modify existing code\n\n**consts.rs**\n  Modify existing code\n\n**types.rs**\n  Add:\n    - function: pub::get_id\n    - function: pub::form_id_and_data\n    - function: pub::get_txn_id\n    - function: private::from\n    - function: private::build\n    - function: private::from_sql\n    - function: private::to_sql\n    - function: private::get_optional_connector_transaction_id\n    - function: private::get_connector_transaction_id\n    - function: private::get_optional_connector_refund_id\n    - enum: pub::ConnectorTransactionId\n    - trait: pub::ConnectorTransactionIdTrait\n    - impl: impl ConnectorTransactionId\n    - impl: impl From<String> for ConnectorTransactionId\n    - impl: impl Queryable<sql_types::Text, DB> for ConnectorTransactionId\n    - impl: impl FromSql<sql_types::Text, DB> for ConnectorTransactionId\n    - impl: impl ToSql<sql_types::Text, DB> for ConnectorTransactionId\n\n**types.rs**\n  Add:\n    - function: pub::get_id\n    - function: pub::form_id_and_data\n    - function: pub::get_txn_id\n    - function: private::from\n    - function: private::build\n    - function: private::from_sql\n    - function: private::to_sql\n    - function: private::get_optional_connector_transaction_id\n    - function: private::get_connector_transaction_id\n    - function: private::get_optional_connector_refund_id\n    - enum: pub::ConnectorTransactionId\n    - trait: pub::ConnectorTransactionIdTrait\n    - impl: impl ConnectorTransactionId\n    - impl: impl From<String> for ConnectorTransactionId\n    - impl: impl Queryable<sql_types::Text, DB> for ConnectorTransactionId\n    - impl: impl FromSql<sql_types::Text, DB> for ConnectorTransactionId\n    - impl: impl ToSql<sql_types::Text, DB> for ConnectorTransactionId\n\n**capture.rs**\n  Modify existing code\n\n**payment_attempt.rs**\n  Add:\n    - function: private::get_optional_connector_transaction_id\n    - function: private::get_optional_connector_transaction_id\n    - impl: impl ConnectorTransactionIdTrait for PaymentAttempt\n    - impl: impl ConnectorTransactionIdTrait for PaymentAttempt\n\n**capture.rs**\n  Modify existing code\n\n**refund.rs**\n  Add:\n    - function: private::get_optional_connector_refund_id\n    - function: private::get_connector_transaction_id\n    - impl: impl ConnectorTransactionIdTrait for Refund\n\n**schema.rs**\n  Modify existing code\n\n**schema_v2.rs**\n  Modify existing code\n\n**sample_data.rs**\n  Modify existing code\n\n**payment_attempt.rs**\n  Add:\n    - function: private::get_optional_connector_transaction_id\n    - function: private::get_optional_connector_transaction_id\n    - impl: impl ConnectorTransactionIdTrait for PaymentAttempt\n    - impl: impl ConnectorTransactionIdTrait for PaymentAttempt\n\n**router_request_types.rs**\n  Modify existing code\n\n**transformers.rs**\n  Modify existing code\n\n**worldpay.rs**\n  Remove:\n    - function: private::get_url\n    - struct: pub::Worldpay\n  Add:\n    - function: pub::new\n    - function: private::get_url\n    - struct: pub::Worldpay\n    - impl: impl Worldpay\n\n**requests.rs**\n  Modify existing code\n\n**response.rs**\n  Remove:\n    - function: pub::new\n    - function: pub::new\n    - function: pub::new\n    - function: pub::new\n    - struct: pub::PaymentInstrumentCard\n    - struct: pub::PaymentInstrumentCardExpiryDate\n    - struct: pub::PaymentInstrumentCardIssuer\n    - struct: pub::PaymentInstrumentCardNumber\n    - enum: pub::Outcome\n    - impl: impl Exemption\n    - impl: impl PaymentsResPaymentInstrument\n    - impl: impl PaymentInstrumentCardExpiryDate\n    - impl: impl PaymentInstrumentCardIssuer\n  Add:\n    - enum: pub::PaymentOutcome\n    - enum: pub::RefundOutcome\n\n**transformers.rs**\n  Modify existing code\n\n**transaction_flow.rs**\n  Modify existing code\n\n**payment_response.rs**\n  Modify existing code\n\n**transformers.rs**\n  Modify existing code\n\n**types.rs**\n  Add:\n    - function: pub::get_id\n    - function: pub::form_id_and_data\n    - function: pub::get_txn_id\n    - function: private::from\n    - function: private::build\n    - function: private::from_sql\n    - function: private::to_sql\n    - function: private::get_optional_connector_transaction_id\n    - function: private::get_connector_transaction_id\n    - function: private::get_optional_connector_refund_id\n    - enum: pub::ConnectorTransactionId\n    - trait: pub::ConnectorTransactionIdTrait\n    - impl: impl ConnectorTransactionId\n    - impl: impl From<String> for ConnectorTransactionId\n    - impl: impl Queryable<sql_types::Text, DB> for ConnectorTransactionId\n    - impl: impl FromSql<sql_types::Text, DB> for ConnectorTransactionId\n    - impl: impl ToSql<sql_types::Text, DB> for ConnectorTransactionId\n\n**refunds.rs**\n  Modify existing code\n\n**utils.rs**\n  Modify existing code\n\n**incoming.rs**\n  Modify existing code\n\n**address.rs**\n  Modify existing code\n\n**capture.rs**\n  Modify existing code\n\n**customers.rs**\n  Modify existing code\n\n**mandate.rs**\n  Modify existing code\n\n**payment_method.rs**\n  Modify existing code\n\n**refund.rs**\n  Add:\n    - function: private::get_optional_connector_refund_id\n    - function: private::get_connector_transaction_id\n    - impl: impl ConnectorTransactionIdTrait for Refund\n\n**reverse_lookup.rs**\n  Modify existing code\n\n**refund.rs**\n  Add:\n    - function: private::get_optional_connector_refund_id\n    - function: private::get_connector_transaction_id\n    - impl: impl ConnectorTransactionIdTrait for Refund\n\n**refund_event.rs**\n  Modify existing code\n\n**api.rs**\n  Modify existing code\n\n**payment_attempt.rs**\n  Add:\n    - function: private::get_optional_connector_transaction_id\n    - function: private::get_optional_connector_transaction_id\n    - impl: impl ConnectorTransactionIdTrait for PaymentAttempt\n    - impl: impl ConnectorTransactionIdTrait for PaymentAttempt\n\n**transformers.rs**\n  Modify existing code\n\n**sample_data.rs**\n  Modify existing code\n\n**worldpay.rs**\n  Remove:\n    - function: private::get_url\n    - struct: pub::Worldpay\n  Add:\n    - function: pub::new\n    - function: private::get_url\n    - struct: pub::Worldpay\n    - impl: impl Worldpay\n\n**lookup.rs**\n  Modify existing code\n\n**payment_attempt.rs**\n  Add:\n    - function: private::get_optional_connector_transaction_id\n    - function: private::get_optional_connector_transaction_id\n    - impl: impl ConnectorTransactionIdTrait for PaymentAttempt\n    - impl: impl ConnectorTransactionIdTrait for PaymentAttempt\n\n**payment_intent.rs**\n  Modify existing code\n\n**payout_attempt.rs**\n  Modify existing code\n\n**payouts.rs**\n  Modify existing code\n\n**kv_store.rs**\n  Modify existing code"
  },
  {
    "prompt": "refactor(router): renamed Verify flow to SetupMandate (#2455)",
    "response": "Files to modify:\n\n\n**mod.rs**\n  Modify existing code\n\n**setup_intents.rs**\n  Modify existing code\n\n**aci.rs**\n  Remove:\n    - impl: impl api::PreVerify for Aci\n  Add:\n    - impl: impl api::MandateSetup for Aci\n\n**adyen.rs**\n  Remove:\n    - impl: impl api::PreVerify for Adyen\n  Add:\n    - impl: impl api::MandateSetup for Adyen\n\n**airwallex.rs**\n  Remove:\n    - impl: impl api::PreVerify for Airwallex\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Airwallex\n  Add:\n    - impl: impl api::MandateSetup for Airwallex\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Airwallex\n\n**authorizedotnet.rs**\n  Remove:\n    - impl: impl api::PreVerify for Authorizedotnet\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Authorizedotnet\n  Add:\n    - impl: impl api::MandateSetup for Authorizedotnet\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Authorizedotnet\n\n**bambora.rs**\n  Remove:\n    - impl: impl api::PreVerify for Bambora\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Bambora\n  Add:\n    - impl: impl api::MandateSetup for Bambora\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Bambora\n\n**bitpay.rs**\n  Remove:\n    - impl: impl api::PreVerify for Bitpay\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Bitpay\n  Add:\n    - impl: impl api::MandateSetup for Bitpay\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Bitpay\n\n**bluesnap.rs**\n  Remove:\n    - impl: impl api::PreVerify for Bluesnap\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Bluesnap\n  Add:\n    - impl: impl api::MandateSetup for Bluesnap\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Bluesnap\n\n**boku.rs**\n  Remove:\n    - impl: impl api::PreVerify for Boku\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Boku\n  Add:\n    - impl: impl api::MandateSetup for Boku\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Boku\n\n**braintree.rs**\n  Remove:\n    - impl: impl api::PreVerify for Braintree\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Braintree\n  Add:\n    - impl: impl api::MandateSetup for Braintree\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Braintree\n\n**cashtocode.rs**\n  Remove:\n    - impl: impl api::PreVerify for Cashtocode\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Cashtocode\n  Add:\n    - impl: impl api::MandateSetup for Cashtocode\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Cashtocode\n\n**checkout.rs**\n  Remove:\n    - impl: impl api::PreVerify for Checkout\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Checkout\n  Add:\n    - impl: impl api::MandateSetup for Checkout\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Checkout\n\n**coinbase.rs**\n  Remove:\n    - impl: impl api::PreVerify for Coinbase\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Coinbase\n  Add:\n    - impl: impl api::MandateSetup for Coinbase\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Coinbase\n\n**cryptopay.rs**\n  Remove:\n    - impl: impl api::PreVerify for Cryptopay\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Cryptopay\n  Add:\n    - impl: impl api::MandateSetup for Cryptopay\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Cryptopay\n\n**cybersource.rs**\n  Remove:\n    - impl: impl api::PreVerify for Cybersource\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Cybersource\n  Add:\n    - impl: impl api::MandateSetup for Cybersource\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Cybersource\n\n**dlocal.rs**\n  Remove:\n    - impl: impl api::PreVerify for Dlocal\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Dlocal\n  Add:\n    - impl: impl api::MandateSetup for Dlocal\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Dlocal\n\n**dummyconnector.rs**\n  Remove:\n    - impl: impl api::PreVerify for DummyConnector<T>\n  Add:\n    - impl: impl api::MandateSetup for DummyConnector<T>\n\n**fiserv.rs**\n  Remove:\n    - impl: impl api::PreVerify for Fiserv\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Fiserv\n  Add:\n    - impl: impl api::MandateSetup for Fiserv\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Fiserv\n\n**forte.rs**\n  Remove:\n    - impl: impl api::PreVerify for Forte\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Forte\n  Add:\n    - impl: impl api::MandateSetup for Forte\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Forte\n\n**globalpay.rs**\n  Remove:\n    - impl: impl api::PreVerify for Globalpay\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Globalpay\n  Add:\n    - impl: impl api::MandateSetup for Globalpay\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Globalpay\n\n**globepay.rs**\n  Remove:\n    - impl: impl api::PreVerify for Globepay\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Globepay\n  Add:\n    - impl: impl api::MandateSetup for Globepay\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Globepay\n\n**gocardless.rs**\n  Remove:\n    - impl: impl api::PreVerify for Gocardless\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Gocardless\n  Add:\n    - impl: impl api::MandateSetup for Gocardless\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Gocardless\n\n**helcim.rs**\n  Remove:\n    - impl: impl api::PreVerify for Helcim\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Helcim\n  Add:\n    - impl: impl api::MandateSetup for Helcim\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Helcim\n\n**iatapay.rs**\n  Remove:\n    - impl: impl api::PreVerify for Iatapay\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Iatapay\n  Add:\n    - impl: impl api::MandateSetup for Iatapay\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Iatapay\n\n**klarna.rs**\n  Remove:\n    - impl: impl api::PreVerify for Klarna\n  Add:\n    - impl: impl api::MandateSetup for Klarna\n\n**mollie.rs**\n  Remove:\n    - impl: impl api::PreVerify for Mollie\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Mollie\n  Add:\n    - impl: impl api::MandateSetup for Mollie\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Mollie\n\n**multisafepay.rs**\n  Remove:\n    - impl: impl api::PreVerify for Multisafepay\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Multisafepay\n  Add:\n    - impl: impl api::MandateSetup for Multisafepay\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Multisafepay\n\n**nexinets.rs**\n  Remove:\n    - impl: impl api::PreVerify for Nexinets\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Nexinets\n  Add:\n    - impl: impl api::MandateSetup for Nexinets\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Nexinets\n\n**nmi.rs**\n  Remove:\n    - impl: impl api::PreVerify for Nmi\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for CustomResult<types::VerifyRouterData, errors::ConnectorError>\n  Add:\n    - impl: impl api::MandateSetup for Nmi\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for CustomResult<types::SetupMandateRouterData, errors::ConnectorError>\n\n**transformers.rs**\n  Modify existing code\n\n**noon.rs**\n  Remove:\n    - impl: impl api::PreVerify for Noon\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Noon\n  Add:\n    - impl: impl api::MandateSetup for Noon\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Noon\n\n**nuvei.rs**\n  Remove:\n    - impl: impl api::PreVerify for Nuvei\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Nuvei\n  Add:\n    - impl: impl api::MandateSetup for Nuvei\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Nuvei\n\n**opayo.rs**\n  Remove:\n    - impl: impl api::PreVerify for Opayo\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Opayo\n  Add:\n    - impl: impl api::MandateSetup for Opayo\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Opayo\n\n**opennode.rs**\n  Remove:\n    - impl: impl api::PreVerify for Opennode\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Opennode\n  Add:\n    - impl: impl api::MandateSetup for Opennode\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Opennode\n\n**payeezy.rs**\n  Remove:\n    - impl: impl api::PreVerify for Payeezy\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Payeezy\n  Add:\n    - impl: impl api::MandateSetup for Payeezy\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Payeezy\n\n**payme.rs**\n  Remove:\n    - impl: impl api::PreVerify for Payme\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Payme\n  Add:\n    - impl: impl api::MandateSetup for Payme\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Payme\n\n**paypal.rs**\n  Remove:\n    - impl: impl api::PreVerify for Paypal\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Paypal\n  Add:\n    - impl: impl api::MandateSetup for Paypal\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Paypal\n\n**payu.rs**\n  Remove:\n    - impl: impl api::PreVerify for Payu\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Payu\n  Add:\n    - impl: impl api::MandateSetup for Payu\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Payu\n\n**powertranz.rs**\n  Remove:\n    - impl: impl api::PreVerify for Powertranz\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Powertranz\n  Add:\n    - impl: impl api::MandateSetup for Powertranz\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Powertranz\n\n**rapyd.rs**\n  Remove:\n    - impl: impl api::PreVerify for Rapyd\n  Add:\n    - impl: impl api::MandateSetup for Rapyd\n\n**shift4.rs**\n  Remove:\n    - impl: impl api::PreVerify for Shift4\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Shift4\n  Add:\n    - impl: impl api::MandateSetup for Shift4\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Shift4\n\n**square.rs**\n  Remove:\n    - impl: impl api::PreVerify for Square\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Square\n  Add:\n    - impl: impl api::MandateSetup for Square\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Square\n\n**stax.rs**\n  Remove:\n    - impl: impl api::PreVerify for Stax\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Stax\n  Add:\n    - impl: impl api::MandateSetup for Stax\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Stax\n\n**stripe.rs**\n  Remove:\n    - impl: impl api::PreVerify for Stripe\n  Add:\n    - impl: impl api::MandateSetup for Stripe\n\n**transformers.rs**\n  Modify existing code\n\n**trustpay.rs**\n  Remove:\n    - impl: impl api::PreVerify for Trustpay\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Trustpay\n  Add:\n    - impl: impl api::MandateSetup for Trustpay\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Trustpay\n\n**tsys.rs**\n  Remove:\n    - impl: impl api::PreVerify for Tsys\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Tsys\n  Add:\n    - impl: impl api::MandateSetup for Tsys\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Tsys\n\n**wise.rs**\n  Remove:\n    - impl: impl api::PreVerify for Wise\n  Add:\n    - impl: impl api::MandateSetup for Wise\n\n**worldline.rs**\n  Remove:\n    - impl: impl api::PreVerify for Worldline\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Worldline\n  Add:\n    - impl: impl api::MandateSetup for Worldline\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Worldline\n\n**worldpay.rs**\n  Remove:\n    - impl: impl api::PreVerify for Worldpay\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Worldpay\n  Add:\n    - impl: impl api::MandateSetup for Worldpay\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Worldpay\n\n**zen.rs**\n  Remove:\n    - impl: impl api::PreVerify for Zen\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Zen\n  Add:\n    - impl: impl api::MandateSetup for Zen\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Zen\n\n**utils.rs**\n  Modify existing code\n\n**flows.rs**\n  Remove:\n    - mod: pub::verify_flow\n  Add:\n    - mod: pub::setup_mandate_flow\n\n**setup_mandate_flow.rs**\n  Modify existing code\n\n**payment_response.rs**\n  Modify existing code\n\n**transformers.rs**\n  Modify existing code\n\n**payments.rs**\n  Modify existing code\n\n**types.rs**\n  Add:\n    - struct: pub::SetupMandateRequestData\n\n**payments.rs**\n  Modify existing code\n\n**operation.rs**\n  Modify existing code"
  },
  {
    "prompt": "feat(payments): store and propagate additional wallet pm details in payments response (#5869)\n\nCo-authored-by: hyperswitch-bot[bot] <148525504+hyperswitch-bot[bot]@users.noreply.github.com>",
    "response": "Files to modify:\n\n\n**payments.rs**\n  Modify existing code\n\n**additional_info.rs**\n  Add:\n    - struct: pub::WalletAdditionalDataForCard\n\n**openapi.rs**\n  Modify existing code\n\n**openapi_v2.rs**\n  Modify existing code\n\n**helpers.rs**\n  Modify existing code"
  },
  {
    "prompt": "feat(connector): [fiuu] Add support for payment and refund webhooks (#6315)\n\nCo-authored-by: Chikke Srujan <chikke.srujan@Chikke-Srujan-N7WRTY72X7.local>",
    "response": "Files to modify:\n\n\n**fiuu.rs**\n  Add:\n    - function: private::get_webhook_source_verification_algorithm\n    - function: private::get_webhook_source_verification_signature\n    - function: private::get_webhook_source_verification_message\n    - function: private::get_webhook_object_reference_id\n\n**transformers.rs**\n  Add:\n    - function: private::from\n    - function: private::from\n    - function: private::from\n    - function: private::from\n    - struct: pub::FiuuWebhooksPaymentResponse\n    - struct: pub::FiuuWebhooksRefundResponse\n    - struct: pub::FiuuWebhookSignauture\n    - struct: pub::FiuuWebhookResourceId\n    - struct: pub::FiuWebhookEvent\n    - enum: pub::FiuuPaymentResponse\n    - enum: pub::FiuuWebhooksResponse\n    - enum: pub::FiuuRefundsWebhookStatus\n    - enum: pub::FiuuWebhooksRefundType\n    - enum: pub::FiuuPaymentWebhookStatus\n    - impl: impl TryFrom<PaymentsSyncResponseRouterData<FiuuPaymentResponse>> for PaymentsSyncRouterData\n    - impl: impl From<FiuuPaymentWebhookStatus> for StatCode\n    - impl: impl From<FiuuPaymentWebhookStatus> for api_models::webhooks::IncomingWebhookEvent\n    - impl: impl From<FiuuRefundsWebhookStatus> for api_models::webhooks::IncomingWebhookEvent\n    - impl: impl From<FiuuRefundsWebhookStatus> for enums::RefundStatus"
  },
  {
    "prompt": "feat(router): Deduplicate PML response and populate bank details (V2) (#8583)",
    "response": "Files to modify:\n\n\n**payment_methods.rs**\n  Modify existing code\n\n**payments.rs**\n  Modify existing code\n\n**enums.rs**\n  Modify existing code\n\n**vault.rs**\n  Modify existing code\n\n**payment_methods.rs**\n  Modify existing code"
  },
  {
    "prompt": "feat(connector): [nordea] template code (#8056)\n\nCo-authored-by: hyperswitch-bot[bot] <148525504+hyperswitch-bot[bot]@users.noreply.github.com>",
    "response": "Files to modify:\n\n\n**connector_enums.rs**\n  Modify existing code\n\n**connector.rs**\n  Modify existing code\n\n**connectors.rs**\n  Add:\n    - mod: pub::nordea\n\n**nordea.rs**\n  Add:\n    - function: pub::new\n    - function: private::build_headers\n    - function: private::id\n    - function: private::get_currency_unit\n    - function: private::common_get_content_type\n    - function: private::base_url\n    - function: private::get_auth_header\n    - function: private::build_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_webhook_object_reference_id\n    - function: private::get_webhook_event_type\n    - function: private::get_webhook_resource_object\n    - struct: pub::Nordea\n    - impl: impl Nordea\n    - impl: impl api::Payment for Nordea\n    - impl: impl api::PaymentSession for Nordea\n    - impl: impl api::ConnectorAccessToken for Nordea\n    - impl: impl api::MandateSetup for Nordea\n    - impl: impl api::PaymentAuthorize for Nordea\n    - impl: impl api::PaymentSync for Nordea\n    - impl: impl api::PaymentCapture for Nordea\n    - impl: impl api::PaymentVoid for Nordea\n    - impl: impl api::Refund for Nordea\n    - impl: impl api::RefundExecute for Nordea\n    - impl: impl api::RefundSync for Nordea\n    - impl: impl api::PaymentToken for Nordea\n    - impl: impl ConnectorIntegration<PaymentMethodToken, PaymentMethodTokenizationData, PaymentsResponseData> for Nordea\n    - impl: impl ConnectorCommonExt<Flow, Request, Response> for Nordea\n    - impl: impl ConnectorCommon for Nordea\n    - impl: impl ConnectorValidation for Nordea\n    - impl: impl ConnectorIntegration<Session, PaymentsSessionData, PaymentsResponseData> for Nordea\n    - impl: impl ConnectorIntegration<AccessTokenAuth, AccessTokenRequestData, AccessToken> for Nordea\n    - impl: impl ConnectorIntegration<SetupMandate, SetupMandateRequestData, PaymentsResponseData> for Nordea\n    - impl: impl ConnectorIntegration<Authorize, PaymentsAuthorizeData, PaymentsResponseData> for Nordea\n    - impl: impl ConnectorIntegration<PSync, PaymentsSyncData, PaymentsResponseData> for Nordea\n    - impl: impl ConnectorIntegration<Capture, PaymentsCaptureData, PaymentsResponseData> for Nordea\n    - impl: impl ConnectorIntegration<Void, PaymentsCancelData, PaymentsResponseData> for Nordea\n    - impl: impl ConnectorIntegration<Execute, RefundsData, RefundsResponseData> for Nordea\n    - impl: impl ConnectorIntegration<RSync, RefundsData, RefundsResponseData> for Nordea\n    - impl: impl webhooks::IncomingWebhook for Nordea\n    - impl: impl ConnectorSpecifications for Nordea\n    - mod: pub::transformers\n\n**transformers.rs**\n  Add:\n    - function: private::from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::from\n    - function: private::try_from\n    - function: private::try_from\n    - struct: pub::NordeaRouterData\n    - struct: pub::NordeaPaymentsRequest\n    - struct: pub::NordeaCard\n    - struct: pub::NordeaAuthType\n    - struct: pub::NordeaPaymentsResponse\n    - struct: pub::NordeaRefundRequest\n    - struct: pub::RefundResponse\n    - struct: pub::NordeaErrorResponse\n    - enum: pub::NordeaPaymentStatus\n    - enum: pub::RefundStatus\n    - impl: impl From<(StringMinorUnit, T)> for NordeaRouterData<T>\n    - impl: impl TryFrom<&NordeaRouterData<&PaymentsAuthorizeRouterData>> for NordeaPaymentsRequest\n    - impl: impl TryFrom<&ConnectorAuthType> for NordeaAuthType\n    - impl: impl From<NordeaPaymentStatus> for common_enums::AttemptStatus\n    - impl: impl TryFrom<ResponseRouterData<F, NordeaPaymentsResponse, T, PaymentsResponseData>> for RouterData<F, T, PaymentsResponseData>\n    - impl: impl TryFrom<&NordeaRouterData<&RefundsRouterData<F>>> for NordeaRefundRequest\n    - impl: impl From<RefundStatus> for enums::RefundStatus\n    - impl: impl TryFrom<RefundsResponseRouterData<Execute, RefundResponse>> for RefundsRouterData<Execute>\n    - impl: impl TryFrom<RefundsResponseRouterData<RSync, RefundResponse>> for RefundsRouterData<RSync>\n\n**default_implementations.rs**\n  Modify existing code\n\n**default_implementations_v2.rs**\n  Modify existing code\n\n**configs.rs**\n  Modify existing code\n\n**connector.rs**\n  Modify existing code\n\n**admin.rs**\n  Modify existing code\n\n**api.rs**\n  Modify existing code\n\n**transformers.rs**\n  Add:\n    - function: private::from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::from\n    - function: private::try_from\n    - function: private::try_from\n    - struct: pub::NordeaRouterData\n    - struct: pub::NordeaPaymentsRequest\n    - struct: pub::NordeaCard\n    - struct: pub::NordeaAuthType\n    - struct: pub::NordeaPaymentsResponse\n    - struct: pub::NordeaRefundRequest\n    - struct: pub::RefundResponse\n    - struct: pub::NordeaErrorResponse\n    - enum: pub::NordeaPaymentStatus\n    - enum: pub::RefundStatus\n    - impl: impl From<(StringMinorUnit, T)> for NordeaRouterData<T>\n    - impl: impl TryFrom<&NordeaRouterData<&PaymentsAuthorizeRouterData>> for NordeaPaymentsRequest\n    - impl: impl TryFrom<&ConnectorAuthType> for NordeaAuthType\n    - impl: impl From<NordeaPaymentStatus> for common_enums::AttemptStatus\n    - impl: impl TryFrom<ResponseRouterData<F, NordeaPaymentsResponse, T, PaymentsResponseData>> for RouterData<F, T, PaymentsResponseData>\n    - impl: impl TryFrom<&NordeaRouterData<&RefundsRouterData<F>>> for NordeaRefundRequest\n    - impl: impl From<RefundStatus> for enums::RefundStatus\n    - impl: impl TryFrom<RefundsResponseRouterData<Execute, RefundResponse>> for RefundsRouterData<Execute>\n    - impl: impl TryFrom<RefundsResponseRouterData<RSync, RefundResponse>> for RefundsRouterData<RSync>\n\n**main.rs**\n  Add:\n    - mod: private::nordea\n\n**nordea.rs**\n  Add:\n    - function: pub::new\n    - function: private::build_headers\n    - function: private::id\n    - function: private::get_currency_unit\n    - function: private::common_get_content_type\n    - function: private::base_url\n    - function: private::get_auth_header\n    - function: private::build_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_webhook_object_reference_id\n    - function: private::get_webhook_event_type\n    - function: private::get_webhook_resource_object\n    - struct: pub::Nordea\n    - impl: impl Nordea\n    - impl: impl api::Payment for Nordea\n    - impl: impl api::PaymentSession for Nordea\n    - impl: impl api::ConnectorAccessToken for Nordea\n    - impl: impl api::MandateSetup for Nordea\n    - impl: impl api::PaymentAuthorize for Nordea\n    - impl: impl api::PaymentSync for Nordea\n    - impl: impl api::PaymentCapture for Nordea\n    - impl: impl api::PaymentVoid for Nordea\n    - impl: impl api::Refund for Nordea\n    - impl: impl api::RefundExecute for Nordea\n    - impl: impl api::RefundSync for Nordea\n    - impl: impl api::PaymentToken for Nordea\n    - impl: impl ConnectorIntegration<PaymentMethodToken, PaymentMethodTokenizationData, PaymentsResponseData> for Nordea\n    - impl: impl ConnectorCommonExt<Flow, Request, Response> for Nordea\n    - impl: impl ConnectorCommon for Nordea\n    - impl: impl ConnectorValidation for Nordea\n    - impl: impl ConnectorIntegration<Session, PaymentsSessionData, PaymentsResponseData> for Nordea\n    - impl: impl ConnectorIntegration<AccessTokenAuth, AccessTokenRequestData, AccessToken> for Nordea\n    - impl: impl ConnectorIntegration<SetupMandate, SetupMandateRequestData, PaymentsResponseData> for Nordea\n    - impl: impl ConnectorIntegration<Authorize, PaymentsAuthorizeData, PaymentsResponseData> for Nordea\n    - impl: impl ConnectorIntegration<PSync, PaymentsSyncData, PaymentsResponseData> for Nordea\n    - impl: impl ConnectorIntegration<Capture, PaymentsCaptureData, PaymentsResponseData> for Nordea\n    - impl: impl ConnectorIntegration<Void, PaymentsCancelData, PaymentsResponseData> for Nordea\n    - impl: impl ConnectorIntegration<Execute, RefundsData, RefundsResponseData> for Nordea\n    - impl: impl ConnectorIntegration<RSync, RefundsData, RefundsResponseData> for Nordea\n    - impl: impl webhooks::IncomingWebhook for Nordea\n    - impl: impl ConnectorSpecifications for Nordea\n    - mod: pub::transformers\n\n**connector_auth.rs**\n  Modify existing code"
  },
  {
    "prompt": "docs: add openapi docs for customers v2 (#5926)\n\nCo-authored-by: hyperswitch-bot[bot] <148525504+hyperswitch-bot[bot]@users.noreply.github.com>",
    "response": "Files to modify:\n\n\n**openapi_v2.rs**\n  Modify existing code\n\n**customers.rs**\n  Add:\n    - function: pub::customers_list\n    - function: pub::customers_create\n    - function: pub::customers_retrieve\n    - function: pub::customers_update\n    - function: pub::customers_delete"
  },
  {
    "prompt": "Feat(connector): [Fiuu] Add Card Flows (#5786)\n\nCo-authored-by: hyperswitch-bot[bot] <148525504+hyperswitch-bot[bot]@users.noreply.github.com>",
    "response": "Files to modify:\n\n\n**enums.rs**\n  Modify existing code\n\n**enums.rs**\n  Modify existing code\n\n**connector.rs**\n  Modify existing code\n\n**fiuu.rs**\n  Add:\n    - function: private::parse_response\n\n**transformers.rs**\n  Remove:\n    - function: private::from\n    - struct: pub::FiuuCard\n    - struct: pub::FiuuAuthType\n  Add:\n    - function: private::try_from\n    - function: private::try_from\n    - struct: pub::FiuuAuthType\n    - struct: pub::FiuuPaymentsSuccessResponse\n    - struct: pub::ThreeDSResponseData\n    - struct: pub::NonThreeDSResponseData\n    - enum: private::TxnType\n    - enum: private::TxnChannel\n    - enum: pub::RequestType\n    - enum: pub::RequestData\n    - impl: impl TryFrom<&ConnectorAuthType> for FiuuAuthType\n    - impl: impl TryFrom<Option<CaptureMethod>> for TxnType\n\n**types.rs**\n  Modify existing code\n\n**defaults.rs**\n  Modify existing code\n\n**admin.rs**\n  Modify existing code\n\n**api.rs**\n  Modify existing code\n\n**transformers.rs**\n  Remove:\n    - function: private::from\n    - struct: pub::FiuuCard\n    - struct: pub::FiuuAuthType\n  Add:\n    - function: private::try_from\n    - function: private::try_from\n    - struct: pub::FiuuAuthType\n    - struct: pub::FiuuPaymentsSuccessResponse\n    - struct: pub::ThreeDSResponseData\n    - struct: pub::NonThreeDSResponseData\n    - enum: private::TxnType\n    - enum: private::TxnChannel\n    - enum: pub::RequestType\n    - enum: pub::RequestData\n    - impl: impl TryFrom<&ConnectorAuthType> for FiuuAuthType\n    - impl: impl TryFrom<Option<CaptureMethod>> for TxnType"
  }
]