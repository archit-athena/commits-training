{"prompt": "feat(core): Add Support for Payments Dynamic Tax Calculation Based on Shipping Address (#5619)\n\nCo-authored-by: hyperswitch-bot[bot] <148525504+hyperswitch-bot[bot]@users.noreply.github.com>", "response": "Files to modify:\n\n\n**admin.rs**\n  Modify existing code\n\n**enums.rs**\n  Add:\n    - function: pub::convert_tax_connector\n    - enum: private::TaxConnectors\n\n**payment.rs**\n  Add:\n    - function: private::get_api_event_type\n    - impl: impl ApiEventMetric for PaymentsDynamicTaxCalculationRequest\n    - impl: impl ApiEventMetric for PaymentsDynamicTaxCalculationResponse\n\n**payments.rs**\n  Add:\n    - struct: pub::PaymentsDynamicTaxCalculationRequest\n    - struct: pub::PaymentsDynamicTaxCalculationResponse\n\n**enums.rs**\n  Add:\n    - function: pub::convert_tax_connector\n    - enum: private::TaxConnectors\n\n**connector.rs**\n  Modify existing code\n\n**business_profile.rs**\n  Modify existing code\n\n**payment_intent.rs**\n  Add:\n    - struct: pub::TaxDetails\n    - struct: pub::PaymentMethodTypeTax\n    - struct: pub::DefaultTax\n\n**schema.rs**\n  Modify existing code\n\n**schema_v2.rs**\n  Modify existing code\n\n**taxjar.rs**\n  Remove:\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::build_request\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - impl: impl ConnectorValidation for Taxjar\n    - impl: impl ConnectorIntegration<Session, PaymentsSessionData, PaymentsResponseData> for Taxjar\n    - impl: impl ConnectorIntegration<Authorize, PaymentsAuthorizeData, PaymentsResponseData> for Taxjar\n    - impl: impl ConnectorIntegration<Capture, PaymentsCaptureData, PaymentsResponseData> for Taxjar\n    - impl: impl ConnectorIntegration<Execute, RefundsData, RefundsResponseData> for Taxjar\n    - impl: impl ConnectorIntegration<RSync, RefundsData, RefundsResponseData> for Taxjar\n  Add:\n    - impl: impl api::PaymentTaxCalculation for Taxjar\n    - impl: impl ConnectorValidation for Taxjar\n    - impl: impl ConnectorIntegration<Session, PaymentsSessionData, PaymentsResponseData> for Taxjar\n    - impl: impl ConnectorIntegration<Authorize, PaymentsAuthorizeData, PaymentsResponseData> for Taxjar\n    - impl: impl ConnectorIntegration<CalculateTax, PaymentsTaxCalculationData, TaxCalculationResponseData> for Taxjar\n    - impl: impl ConnectorIntegration<PSync, PaymentsSyncData, PaymentsResponseData> for Taxjar\n    - impl: impl ConnectorIntegration<Capture, PaymentsCaptureData, PaymentsResponseData> for Taxjar\n    - impl: impl ConnectorIntegration<Execute, RefundsData, RefundsResponseData> for Taxjar\n    - impl: impl ConnectorIntegration<RSync, RefundsData, RefundsResponseData> for Taxjar\n\n**transformers.rs**\n  Add:\n    - function: private::from\n    - struct: pub::LineItem\n\n**default_implementations.rs**\n  Modify existing code\n\n**default_implementations_v2.rs**\n  Add:\n    - impl: impl PaymentTaxCalculationV2 for $connector\n    - impl: impl PaymentSessionUpdateV2 for $connector\n    - impl: impl ConnectorIntegrationV2<\nCalculateTax,\nPaymentFlowData,\nPaymentsTaxCalculationData,\nTaxCalculationResponseData,\n> for $connector\n    - impl: impl ConnectorIntegrationV2<\nSdkSessionUpdate,\nPaymentFlowData,\nSdkPaymentsSessionUpdateData,\nPaymentsResponseData,\n> for $connector\n\n**utils.rs**\n  Add:\n    - function: pub::convert_back_amount_to_minor_units\n    - function: private::get_billing_zip\n    - function: private::get_billing_state\n    - function: private::get_billing_state_code\n    - function: private::to_state_code\n    - function: private::to_state_code_as_optional\n    - function: private::get_optional_city\n    - function: private::get_optional_line1\n    - function: private::foreign_try_from\n    - function: private::foreign_try_from\n    - trait: pub::ForeignTryFrom\n    - impl: impl ForeignTryFrom<String> for UsStatesAbbreviation\n    - impl: impl ForeignTryFrom<String> for CanadaStatesAbbreviation\n\n**business_profile.rs**\n  Modify existing code\n\n**payments.rs**\n  Add:\n    - struct: pub::PaymentsDynamicTaxCalculationRequest\n    - struct: pub::PaymentsDynamicTaxCalculationResponse\n\n**payment_attempt.rs**\n  Modify existing code\n\n**payment_intent.rs**\n  Add:\n    - struct: pub::TaxDetails\n    - struct: pub::PaymentMethodTypeTax\n    - struct: pub::DefaultTax\n\n**payments.rs**\n  Add:\n    - struct: pub::PaymentsDynamicTaxCalculationRequest\n    - struct: pub::PaymentsDynamicTaxCalculationResponse\n\n**router_request_types.rs**\n  Add:\n    - struct: pub::PaymentsTaxCalculationData\n    - struct: pub::SdkPaymentsSessionUpdateData\n\n**router_response_types.rs**\n  Add:\n    - struct: pub::TaxCalculationResponseData\n\n**types.rs**\n  Modify existing code\n\n**payments.rs**\n  Add:\n    - struct: pub::PaymentsDynamicTaxCalculationRequest\n    - struct: pub::PaymentsDynamicTaxCalculationResponse\n\n**payments_v2.rs**\n  Add:\n    - trait: pub::PaymentTaxCalculationV2\n    - trait: pub::PaymentSessionUpdateV2\n\n**types.rs**\n  Modify existing code\n\n**openapi.rs**\n  Modify existing code\n\n**payments.rs**\n  Add:\n    - struct: pub::PaymentsDynamicTaxCalculationRequest\n    - struct: pub::PaymentsDynamicTaxCalculationResponse\n\n**admin.rs**\n  Modify existing code\n\n**payments.rs**\n  Add:\n    - struct: pub::PaymentsDynamicTaxCalculationRequest\n    - struct: pub::PaymentsDynamicTaxCalculationResponse\n\n**connector_integration_v2_impls.rs**\n  Add:\n    - impl: impl api::PaymentTaxCalculationV2 for connector::DummyConnector<T>\n    - impl: impl api::PaymentSessionUpdateV2 for connector::DummyConnector<T>\n    - impl: impl services::ConnectorIntegrationV2<\napi::CalculateTax,\ntypes::PaymentFlowData,\ntypes::PaymentsTaxCalculationData,\ntypes::TaxCalculationResponseData,\n> for connector::DummyConnector<T>\n    - impl: impl services::ConnectorIntegrationV2<\napi::SdkSessionUpdate,\ntypes::PaymentFlowData,\ntypes::SdkPaymentsSessionUpdateData,\ntypes::PaymentsResponseData,\n> for connector::DummyConnector<T>\n    - impl: impl api::PaymentTaxCalculationV2 for $connector\n    - impl: impl api::PaymentSessionUpdateV2 for $connector\n    - impl: impl services::ConnectorIntegrationV2<\napi::CalculateTax,\ntypes::PaymentFlowData,\ntypes::PaymentsTaxCalculationData,\ntypes::TaxCalculationResponseData,\n> for $connector\n    - impl: impl services::ConnectorIntegrationV2<\napi::SdkSessionUpdate,\ntypes::PaymentFlowData,\ntypes::SdkPaymentsSessionUpdateData,\ntypes::PaymentsResponseData,\n> for $connector\n\n**flows.rs**\n  Add:\n    - impl: impl api::PaymentTaxCalculation for connector::DummyConnector<T>\n    - impl: impl services::ConnectorIntegration<\napi::CalculateTax,\ntypes::PaymentsTaxCalculationData,\ntypes::TaxCalculationResponseData,\n> for connector::DummyConnector<T>\n    - impl: impl api::PaymentSessionUpdate for connector::DummyConnector<T>\n    - impl: impl services::ConnectorIntegration<\napi::SdkSessionUpdate,\ntypes::SdkPaymentsSessionUpdateData,\ntypes::PaymentsResponseData,\n> for connector::DummyConnector<T>\n    - mod: pub::tax_calculation_flow\n\n**tax_calculation_flow.rs**\n  Add:\n    - function: private::construct_router_data\n    - function: private::get_merchant_recipient_data\n    - function: private::decide_flows\n    - function: private::add_access_token\n    - function: private::build_flow_specific_connector_request\n    - impl: impl ConstructFlowSpecificData<\napi::SdkSessionUpdate,\ntypes::SdkPaymentsSessionUpdateData,\ntypes::PaymentsResponseData,\n> for PaymentData<api::SdkSessionUpdate>\n    - impl: impl Feature<api::SdkSessionUpdate, types::SdkPaymentsSessionUpdateData> for types::RouterData<\napi::SdkSessionUpdate,\ntypes::SdkPaymentsSessionUpdateData,\ntypes::PaymentsResponseData,\n>\n\n**helpers.rs**\n  Modify existing code\n\n**operations.rs**\n  Add:\n    - function: private::payments_dynamic_tax_calculation\n    - mod: pub::tax_calculation\n\n**payment_approve.rs**\n  Modify existing code\n\n**payment_cancel.rs**\n  Modify existing code\n\n**payment_capture.rs**\n  Modify existing code\n\n**payment_complete_authorize.rs**\n  Modify existing code\n\n**payment_confirm.rs**\n  Modify existing code\n\n**payment_create.rs**\n  Add:\n    - function: private::payments_dynamic_tax_calculation\n\n**payment_reject.rs**\n  Modify existing code\n\n**payment_response.rs**\n  Add:\n    - function: private::update_tracker\n    - impl: impl PostUpdateTracker<F, PaymentData<F>, types::SdkPaymentsSessionUpdateData> for PaymentResponse\n\n**payment_session.rs**\n  Modify existing code\n\n**payment_start.rs**\n  Modify existing code\n\n**payment_status.rs**\n  Modify existing code\n\n**payment_update.rs**\n  Add:\n    - function: private::payments_dynamic_tax_calculation\n\n**payments_incremental_authorization.rs**\n  Modify existing code\n\n**tax_calculation.rs**\n  Add:\n    - function: private::get_trackers\n    - function: private::get_or_create_customer_details\n    - function: private::payments_dynamic_tax_calculation\n    - function: private::make_pm_data\n    - function: private::get_connector\n    - function: private::guard_payment_against_blocklist\n    - function: private::update_trackers\n    - function: private::validate_request\n    - struct: pub::PaymentSessionUpdate\n    - impl: impl GetTracker<F, PaymentData<F>, api::PaymentsDynamicTaxCalculationRequest> for PaymentSessionUpdate\n    - impl: impl Domain<F, api::PaymentsDynamicTaxCalculationRequest> for PaymentSessionUpdate\n    - impl: impl UpdateTracker<F, PaymentData<F>, api::PaymentsDynamicTaxCalculationRequest> for PaymentSessionUpdate\n    - impl: impl ValidateRequest<F, api::PaymentsDynamicTaxCalculationRequest> for PaymentSessionUpdate\n\n**transformers.rs**\n  Add:\n    - function: private::from\n    - struct: pub::LineItem\n\n**utils.rs**\n  Add:\n    - function: pub::convert_back_amount_to_minor_units\n    - function: private::get_billing_zip\n    - function: private::get_billing_state\n    - function: private::get_billing_state_code\n    - function: private::to_state_code\n    - function: private::to_state_code_as_optional\n    - function: private::get_optional_city\n    - function: private::get_optional_line1\n    - function: private::foreign_try_from\n    - function: private::foreign_try_from\n    - trait: pub::ForeignTryFrom\n    - impl: impl ForeignTryFrom<String> for UsStatesAbbreviation\n    - impl: impl ForeignTryFrom<String> for CanadaStatesAbbreviation\n\n**app.rs**\n  Modify existing code\n\n**lock_utils.rs**\n  Modify existing code\n\n**payments.rs**\n  Add:\n    - struct: pub::PaymentsDynamicTaxCalculationRequest\n    - struct: pub::PaymentsDynamicTaxCalculationResponse\n\n**api.rs**\n  Add:\n    - function: private::get_client_secret\n    - impl: impl Authenticate for api_models::payments::PaymentsDynamicTaxCalculationRequest\n\n**types.rs**\n  Modify existing code\n\n**api.rs**\n  Add:\n    - function: private::get_client_secret\n    - impl: impl Authenticate for api_models::payments::PaymentsDynamicTaxCalculationRequest\n\n**payments.rs**\n  Add:\n    - struct: pub::PaymentsDynamicTaxCalculationRequest\n    - struct: pub::PaymentsDynamicTaxCalculationResponse\n\n**payments_v2.rs**\n  Add:\n    - trait: pub::PaymentTaxCalculationV2\n    - trait: pub::PaymentSessionUpdateV2\n\n**transformers.rs**\n  Add:\n    - function: private::from\n    - struct: pub::LineItem\n\n**sample_data.rs**\n  Modify existing code\n\n**payme.rs**\n  Modify existing code\n\n**utils.rs**\n  Add:\n    - function: pub::convert_back_amount_to_minor_units\n    - function: private::get_billing_zip\n    - function: private::get_billing_state\n    - function: private::get_billing_state_code\n    - function: private::to_state_code\n    - function: private::to_state_code_as_optional\n    - function: private::get_optional_city\n    - function: private::get_optional_line1\n    - function: private::foreign_try_from\n    - function: private::foreign_try_from\n    - trait: pub::ForeignTryFrom\n    - impl: impl ForeignTryFrom<String> for UsStatesAbbreviation\n    - impl: impl ForeignTryFrom<String> for CanadaStatesAbbreviation\n\n**zen.rs**\n  Modify existing code\n\n**operation.rs**\n  Modify existing code\n\n**types.rs**\n  Modify existing code"}
