{"prompt": "feat(core): Add support for Void after Capture (#8839)\n\nCo-authored-by: hyperswitch-bot[bot] <148525504+hyperswitch-bot[bot]@users.noreply.github.com>", "response": "Files to modify:\n\n\n**payment.rs**\n  Add:\n    - function: private::get_api_event_type\n    - impl: impl ApiEventMetric for PaymentsCancelPostCaptureRequest\n\n**open_router.rs**\n  Modify existing code\n\n**payments.rs**\n  Add:\n    - struct: pub::PaymentsCancelPostCaptureRequest\n\n**enums.rs**\n  Modify existing code\n\n**transformers.rs**\n  Modify existing code\n\n**transformers.rs**\n  Modify existing code\n\n**transformers.rs**\n  Modify existing code\n\n**transformers.rs**\n  Modify existing code\n\n**worldpayvantiv.rs**\n  Add:\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - impl: impl api::PaymentPostCaptureVoid for Worldpayvantiv\n    - impl: impl ConnectorIntegration<PostCaptureVoid, PaymentsCancelPostCaptureData, PaymentsResponseData> for Worldpayvantiv\n\n**transformers.rs**\n  Modify existing code\n\n**default_implementations.rs**\n  Add:\n    - impl: impl PaymentPostCaptureVoid for connectors::DummyConnector<T>\n    - impl: impl ConnectorIntegration<PostCaptureVoid, PaymentsCancelPostCaptureData, PaymentsResponseData> for connectors::DummyConnector<T>\n\n**default_implementations_v2.rs**\n  Add:\n    - impl: impl PaymentPostCaptureVoidV2 for $connector\n\n**utils.rs**\n  Modify existing code\n\n**router_data.rs**\n  Modify existing code\n\n**payments.rs**\n  Add:\n    - struct: pub::PaymentsCancelPostCaptureRequest\n\n**router_request_types.rs**\n  Add:\n    - struct: pub::PaymentsCancelPostCaptureData\n\n**types.rs**\n  Modify existing code\n\n**payments.rs**\n  Add:\n    - struct: pub::PaymentsCancelPostCaptureRequest\n\n**payments_v2.rs**\n  Add:\n    - trait: pub::PaymentPostCaptureVoidV2\n\n**types.rs**\n  Modify existing code\n\n**openapi.rs**\n  Modify existing code\n\n**payments.rs**\n  Add:\n    - struct: pub::PaymentsCancelPostCaptureRequest\n\n**types.rs**\n  Modify existing code\n\n**types.rs**\n  Modify existing code\n\n**webhooks.rs**\n  Modify existing code\n\n**utils.rs**\n  Modify existing code\n\n**payments.rs**\n  Add:\n    - struct: pub::PaymentsCancelPostCaptureRequest\n\n**flows.rs**\n  Add:\n    - mod: pub::cancel_post_capture_flow\n\n**cancel_post_capture_flow.rs**\n  Add:\n    - function: private::construct_router_data\n    - function: private::construct_router_data\n    - function: private::decide_flows\n    - function: private::add_access_token\n    - function: private::build_flow_specific_connector_request\n    - impl: impl ConstructFlowSpecificData<\napi::PostCaptureVoid,\ntypes::PaymentsCancelPostCaptureData,\ntypes::PaymentsResponseData,\n> for PaymentData<api::PostCaptureVoid>\n    - impl: impl Feature<api::PostCaptureVoid, types::PaymentsCancelPostCaptureData> for types::RouterData<\napi::PostCaptureVoid,\ntypes::PaymentsCancelPostCaptureData,\ntypes::PaymentsResponseData,\n>\n\n**helpers.rs**\n  Modify existing code\n\n**operations.rs**\n  Add:\n    - mod: pub::payment_cancel_post_capture\n\n**payment_attempt_record.rs**\n  Modify existing code\n\n**payment_cancel_post_capture.rs**\n  Add:\n    - function: private::get_trackers\n    - function: private::get_or_create_customer_details\n    - function: private::make_pm_data\n    - function: private::get_connector\n    - function: private::guard_payment_against_blocklist\n    - function: private::update_trackers\n    - function: private::validate_request\n    - struct: pub::PaymentCancelPostCapture\n    - impl: impl GetTracker<F, PaymentData<F>, api::PaymentsCancelPostCaptureRequest> for PaymentCancelPostCapture\n    - impl: impl Domain<F, api::PaymentsCancelPostCaptureRequest, PaymentData<F>> for PaymentCancelPostCapture\n    - impl: impl UpdateTracker<F, PaymentData<F>, api::PaymentsCancelPostCaptureRequest> for PaymentCancelPostCapture\n    - impl: impl ValidateRequest<F, api::PaymentsCancelPostCaptureRequest, PaymentData<F>> for PaymentCancelPostCapture\n\n**payment_capture_v2.rs**\n  Modify existing code\n\n**payment_confirm_intent.rs**\n  Modify existing code\n\n**payment_get.rs**\n  Modify existing code\n\n**payment_response.rs**\n  Add:\n    - function: private::update_tracker\n    - impl: impl PostUpdateTracker<F, PaymentData<F>, types::PaymentsCancelPostCaptureData> for PaymentResponse\n\n**payment_session_intent.rs**\n  Modify existing code\n\n**payment_update_intent.rs**\n  Modify existing code\n\n**proxy_payments_intent.rs**\n  Modify existing code\n\n**payment_methods.rs**\n  Modify existing code\n\n**retry.rs**\n  Modify existing code\n\n**transformers.rs**\n  Modify existing code\n\n**transformers.rs**\n  Modify existing code\n\n**helpers.rs**\n  Modify existing code\n\n**app.rs**\n  Modify existing code\n\n**lock_utils.rs**\n  Modify existing code\n\n**payments.rs**\n  Add:\n    - struct: pub::PaymentsCancelPostCaptureRequest\n\n**api.rs**\n  Add:\n    - impl: impl Authenticate for api_models::payments::PaymentsCancelPostCaptureRequest\n\n**types.rs**\n  Modify existing code\n\n**payments.rs**\n  Add:\n    - struct: pub::PaymentsCancelPostCaptureRequest\n\n**payments_v2.rs**\n  Add:\n    - trait: pub::PaymentPostCaptureVoidV2\n\n**transformers.rs**\n  Modify existing code\n\n**operation.rs**\n  Modify existing code\n\n**types.rs**\n  Modify existing code"}
