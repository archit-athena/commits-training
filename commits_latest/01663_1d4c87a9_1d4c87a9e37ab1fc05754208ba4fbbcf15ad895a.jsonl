{"prompt": "feat(auth): Add support for partial-auth, by facilitating injection of authentication parameters in headers (#4802)\n\nCo-authored-by: Jagan <jaganelavarasan@gmail.com>", "response": "Files to modify:\n\n\n**crypto.rs**\n  Add:\n    - function: pub::new\n    - function: private::sign_message\n    - function: private::verify_signature\n    - struct: pub::Blake3\n    - impl: impl Blake3\n    - impl: impl SignMessage for Blake3\n    - impl: impl VerifySignature for Blake3\n\n**secret.rs**\n  Add:\n    - function: pub::into_strong\n\n**customers.rs**\n  Modify existing code\n\n**payment_intents.rs**\n  Modify existing code\n\n**refunds.rs**\n  Modify existing code\n\n**setup_intents.rs**\n  Modify existing code\n\n**defaults.rs**\n  Modify existing code\n\n**secrets_transformers.rs**\n  Modify existing code\n\n**settings.rs**\n  Modify existing code\n\n**metrics.rs**\n  Modify existing code\n\n**admin.rs**\n  Modify existing code\n\n**app.rs**\n  Add:\n    - function: private::get_detached_auth\n\n**blocklist.rs**\n  Modify existing code\n\n**currency.rs**\n  Modify existing code\n\n**customers.rs**\n  Modify existing code\n\n**disputes.rs**\n  Modify existing code\n\n**ephemeral_key.rs**\n  Modify existing code\n\n**files.rs**\n  Modify existing code\n\n**mandates.rs**\n  Modify existing code\n\n**payment_link.rs**\n  Modify existing code\n\n**payment_methods.rs**\n  Modify existing code\n\n**payments.rs**\n  Modify existing code\n\n**payouts.rs**\n  Modify existing code\n\n**poll.rs**\n  Modify existing code\n\n**refunds.rs**\n  Modify existing code\n\n**routing.rs**\n  Modify existing code\n\n**verification.rs**\n  Modify existing code\n\n**authentication.rs**\n  Add:\n    - function: private::get_auth_type\n    - function: private::authenticate_and_fetch\n    - function: private::authenticate_and_fetch\n    - function: private::construct_authentication_data\n    - function: private::get_auth_type\n    - struct: pub::HeaderAuth\n    - impl: impl GetAuthType for ApiKeyAuth\n    - impl: impl AuthenticateAndFetch<AuthenticationData, A> for HeaderAuth<I>\n    - impl: impl AuthenticateAndFetch<AuthenticationData, A> for HeaderAuth<I>\n    - impl: impl GetAuthType for PublishableKeyAuth\n    - mod: private::detached\n\n**detached.rs**\n  Add:\n    - function: pub::from_headers\n    - function: pub::verify_checksum\n    - function: private::generate_payload\n    - function: private::append_option\n    - struct: pub::ExtractedPayload\n    - enum: pub::PayloadType\n    - trait: pub::GetAuthType\n    - impl: impl ExtractedPayload"}
