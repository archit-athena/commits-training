{"prompt": "feat(connector): [Gocardless] add support for Ach, Sepa, Becs payment methods (#2180)", "response": "Files to modify:\n\n\n**enums.rs**\n  Modify existing code\n\n**payments.rs**\n  Modify existing code\n\n**gocardless.rs**\n  Remove:\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_error_response\n    - impl: impl ConnectorIntegration<\napi::PaymentMethodToken,\ntypes::PaymentMethodTokenizationData,\ntypes::PaymentsResponseData,\n> for Gocardless\n  Add:\n    - function: private::get_headers\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - impl: impl api::ConnectorCustomer for Gocardless\n    - impl: impl api::PaymentsPreProcessing for Gocardless\n    - impl: impl ConnectorIntegration<\napi::CreateConnectorCustomer,\ntypes::ConnectorCustomerData,\ntypes::PaymentsResponseData,\n> for Gocardless\n    - impl: impl ConnectorIntegration<\napi::PaymentMethodToken,\ntypes::PaymentMethodTokenizationData,\ntypes::PaymentsResponseData,\n> for Gocardless\n\n**transformers.rs**\n  Remove:\n    - function: private::from\n    - struct: pub::GocardlessCard\n    - struct: pub::GocardlessErrorResponse\n    - enum: pub::RefundStatus\n    - impl: impl types::ResponseRouterData<F, GocardlessPaymentsResponse, T, types::PaymentsResponseData> for [derive(Debug, Serialize, Default, Deserialize, Clone)]\n    - impl: impl From<RefundStatus> for enums::RefundStatus\n  Add:\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::get_ip_if_required\n    - function: private::try_from\n    - function: private::try_from\n    - struct: pub::GocardlessCustomerRequest\n    - struct: pub::GocardlessCustomer\n    - struct: pub::CustomerMetaData\n    - struct: pub::GocardlessCustomerResponse\n    - struct: pub::Customers\n    - struct: pub::GocardlessBankAccountRequest\n    - struct: pub::CustomerBankAccounts\n    - struct: pub::CustomerAccountLink\n    - struct: pub::InternationalBankAccount\n    - struct: pub::AUBankAccount\n    - struct: pub::USBankAccount\n    - struct: pub::GocardlessBankAccountResponse\n    - struct: pub::CustomerBankAccountResponse\n    - struct: pub::GocardlessMandateRequest\n    - struct: pub::Mandate\n    - struct: pub::MandateMetaData\n    - struct: pub::MandateLink\n    - struct: pub::GocardlessMandateResponse\n    - struct: pub::MandateResponse\n    - struct: pub::GocardlessPayment\n    - struct: pub::PaymentMetaData\n    - struct: pub::PaymentResponse\n    - enum: pub::CustomerBankAccount\n    - enum: pub::AccountType\n    - enum: pub::GocardlessScheme\n    - impl: impl TryFrom<&types::ConnectorCustomerRouterData> for GocardlessCustomerRequest\n    - impl: impl TryFrom<\ntypes::ResponseRouterData<\nF,\nGocardlessCustomerResponse,\ntypes::ConnectorCustomerData,\ntypes::PaymentsResponseData,\n>,\n> for types::RouterData<F, types::ConnectorCustomerData, types::PaymentsResponseData>\n    - impl: impl TryFrom<&types::TokenizationRouterData> for GocardlessBankAccountRequest\n    - impl: impl TryFrom<&types::TokenizationRouterData> for CustomerBankAccount\n    - impl: impl TryFrom<&BankDebitData> for CustomerBankAccount\n    - impl: impl From<BankType> for AccountType\n    - impl: impl TryFrom<\ntypes::ResponseRouterData<\nF,\nGocardlessBankAccountResponse,\ntypes::PaymentMethodTokenizationData,\ntypes::PaymentsResponseData,\n>,\n> for types::RouterData<F, types::PaymentMethodTokenizationData, types::PaymentsResponseData>\n    - impl: impl TryFrom<&types::PaymentsPreProcessingRouterData> for GocardlessMandateRequest\n    - impl: impl TryFrom<&BankDebitData> for GocardlessScheme\n    - impl: impl TryFrom<\ntypes::ResponseRouterData<\nF,\nGocardlessMandateResponse,\ntypes::PaymentsPreProcessingData,\ntypes::PaymentsResponseData,\n>,\n> for types::RouterData<F, types::PaymentsPreProcessingData, types::PaymentsResponseData>\n\n**transformers.rs**\n  Remove:\n    - function: private::from\n    - struct: pub::GocardlessCard\n    - struct: pub::GocardlessErrorResponse\n    - enum: pub::RefundStatus\n    - impl: impl types::ResponseRouterData<F, GocardlessPaymentsResponse, T, types::PaymentsResponseData> for [derive(Debug, Serialize, Default, Deserialize, Clone)]\n    - impl: impl From<RefundStatus> for enums::RefundStatus\n  Add:\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::get_ip_if_required\n    - function: private::try_from\n    - function: private::try_from\n    - struct: pub::GocardlessCustomerRequest\n    - struct: pub::GocardlessCustomer\n    - struct: pub::CustomerMetaData\n    - struct: pub::GocardlessCustomerResponse\n    - struct: pub::Customers\n    - struct: pub::GocardlessBankAccountRequest\n    - struct: pub::CustomerBankAccounts\n    - struct: pub::CustomerAccountLink\n    - struct: pub::InternationalBankAccount\n    - struct: pub::AUBankAccount\n    - struct: pub::USBankAccount\n    - struct: pub::GocardlessBankAccountResponse\n    - struct: pub::CustomerBankAccountResponse\n    - struct: pub::GocardlessMandateRequest\n    - struct: pub::Mandate\n    - struct: pub::MandateMetaData\n    - struct: pub::MandateLink\n    - struct: pub::GocardlessMandateResponse\n    - struct: pub::MandateResponse\n    - struct: pub::GocardlessPayment\n    - struct: pub::PaymentMetaData\n    - struct: pub::PaymentResponse\n    - enum: pub::CustomerBankAccount\n    - enum: pub::AccountType\n    - enum: pub::GocardlessScheme\n    - impl: impl TryFrom<&types::ConnectorCustomerRouterData> for GocardlessCustomerRequest\n    - impl: impl TryFrom<\ntypes::ResponseRouterData<\nF,\nGocardlessCustomerResponse,\ntypes::ConnectorCustomerData,\ntypes::PaymentsResponseData,\n>,\n> for types::RouterData<F, types::ConnectorCustomerData, types::PaymentsResponseData>\n    - impl: impl TryFrom<&types::TokenizationRouterData> for GocardlessBankAccountRequest\n    - impl: impl TryFrom<&types::TokenizationRouterData> for CustomerBankAccount\n    - impl: impl TryFrom<&BankDebitData> for CustomerBankAccount\n    - impl: impl From<BankType> for AccountType\n    - impl: impl TryFrom<\ntypes::ResponseRouterData<\nF,\nGocardlessBankAccountResponse,\ntypes::PaymentMethodTokenizationData,\ntypes::PaymentsResponseData,\n>,\n> for types::RouterData<F, types::PaymentMethodTokenizationData, types::PaymentsResponseData>\n    - impl: impl TryFrom<&types::PaymentsPreProcessingRouterData> for GocardlessMandateRequest\n    - impl: impl TryFrom<&BankDebitData> for GocardlessScheme\n    - impl: impl TryFrom<\ntypes::ResponseRouterData<\nF,\nGocardlessMandateResponse,\ntypes::PaymentsPreProcessingData,\ntypes::PaymentsResponseData,\n>,\n> for types::RouterData<F, types::PaymentsPreProcessingData, types::PaymentsResponseData>\n\n**utils.rs**\n  Add:\n    - function: private::get_browser_info\n    - function: private::get_email\n    - function: private::get_billing_country\n    - trait: pub::ConnectorCustomerData\n    - trait: pub::BankDirectDebitBillingData\n    - impl: impl ConnectorCustomerData for types::ConnectorCustomerData\n    - impl: impl BankDirectDebitBillingData for BankDebitBilling\n\n**admin.rs**\n  Modify existing code\n\n**payments.rs**\n  Modify existing code\n\n**flows.rs**\n  Modify existing code\n\n**authorize_flow.rs**\n  Modify existing code\n\n**transformers.rs**\n  Remove:\n    - function: private::from\n    - struct: pub::GocardlessCard\n    - struct: pub::GocardlessErrorResponse\n    - enum: pub::RefundStatus\n    - impl: impl types::ResponseRouterData<F, GocardlessPaymentsResponse, T, types::PaymentsResponseData> for [derive(Debug, Serialize, Default, Deserialize, Clone)]\n    - impl: impl From<RefundStatus> for enums::RefundStatus\n  Add:\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::get_ip_if_required\n    - function: private::try_from\n    - function: private::try_from\n    - struct: pub::GocardlessCustomerRequest\n    - struct: pub::GocardlessCustomer\n    - struct: pub::CustomerMetaData\n    - struct: pub::GocardlessCustomerResponse\n    - struct: pub::Customers\n    - struct: pub::GocardlessBankAccountRequest\n    - struct: pub::CustomerBankAccounts\n    - struct: pub::CustomerAccountLink\n    - struct: pub::InternationalBankAccount\n    - struct: pub::AUBankAccount\n    - struct: pub::USBankAccount\n    - struct: pub::GocardlessBankAccountResponse\n    - struct: pub::CustomerBankAccountResponse\n    - struct: pub::GocardlessMandateRequest\n    - struct: pub::Mandate\n    - struct: pub::MandateMetaData\n    - struct: pub::MandateLink\n    - struct: pub::GocardlessMandateResponse\n    - struct: pub::MandateResponse\n    - struct: pub::GocardlessPayment\n    - struct: pub::PaymentMetaData\n    - struct: pub::PaymentResponse\n    - enum: pub::CustomerBankAccount\n    - enum: pub::AccountType\n    - enum: pub::GocardlessScheme\n    - impl: impl TryFrom<&types::ConnectorCustomerRouterData> for GocardlessCustomerRequest\n    - impl: impl TryFrom<\ntypes::ResponseRouterData<\nF,\nGocardlessCustomerResponse,\ntypes::ConnectorCustomerData,\ntypes::PaymentsResponseData,\n>,\n> for types::RouterData<F, types::ConnectorCustomerData, types::PaymentsResponseData>\n    - impl: impl TryFrom<&types::TokenizationRouterData> for GocardlessBankAccountRequest\n    - impl: impl TryFrom<&types::TokenizationRouterData> for CustomerBankAccount\n    - impl: impl TryFrom<&BankDebitData> for CustomerBankAccount\n    - impl: impl From<BankType> for AccountType\n    - impl: impl TryFrom<\ntypes::ResponseRouterData<\nF,\nGocardlessBankAccountResponse,\ntypes::PaymentMethodTokenizationData,\ntypes::PaymentsResponseData,\n>,\n> for types::RouterData<F, types::PaymentMethodTokenizationData, types::PaymentsResponseData>\n    - impl: impl TryFrom<&types::PaymentsPreProcessingRouterData> for GocardlessMandateRequest\n    - impl: impl TryFrom<&BankDebitData> for GocardlessScheme\n    - impl: impl TryFrom<\ntypes::ResponseRouterData<\nF,\nGocardlessMandateResponse,\ntypes::PaymentsPreProcessingData,\ntypes::PaymentsResponseData,\n>,\n> for types::RouterData<F, types::PaymentsPreProcessingData, types::PaymentsResponseData>\n\n**types.rs**\n  Modify existing code\n\n**api.rs**\n  Modify existing code"}
