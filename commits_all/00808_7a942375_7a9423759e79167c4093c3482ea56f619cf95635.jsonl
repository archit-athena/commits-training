{"prompt": "feat(router): add an api to migrate the apple pay certificates from connector metadata to `connector_wallets_details` column in merchant connector account (#4790)\n\nCo-authored-by: hyperswitch-bot[bot] <148525504+hyperswitch-bot[bot]@users.noreply.github.com>\nCo-authored-by: Sanchith Hegde <22217505+SanchithHegde@users.noreply.github.com>", "response": "Files to modify:\n\n\n**apple_pay_certificates_migration.rs**\n  Add:\n    - struct: pub::ApplePayCertificatesMigrationResponse\n    - struct: pub::ApplePayCertificatesMigrationRequest\n    - impl: impl common_utils::events::ApiEventMetric for ApplePayCertificatesMigrationRequest\n\n**events.rs**\n  Add:\n    - mod: pub::apple_pay_certificates_migration\n\n**apple_pay_certificates_migration.rs**\n  Add:\n    - struct: pub::ApplePayCertificatesMigrationResponse\n    - struct: pub::ApplePayCertificatesMigrationRequest\n    - impl: impl common_utils::events::ApiEventMetric for ApplePayCertificatesMigrationRequest\n\n**lib.rs**\n  Add:\n    - mod: pub::apple_pay_certificates_migration\n\n**payments.rs**\n  Add:\n    - struct: pub::PaymentProcessingDetails\n    - enum: pub::PaymentProcessingDetailsAt\n\n**enums.rs**\n  Remove:\n    - enum: pub::ApplePayFlow\n\n**events.rs**\n  Add:\n    - mod: pub::apple_pay_certificates_migration\n\n**connector.rs**\n  Modify existing code\n\n**merchant_connector_account.rs**\n  Modify existing code\n\n**generics.rs**\n  Modify existing code\n\n**schema.rs**\n  Modify existing code\n\n**payment_method_data.rs**\n  Add:\n    - enum: pub::ApplePayFlow\n\n**router_data.rs**\n  Modify existing code\n\n**openapi.rs**\n  Modify existing code\n\n**core.rs**\n  Add:\n    - mod: pub::apple_pay_certificates_migration\n\n**admin.rs**\n  Modify existing code\n\n**apple_pay_certificates_migration.rs**\n  Add:\n    - struct: pub::ApplePayCertificatesMigrationResponse\n    - struct: pub::ApplePayCertificatesMigrationRequest\n    - impl: impl common_utils::events::ApiEventMetric for ApplePayCertificatesMigrationRequest\n\n**transformers.rs**\n  Modify existing code\n\n**checkout_flow.rs**\n  Modify existing code\n\n**fulfillment_flow.rs**\n  Modify existing code\n\n**record_return.rs**\n  Modify existing code\n\n**sale_flow.rs**\n  Modify existing code\n\n**transaction_flow.rs**\n  Modify existing code\n\n**utils.rs**\n  Modify existing code\n\n**payments.rs**\n  Add:\n    - struct: pub::PaymentProcessingDetails\n    - enum: pub::PaymentProcessingDetailsAt\n\n**session_flow.rs**\n  Modify existing code\n\n**helpers.rs**\n  Add:\n    - function: pub::get_connector_wallets_details\n    - function: pub::get_encrypted_apple_pay_connector_wallets_details\n\n**tokenization.rs**\n  Modify existing code\n\n**transformers.rs**\n  Modify existing code\n\n**utils.rs**\n  Modify existing code\n\n**utils.rs**\n  Modify existing code\n\n**utils.rs**\n  Modify existing code\n\n**kafka_store.rs**\n  Add:\n    - function: private::update_multiple_merchant_connector_accounts\n\n**merchant_connector_account.rs**\n  Modify existing code\n\n**lib.rs**\n  Add:\n    - mod: pub::apple_pay_certificates_migration\n\n**routes.rs**\n  Add:\n    - mod: pub::apple_pay_certificates_migration\n\n**admin.rs**\n  Modify existing code\n\n**app.rs**\n  Add:\n    - function: pub::server\n    - impl: impl ApplePayCertificatesMigration\n\n**apple_pay_certificates_migration.rs**\n  Add:\n    - struct: pub::ApplePayCertificatesMigrationResponse\n    - struct: pub::ApplePayCertificatesMigrationRequest\n    - impl: impl common_utils::events::ApiEventMetric for ApplePayCertificatesMigrationRequest\n\n**lock_utils.rs**\n  Modify existing code\n\n**types.rs**\n  Modify existing code\n\n**verify_connector.rs**\n  Modify existing code\n\n**merchant_connector_account.rs**\n  Modify existing code\n\n**payments.rs**\n  Add:\n    - struct: pub::PaymentProcessingDetails\n    - enum: pub::PaymentProcessingDetailsAt\n\n**utils.rs**\n  Modify existing code\n\n**aci.rs**\n  Modify existing code\n\n**utils.rs**\n  Modify existing code\n\n**types.rs**\n  Modify existing code\n\n**errors.rs**\n  Add:\n    - function: private::from\n    - impl: impl From<diesel::result::Error> for StorageError"}
