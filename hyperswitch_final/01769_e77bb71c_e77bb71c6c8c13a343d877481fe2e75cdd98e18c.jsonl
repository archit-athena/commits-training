{"prompt": "feat(connector): [Chargebee] Add record back support for chargebee (#7505)\n\nCo-authored-by: Chikke Srujan <chikke.srujan@Chikke-Srujan-N7WRTY72X7.local>\nCo-authored-by: hyperswitch-bot[bot] <148525504+hyperswitch-bot[bot]@users.noreply.github.com>", "response": "Files to modify:\n\n\n**chargebee.rs**\n  Add:\n    - function: private::get_headers\n    - function: private::get_url\n    - function: private::get_content_type\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - impl: impl api::revenue_recovery::RevenueRecoveryRecordBack for Chargebee\n    - impl: impl ConnectorIntegration<\nRecoveryRecordBack,\nRevenueRecoveryRecordBackRequest,\nRevenueRecoveryRecordBackResponse,\n> for Chargebee\n\n**transformers.rs**\n  Add:\n    - function: private::from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - struct: pub::ChargebeeMetadata\n    - struct: pub::ChargebeeRecordPaymentRequest\n    - struct: pub::ChargebeeRecordbackResponse\n    - struct: pub::ChargebeeRecordbackInvoice\n    - enum: pub::ChargebeeRecordPaymentMethod\n    - enum: pub::ChargebeeRecordStatus\n    - impl: impl TryFrom<&ChargebeeRouterData<&RevenueRecoveryRecordBackRouterData>> for ChargebeeRecordPaymentRequest\n    - impl: impl TryFrom<enums::AttemptStatus> for ChargebeeRecordStatus\n    - impl: impl TryFrom<\nResponseRouterData<\nRecoveryRecordBack,\nChargebeeRecordbackResponse,\nRevenueRecoveryRecordBackRequest,\nRevenueRecoveryRecordBackResponse,\n>,\n> for RevenueRecoveryRecordBackRouterData\n\n**default_implementations.rs**\n  Remove:\n    - impl: impl RevenueRecovery for $connector\n\n**revenue_recovery.rs**\n  Modify existing code\n\n**revenue_recovery.rs**\n  Modify existing code\n\n**admin.rs**\n  Modify existing code\n\n**flows.rs**\n  Remove:\n    - impl: impl api::RevenueRecovery for connector::DummyConnector<T>\n  Add:\n    - impl: impl api::RevenueRecovery for connector::DummyConnector<T>\n\n**conversion_impls.rs**\n  Add:\n    - function: private::from_old_router_data\n    - function: private::to_old_router_data\n    - impl: impl RouterDataConversion<T, Req, Resp> for RevenueRecoveryRecordBackData"}
