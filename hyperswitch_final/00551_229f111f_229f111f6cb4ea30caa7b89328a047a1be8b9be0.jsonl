{"prompt": "feat(frm): Add support to accept and decline payment when manually reviewed by merchant for risky transaction (#2071)", "response": "Files to modify:\n\n\n**payments.rs**\n  Add:\n    - struct: pub::PaymentsApproveRequest\n    - struct: pub::PaymentsRejectRequest\n\n**enums.rs**\n  Remove:\n    - enum: pub::CancelTransaction\n  Add:\n    - enum: pub::MerchantDecision\n    - enum: pub::FrmSuggestion\n\n**payment_intent.rs**\n  Modify existing code\n\n**payment_attempt.rs**\n  Modify existing code\n\n**payment_intent.rs**\n  Modify existing code\n\n**schema.rs**\n  Modify existing code\n\n**payments.rs**\n  Add:\n    - struct: pub::PaymentsApproveRequest\n    - struct: pub::PaymentsRejectRequest\n\n**flows.rs**\n  Add:\n    - impl: impl api::PaymentApprove for connector::DummyConnector<T>\n    - impl: impl services::ConnectorIntegration<\napi::Approve,\ntypes::PaymentsApproveData,\ntypes::PaymentsResponseData,\n> for connector::DummyConnector<T>\n    - impl: impl api::PaymentReject for connector::DummyConnector<T>\n    - impl: impl services::ConnectorIntegration<\napi::Reject,\ntypes::PaymentsRejectData,\ntypes::PaymentsResponseData,\n> for connector::DummyConnector<T>\n    - mod: pub::approve_flow\n    - mod: pub::reject_flow\n\n**approve_flow.rs**\n  Add:\n    - function: private::construct_router_data\n    - function: private::decide_flows\n    - function: private::add_access_token\n    - function: private::build_flow_specific_connector_request\n    - impl: impl ConstructFlowSpecificData<api::Approve, types::PaymentsApproveData, types::PaymentsResponseData> for PaymentData<api::Approve>\n    - impl: impl Feature<api::Approve, types::PaymentsApproveData> for types::RouterData<api::Approve, types::PaymentsApproveData, types::PaymentsResponseData>\n\n**reject_flow.rs**\n  Add:\n    - function: private::construct_router_data\n    - function: private::decide_flows\n    - function: private::add_access_token\n    - function: private::build_flow_specific_connector_request\n    - impl: impl ConstructFlowSpecificData<api::Reject, types::PaymentsRejectData, types::PaymentsResponseData> for PaymentData<api::Reject>\n    - impl: impl Feature<api::Reject, types::PaymentsRejectData> for types::RouterData<api::Reject, types::PaymentsRejectData, types::PaymentsResponseData>\n\n**helpers.rs**\n  Modify existing code\n\n**operations.rs**\n  Add:\n    - function: private::get_or_create_customer_details\n    - function: private::make_pm_data\n    - function: private::get_connector\n    - mod: pub::payment_approve\n    - mod: pub::payment_reject\n\n**payment_approve.rs**\n  Add:\n    - function: private::get_trackers\n    - function: private::get_or_create_customer_details\n    - function: private::make_pm_data\n    - function: private::add_task_to_process_tracker\n    - function: private::get_connector\n    - function: private::update_trackers\n    - function: private::validate_request\n    - struct: pub::PaymentApprove\n    - impl: impl GetTracker<F, PaymentData<F>, api::PaymentsRequest> for PaymentApprove\n    - impl: impl Domain<F, api::PaymentsRequest> for PaymentApprove\n    - impl: impl UpdateTracker<F, PaymentData<F>, api::PaymentsRequest> for PaymentApprove\n    - impl: impl ValidateRequest<F, api::PaymentsRequest> for PaymentApprove\n\n**payment_cancel.rs**\n  Modify existing code\n\n**payment_capture.rs**\n  Modify existing code\n\n**payment_complete_authorize.rs**\n  Modify existing code\n\n**payment_confirm.rs**\n  Modify existing code\n\n**payment_create.rs**\n  Modify existing code\n\n**payment_method_validate.rs**\n  Modify existing code\n\n**payment_reject.rs**\n  Add:\n    - function: private::get_trackers\n    - function: private::update_trackers\n    - function: private::validate_request\n    - struct: pub::PaymentReject\n    - impl: impl GetTracker<F, PaymentData<F>, PaymentsRejectRequest> for PaymentReject\n    - impl: impl UpdateTracker<F, PaymentData<F>, PaymentsRejectRequest> for PaymentReject\n    - impl: impl ValidateRequest<F, PaymentsRejectRequest> for PaymentReject\n\n**payment_response.rs**\n  Add:\n    - function: private::update_tracker\n    - function: private::update_tracker\n    - impl: impl PostUpdateTracker<F, PaymentData<F>, types::PaymentsApproveData> for PaymentResponse\n    - impl: impl PostUpdateTracker<F, PaymentData<F>, types::PaymentsRejectData> for PaymentResponse\n\n**payment_session.rs**\n  Modify existing code\n\n**payment_start.rs**\n  Modify existing code\n\n**payment_status.rs**\n  Modify existing code\n\n**payment_update.rs**\n  Modify existing code\n\n**transformers.rs**\n  Add:\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::foreign_from\n    - impl: impl TryFrom<PaymentAdditionalData<'_, F>> for types::PaymentsApproveData\n    - impl: impl TryFrom<PaymentAdditionalData<'_, F>> for types::PaymentsRejectData\n    - impl: impl ForeignFrom<payments::FraudCheck> for FrmMessage\n\n**payment_intent.rs**\n  Modify existing code\n\n**payment_methods.rs**\n  Modify existing code\n\n**types.rs**\n  Add:\n    - struct: pub::PaymentsRejectData\n    - struct: pub::PaymentsApproveData\n    - impl: impl Capturable for PaymentsApproveData\n    - impl: impl Capturable for PaymentsRejectData\n\n**payments.rs**\n  Add:\n    - struct: pub::PaymentsApproveRequest\n    - struct: pub::PaymentsRejectRequest\n\n**operation.rs**\n  Modify existing code\n\n**types.rs**\n  Add:\n    - struct: pub::PaymentsRejectData\n    - struct: pub::PaymentsApproveData\n    - impl: impl Capturable for PaymentsApproveData\n    - impl: impl Capturable for PaymentsRejectData\n\n**payment_intent.rs**\n  Modify existing code"}
