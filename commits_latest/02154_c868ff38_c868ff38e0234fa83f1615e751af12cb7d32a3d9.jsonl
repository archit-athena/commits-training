{"prompt": "feat(coingate): Add Crypto Pay Flow (#7247)\n\nCo-authored-by: hyperswitch-bot[bot] <148525504+hyperswitch-bot[bot]@users.noreply.github.com>", "response": "Files to modify:\n\n\n**connector_enums.rs**\n  Modify existing code\n\n**connector.rs**\n  Modify existing code\n\n**coingate.rs**\n  Remove:\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::handle_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - impl: impl ConnectorValidation for Coingate\n    - impl: impl ConnectorIntegration<Void, PaymentsCancelData, PaymentsResponseData> for Coingate\n  Add:\n    - function: private::build_request\n    - impl: impl ConnectorIntegration<Void, PaymentsCancelData, PaymentsResponseData> for Err(errors::ConnectorError::FlowNotSupported {\nflow: \"Void\".to_string(),\nconnector: \"Coingate\".to_string(),\n}\n.into())\nfn build_request(\nErr(errors::ConnectorError::FlowNotSupported {\nflow: \"RefundSync\".to_string(),\nconnector: \"Coingate\".to_string(),\n}\n.into())\nfn build_request(\nErr(errors::ConnectorError::FlowNotSupported {\nflow: \"Refund\".to_string(),\nconnector: \"Coingate\".to_string(),\n}\n.into())\n}\nimpl ConnectorValidation for Coingate {\nfn validate_connector_against_payment_request(\n&self,\ncapture_method: Option<CaptureMethod>,\n_payment_method: PaymentMethod,\n_pmt: Option<PaymentMethodType>,\n) -> CustomResult<(), errors::ConnectorError>\n\n**transformers.rs**\n  Remove:\n    - function: private::from\n    - function: private::try_from\n    - function: private::from\n    - function: private::try_from\n    - function: private::try_from\n    - struct: pub::CoingateCard\n    - struct: pub::CoingateRefundRequest\n    - struct: pub::RefundResponse\n    - enum: pub::RefundStatus\n    - impl: impl From<(StringMinorUnit, T)> for CoingateRouterData<T>\n    - impl: impl TryFrom<&CoingateRouterData<&RefundsRouterData<F>>> for CoingateRefundRequest\n    - impl: impl From<RefundStatus> for enums::RefundStatus\n    - impl: impl TryFrom<RefundsResponseRouterData<Execute, RefundResponse>> for RefundsRouterData<Execute>\n    - impl: impl TryFrom<RefundsResponseRouterData<RSync, RefundResponse>> for RefundsRouterData<RSync>\n\n**admin.rs**\n  Modify existing code\n\n**api.rs**\n  Modify existing code\n\n**transformers.rs**\n  Remove:\n    - function: private::from\n    - function: private::try_from\n    - function: private::from\n    - function: private::try_from\n    - function: private::try_from\n    - struct: pub::CoingateCard\n    - struct: pub::CoingateRefundRequest\n    - struct: pub::RefundResponse\n    - enum: pub::RefundStatus\n    - impl: impl From<(StringMinorUnit, T)> for CoingateRouterData<T>\n    - impl: impl TryFrom<&CoingateRouterData<&RefundsRouterData<F>>> for CoingateRefundRequest\n    - impl: impl From<RefundStatus> for enums::RefundStatus\n    - impl: impl TryFrom<RefundsResponseRouterData<Execute, RefundResponse>> for RefundsRouterData<Execute>\n    - impl: impl TryFrom<RefundsResponseRouterData<RSync, RefundResponse>> for RefundsRouterData<RSync>"}
