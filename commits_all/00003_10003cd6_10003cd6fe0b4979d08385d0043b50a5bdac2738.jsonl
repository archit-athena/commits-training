{"prompt": "refactor(redis_interface): separating redis functionality and dependent functionalities outside router crate (#15)\n\nCo-authored-by: Sanchith Hegde", "response": "Files to modify:\n\n\n**errors.rs**\n  Modify existing code\n\n**ext_traits.rs**\n  Add:\n    - function: private::convert_and_encode\n    - function: private::convert_and_url_encode\n    - function: private::encode\n    - function: private::encode_to_string_of_json\n    - function: private::encode_to_value\n    - function: private::encode_to_vec\n    - function: private::parse_struct\n    - function: private::parse_struct\n    - function: private::parse_value\n    - function: private::parse_value\n    - function: private::parse_enum\n    - function: private::parse_struct\n    - trait: pub::Encode\n    - trait: pub::BytesExt\n    - trait: pub::ByteSliceExt\n    - trait: pub::ValueExt\n    - trait: pub::StringExt\n    - impl: impl Encode<'e, P> for A\n    - impl: impl BytesExt<T> for bytes::Bytes\n    - impl: impl ByteSliceExt<T> for [u8]\n    - impl: impl ValueExt<T> for serde_json::Value\n    - impl: impl ValueExt<T> for Secret<serde_json::Value, MaskingStrategy>\n    - impl: impl StringExt<T> for String\n\n**lib.rs**\n  Add:\n    - mod: pub::errors\n    - mod: pub::ext_traits\n\n**commands.rs**\n  Modify existing code\n\n**errors.rs**\n  Modify existing code\n\n**lib.rs**\n  Add:\n    - mod: pub::errors\n    - mod: pub::ext_traits\n\n**types.rs**\n  Add:\n    - struct: pub::RedisSettings\n\n**settings.rs**\n  Remove:\n    - struct: pub::Redis\n\n**connection.rs**\n  Modify existing code\n\n**errors.rs**\n  Modify existing code\n\n**payment_attempt.rs**\n  Modify existing code\n\n**payment_intent.rs**\n  Modify existing code\n\n**consumer.rs**\n  Modify existing code\n\n**utils.rs**\n  Modify existing code\n\n**payment_sync.rs**\n  Modify existing code\n\n**services.rs**\n  Remove:\n    - mod: pub::redis\n\n**ext_traits.rs**\n  Add:\n    - function: private::convert_and_encode\n    - function: private::convert_and_url_encode\n    - function: private::encode\n    - function: private::encode_to_string_of_json\n    - function: private::encode_to_value\n    - function: private::encode_to_vec\n    - function: private::parse_struct\n    - function: private::parse_struct\n    - function: private::parse_value\n    - function: private::parse_value\n    - function: private::parse_enum\n    - function: private::parse_struct\n    - trait: pub::Encode\n    - trait: pub::BytesExt\n    - trait: pub::ByteSliceExt\n    - trait: pub::ValueExt\n    - trait: pub::StringExt\n    - impl: impl Encode<'e, P> for A\n    - impl: impl BytesExt<T> for bytes::Bytes\n    - impl: impl ByteSliceExt<T> for [u8]\n    - impl: impl ValueExt<T> for serde_json::Value\n    - impl: impl ValueExt<T> for Secret<serde_json::Value, MaskingStrategy>\n    - impl: impl StringExt<T> for String"}
