{"prompt": "feat(core): add support for api locking with multiple keys for a single api (#8887)", "response": "Files to modify:\n\n\n**commands.rs**\n  Add:\n    - function: pub::get_multiple_keys\n    - function: pub::get_and_deserialize_multiple_keys\n    - function: pub::set_multiple_keys_if_not_exists_and_get_values\n    - function: pub::set_key_if_not_exists_and_get_value\n    - function: private::test_set_key_if_not_exists_and_get_value_new_key\n    - function: private::test_set_key_if_not_exists_and_get_value_existing_key\n    - function: private::test_set_key_if_not_exists_and_get_value_with_default_ttl\n    - function: private::test_set_key_if_not_exists_and_get_value_concurrent_access\n    - function: private::test_get_multiple_keys_success\n    - function: private::test_get_multiple_keys_with_missing_keys\n    - function: private::test_get_multiple_keys_empty_input\n    - function: private::test_get_and_deserialize_multiple_keys\n    - struct: private::TestData\n\n**lib.rs**\n  Add:\n    - function: pub::get_transaction\n\n**types.rs**\n  Add:\n    - function: pub::is_key_deleted\n    - function: pub::is_key_not_deleted\n    - function: pub::get_value\n    - enum: pub::SetGetReply\n    - impl: impl DelReply\n    - impl: impl SetGetReply<T>\n\n**api_locking.rs**\n  Modify existing code\n\n**payments.rs**\n  Modify existing code"}
