{"prompt": "feat(connector): [bitpay] Add new crypto connector bitpay & testcases for all crypto connectors (#919)\n\nCo-authored-by: arvindpatel24 <arvind.patel@juspay.in>", "response": "Files to modify:\n\n\n**enums.rs**\n  Modify existing code\n\n**settings.rs**\n  Modify existing code\n\n**connector.rs**\n  Add:\n    - mod: pub::bitpay\n\n**bitpay.rs**\n  Add:\n    - function: private::build_headers\n    - function: private::id\n    - function: private::common_get_content_type\n    - function: private::base_url\n    - function: private::get_auth_header\n    - function: private::build_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_webhook_object_reference_id\n    - function: private::get_webhook_event_type\n    - function: private::get_webhook_resource_object\n    - struct: pub::Bitpay\n    - impl: impl api::Payment for Bitpay\n    - impl: impl api::PaymentToken for Bitpay\n    - impl: impl api::PaymentSession for Bitpay\n    - impl: impl api::ConnectorAccessToken for Bitpay\n    - impl: impl api::PreVerify for Bitpay\n    - impl: impl api::PaymentAuthorize for Bitpay\n    - impl: impl api::PaymentSync for Bitpay\n    - impl: impl api::PaymentCapture for Bitpay\n    - impl: impl api::PaymentVoid for Bitpay\n    - impl: impl api::Refund for Bitpay\n    - impl: impl api::RefundExecute for Bitpay\n    - impl: impl api::RefundSync for Bitpay\n    - impl: impl ConnectorIntegration<\napi::PaymentMethodToken,\ntypes::PaymentMethodTokenizationData,\ntypes::PaymentsResponseData,\n> for Bitpay\n    - impl: impl ConnectorCommonExt<Flow, Request, Response> for Bitpay\n    - impl: impl ConnectorCommon for Bitpay\n    - impl: impl ConnectorIntegration<api::Session, types::PaymentsSessionData, types::PaymentsResponseData> for Bitpay\n    - impl: impl ConnectorIntegration<api::AccessTokenAuth, types::AccessTokenRequestData, types::AccessToken> for Bitpay\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Bitpay\n    - impl: impl ConnectorIntegration<api::Authorize, types::PaymentsAuthorizeData, types::PaymentsResponseData> for Bitpay\n    - impl: impl ConnectorIntegration<api::PSync, types::PaymentsSyncData, types::PaymentsResponseData> for Bitpay\n    - impl: impl ConnectorIntegration<api::Capture, types::PaymentsCaptureData, types::PaymentsResponseData> for Bitpay\n    - impl: impl ConnectorIntegration<api::Void, types::PaymentsCancelData, types::PaymentsResponseData> for Bitpay\n    - impl: impl ConnectorIntegration<api::Execute, types::RefundsData, types::RefundsResponseData> for Bitpay\n    - impl: impl ConnectorIntegration<api::RSync, types::RefundsData, types::RefundsResponseData> for Bitpay\n    - impl: impl api::IncomingWebhook for Bitpay\n    - mod: private::transformers\n\n**transformers.rs**\n  Add:\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::get_crypto_specific_payment_data\n    - struct: pub::BitpayPaymentsRequest\n    - struct: pub::BitpayAuthType\n    - struct: pub::BitpayPaymentResponseData\n    - struct: pub::BitpayPaymentsResponse\n    - struct: pub::BitpayRefundRequest\n    - struct: pub::RefundResponse\n    - struct: pub::BitpayErrorResponse\n    - struct: pub::BitpayWebhookDetails\n    - struct: pub::Event\n    - enum: pub::TransactionSpeed\n    - enum: pub::BitpayPaymentStatus\n    - enum: pub::ExceptionStatus\n    - enum: pub::RefundStatus\n    - enum: pub::WebhookEventType\n    - impl: impl TryFrom<&types::PaymentsAuthorizeRouterData> for BitpayPaymentsRequest\n    - impl: impl TryFrom<&ConnectorAuthType> for BitpayAuthType\n    - impl: impl From<BitpayPaymentStatus> for enums::AttemptStatus\n    - impl: impl TryFrom<types::ResponseRouterData<F, BitpayPaymentsResponse, T, types::PaymentsResponseData>> for types::RouterData<F, T, types::PaymentsResponseData>\n    - impl: impl TryFrom<&types::RefundsRouterData<F>> for BitpayRefundRequest\n    - impl: impl From<RefundStatus> for enums::RefundStatus\n    - impl: impl TryFrom<types::RefundsResponseRouterData<api::Execute, RefundResponse>> for types::RefundsRouterData<api::Execute>\n    - impl: impl TryFrom<types::RefundsResponseRouterData<api::RSync, RefundResponse>> for types::RefundsRouterData<api::RSync>\n\n**flows.rs**\n  Modify existing code\n\n**lib.rs**\n  Modify existing code\n\n**api.rs**\n  Modify existing code\n\n**bitpay.rs**\n  Add:\n    - function: private::build_headers\n    - function: private::id\n    - function: private::common_get_content_type\n    - function: private::base_url\n    - function: private::get_auth_header\n    - function: private::build_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_webhook_object_reference_id\n    - function: private::get_webhook_event_type\n    - function: private::get_webhook_resource_object\n    - struct: pub::Bitpay\n    - impl: impl api::Payment for Bitpay\n    - impl: impl api::PaymentToken for Bitpay\n    - impl: impl api::PaymentSession for Bitpay\n    - impl: impl api::ConnectorAccessToken for Bitpay\n    - impl: impl api::PreVerify for Bitpay\n    - impl: impl api::PaymentAuthorize for Bitpay\n    - impl: impl api::PaymentSync for Bitpay\n    - impl: impl api::PaymentCapture for Bitpay\n    - impl: impl api::PaymentVoid for Bitpay\n    - impl: impl api::Refund for Bitpay\n    - impl: impl api::RefundExecute for Bitpay\n    - impl: impl api::RefundSync for Bitpay\n    - impl: impl ConnectorIntegration<\napi::PaymentMethodToken,\ntypes::PaymentMethodTokenizationData,\ntypes::PaymentsResponseData,\n> for Bitpay\n    - impl: impl ConnectorCommonExt<Flow, Request, Response> for Bitpay\n    - impl: impl ConnectorCommon for Bitpay\n    - impl: impl ConnectorIntegration<api::Session, types::PaymentsSessionData, types::PaymentsResponseData> for Bitpay\n    - impl: impl ConnectorIntegration<api::AccessTokenAuth, types::AccessTokenRequestData, types::AccessToken> for Bitpay\n    - impl: impl ConnectorIntegration<api::Verify, types::VerifyRequestData, types::PaymentsResponseData> for Bitpay\n    - impl: impl ConnectorIntegration<api::Authorize, types::PaymentsAuthorizeData, types::PaymentsResponseData> for Bitpay\n    - impl: impl ConnectorIntegration<api::PSync, types::PaymentsSyncData, types::PaymentsResponseData> for Bitpay\n    - impl: impl ConnectorIntegration<api::Capture, types::PaymentsCaptureData, types::PaymentsResponseData> for Bitpay\n    - impl: impl ConnectorIntegration<api::Void, types::PaymentsCancelData, types::PaymentsResponseData> for Bitpay\n    - impl: impl ConnectorIntegration<api::Execute, types::RefundsData, types::RefundsResponseData> for Bitpay\n    - impl: impl ConnectorIntegration<api::RSync, types::RefundsData, types::RefundsResponseData> for Bitpay\n    - impl: impl api::IncomingWebhook for Bitpay\n    - mod: private::transformers\n\n**coinbase.rs**\n  Remove:\n    - function: private::should_capture_authorized_payment\n    - function: private::should_partially_capture_authorized_payment\n    - function: private::should_partially_refund_manually_captured_payment\n    - function: private::should_sync_manually_captured_refund\n    - function: private::should_sync_auto_captured_payment\n    - function: private::should_refund_auto_captured_payment\n    - function: private::should_partially_refund_succeeded_payment\n    - function: private::should_refund_succeeded_payment_multiple_times\n    - function: private::should_sync_refund\n    - function: private::should_fail_payment_for_incorrect_card_number\n    - function: private::should_fail_payment_for_incorrect_cvc\n    - function: private::should_fail_payment_for_invalid_exp_month\n    - function: private::should_fail_payment_for_incorrect_expiry_year\n    - function: private::should_fail_void_payment_for_auto_capture\n\n**connector_auth.rs**\n  Modify existing code\n\n**main.rs**\n  Add:\n    - mod: private::bitpay\n\n**opennode.rs**\n  Remove:\n    - function: private::should_capture_authorized_payment\n    - function: private::should_partially_refund_manually_captured_payment\n    - function: private::should_sync_manually_captured_refund\n    - function: private::should_sync_auto_captured_payment\n    - function: private::should_refund_auto_captured_payment\n    - function: private::should_partially_refund_succeeded_payment\n    - function: private::should_refund_succeeded_payment_multiple_times\n    - function: private::should_sync_refund\n    - function: private::should_fail_payment_for_incorrect_card_number\n    - function: private::should_fail_payment_for_incorrect_cvc\n    - function: private::should_fail_payment_for_invalid_exp_month\n    - function: private::should_fail_payment_for_incorrect_expiry_year\n    - function: private::should_fail_void_payment_for_auto_capture\n    - function: private::should_fail_capture_for_invalid_payment"}
