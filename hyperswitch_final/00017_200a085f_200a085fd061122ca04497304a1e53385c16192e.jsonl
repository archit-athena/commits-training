{"prompt": "Testability ddd repository (#55)", "response": "Files to modify:\n\n\n**secret.rs**\n  Modify existing code\n\n**serde.rs**\n  Modify existing code\n\n**strategy.rs**\n  Modify existing code\n\n**strong_secret.rs**\n  Modify existing code\n\n**lib.rs**\n  Modify existing code\n\n**build.rs**\n  Add:\n    - function: private::main\n\n**router.rs**\n  Modify existing code\n\n**scheduler.rs**\n  Modify existing code\n\n**customers.rs**\n  Modify existing code\n\n**payment_intents.rs**\n  Modify existing code\n\n**types.rs**\n  Modify existing code\n\n**refunds.rs**\n  Modify existing code\n\n**connection.rs**\n  Modify existing code\n\n**adyen.rs**\n  Modify existing code\n\n**stripe.rs**\n  Modify existing code\n\n**admin.rs**\n  Modify existing code\n\n**customers.rs**\n  Modify existing code\n\n**errors.rs**\n  Modify existing code\n\n**mandate.rs**\n  Modify existing code\n\n**cards.rs**\n  Modify existing code\n\n**payments.rs**\n  Modify existing code\n\n**authorize_flow.rs**\n  Modify existing code\n\n**helpers.rs**\n  Modify existing code\n\n**operations.rs**\n  Modify existing code\n\n**payment_cancel.rs**\n  Modify existing code\n\n**payment_capture.rs**\n  Modify existing code\n\n**payment_confirm.rs**\n  Modify existing code\n\n**payment_create.rs**\n  Modify existing code\n\n**payment_response.rs**\n  Modify existing code\n\n**payment_session.rs**\n  Modify existing code\n\n**payment_start.rs**\n  Modify existing code\n\n**payment_status.rs**\n  Modify existing code\n\n**payment_update.rs**\n  Modify existing code\n\n**transformers.rs**\n  Modify existing code\n\n**refunds.rs**\n  Modify existing code\n\n**validator.rs**\n  Modify existing code\n\n**utils.rs**\n  Modify existing code\n\n**webhooks.rs**\n  Modify existing code\n\n**utils.rs**\n  Modify existing code\n\n**db.rs**\n  Add:\n    - function: private::close\n    - function: pub::new\n    - function: private::close\n    - function: pub::get_and_deserialize_key\n    - struct: pub::MockDb\n    - enum: pub::StorageImpl\n    - trait: pub::StorageInterface\n    - impl: impl StorageInterface for Store\n    - impl: impl MockDb\n    - impl: impl StorageInterface for MockDb\n    - mod: pub::queue\n\n**address.rs**\n  Add:\n    - function: private::find_address\n    - function: private::update_address\n    - function: private::insert_address\n    - impl: impl AddressInterface for MockDb\n\n**configs.rs**\n  Add:\n    - function: private::insert_config\n    - function: private::find_config_by_key\n    - function: private::update_config_by_key\n    - impl: impl ConfigInterface for MockDb\n\n**connector_response.rs**\n  Add:\n    - function: private::insert_connector_response\n    - function: private::find_connector_response_by_payment_id_merchant_id_txn_id\n    - function: private::update_connector_response\n    - impl: impl ConnectorResponseInterface for MockDb\n\n**customers.rs**\n  Modify existing code\n\n**events.rs**\n  Add:\n    - function: private::insert_event\n    - impl: impl EventInterface for MockDb\n\n**locker_mock_up.rs**\n  Add:\n    - function: private::find_locker_by_card_id\n    - function: private::insert_locker_mock_up\n    - impl: impl LockerMockUpInterface for MockDb\n\n**mandate.rs**\n  Modify existing code\n\n**merchant_account.rs**\n  Add:\n    - function: private::insert_merchant\n    - function: private::find_merchant_account_by_merchant_id\n    - function: private::update_merchant\n    - function: private::find_merchant_account_by_api_key\n    - function: private::find_merchant_account_by_publishable_key\n    - function: private::delete_merchant_account_by_merchant_id\n    - trait: pub::MerchantAccountInterface\n    - impl: impl MerchantAccountInterface for [async_trait::async_trait]\n    - impl: impl MerchantAccountInterface for MockDb\n\n**merchant_connector_account.rs**\n  Add:\n    - function: private::find_merchant_connector_account_by_merchant_id_connector\n    - function: private::find_by_merchant_connector_account_merchant_id_merchant_connector_id\n    - function: private::insert_merchant_connector_account\n    - function: private::find_merchant_connector_account_by_merchant_id_list\n    - function: private::update_merchant_connector_account\n    - function: private::delete_merchant_connector_account_by_merchant_id_merchant_connector_id\n    - impl: impl MerchantConnectorAccountInterface for MockDb\n\n**payment_attempt.rs**\n  Remove:\n    - impl: impl IPaymentAttempt for super::IPaymentAttempt\n  Add:\n    - function: private::find_payment_attempt_by_merchant_id_txn_id\n    - function: private::find_payment_attempt_by_merchant_id_connector_txn_id\n    - function: private::insert_payment_attempt\n    - function: private::update_payment_attempt\n    - function: private::find_payment_attempt_by_payment_id_merchant_id\n    - function: private::find_payment_attempt_by_transaction_id_payment_id_merchant_id\n    - function: private::find_payment_attempt_last_successful_attempt_by_payment_id_merchant_id\n    - impl: impl PaymentAttemptInterface for [async_trait::async_trait]\n    - impl: impl PaymentAttemptInterface for MockDb\n\n**payment_intent.rs**\n  Add:\n    - function: private::filter_payment_intent_by_constraints\n    - function: private::insert_payment_intent\n    - function: private::update_payment_intent\n    - function: private::find_payment_intent_by_payment_id_merchant_id\n    - impl: impl PaymentIntentInterface for MockDb\n\n**payment_method.rs**\n  Add:\n    - function: private::find_payment_method\n    - function: private::insert_payment_method\n    - function: private::find_payment_method_by_customer_id_merchant_id_list\n    - function: private::delete_payment_method_by_merchant_id_payment_method_id\n    - impl: impl PaymentMethodInterface for MockDb\n\n**process_tracker.rs**\n  Add:\n    - function: private::find_process_by_id\n    - function: private::reinitialize_limbo_processes\n    - function: private::find_processes_by_time_status\n    - function: private::insert_process\n    - function: private::update_process\n    - function: private::update_process_tracker\n    - function: private::process_tracker_update_process_status_by_ids\n    - impl: impl ProcessTrackerInterface for MockDb\n\n**queue.rs**\n  Add:\n    - function: private::fetch_consumer_tasks\n    - function: private::consumer_group_create\n    - function: private::acquire_pt_lock\n    - function: private::release_pt_lock\n    - function: private::stream_append_entry\n    - function: private::get_key\n    - function: private::fetch_consumer_tasks\n    - function: private::consumer_group_create\n    - function: private::acquire_pt_lock\n    - function: private::release_pt_lock\n    - function: private::stream_append_entry\n    - function: private::get_key\n    - trait: pub::QueueInterface\n    - impl: impl QueueInterface for super::Store\n    - impl: impl QueueInterface for MockDb\n\n**refund.rs**\n  Add:\n    - function: private::find_refund_by_internal_reference_id_merchant_id\n    - function: private::insert_refund\n    - function: private::find_refund_by_merchant_id_transaction_id\n    - function: private::update_refund\n    - function: private::find_refund_by_merchant_id_refund_id\n    - function: private::find_refund_by_payment_id_merchant_id\n    - impl: impl RefundInterface for MockDb\n\n**temp_card.rs**\n  Add:\n    - function: private::insert_temp_card\n    - function: private::find_tempcard_by_transaction_id\n    - function: private::insert_tempcard_with_token\n    - function: private::find_tempcard_by_token\n    - impl: impl TempCardInterface for MockDb\n\n**lib.rs**\n  Modify existing code\n\n**pii.rs**\n  Modify existing code\n\n**admin.rs**\n  Modify existing code\n\n**app.rs**\n  Add:\n    - function: pub::with_storage\n    - function: pub::new\n    - impl: impl AppState\n\n**customers.rs**\n  Modify existing code\n\n**mandates.rs**\n  Modify existing code\n\n**payment_methods.rs**\n  Modify existing code\n\n**payments.rs**\n  Modify existing code\n\n**refunds.rs**\n  Modify existing code\n\n**consumer.rs**\n  Modify existing code\n\n**producer.rs**\n  Add:\n    - function: pub::fetch_upper_limit\n    - function: pub::fetch_lower_limit\n    - function: pub::producer_lock_key\n    - function: pub::producer_lock_ttl\n\n**utils.rs**\n  Modify existing code\n\n**payment_sync.rs**\n  Modify existing code\n\n**api.rs**\n  Modify existing code\n\n**mandates.rs**\n  Modify existing code\n\n**payment_methods.rs**\n  Modify existing code\n\n**payments.rs**\n  Modify existing code\n\n**webhooks.rs**\n  Modify existing code\n\n**storage.rs**\n  Modify existing code\n\n**address.rs**\n  Add:\n    - function: private::find_address\n    - function: private::update_address\n    - function: private::insert_address\n    - impl: impl AddressInterface for MockDb\n\n**configs.rs**\n  Add:\n    - function: private::insert_config\n    - function: private::find_config_by_key\n    - function: private::update_config_by_key\n    - impl: impl ConfigInterface for MockDb\n\n**connector_response.rs**\n  Add:\n    - function: private::insert_connector_response\n    - function: private::find_connector_response_by_payment_id_merchant_id_txn_id\n    - function: private::update_connector_response\n    - impl: impl ConnectorResponseInterface for MockDb\n\n**customers.rs**\n  Modify existing code\n\n**enums.rs**\n  Modify existing code\n\n**events.rs**\n  Add:\n    - function: private::insert_event\n    - impl: impl EventInterface for MockDb\n\n**locker_mock_up.rs**\n  Add:\n    - function: private::find_locker_by_card_id\n    - function: private::insert_locker_mock_up\n    - impl: impl LockerMockUpInterface for MockDb\n\n**mandate.rs**\n  Modify existing code\n\n**payment_attempt.rs**\n  Remove:\n    - impl: impl IPaymentAttempt for super::IPaymentAttempt\n  Add:\n    - function: private::find_payment_attempt_by_merchant_id_txn_id\n    - function: private::find_payment_attempt_by_merchant_id_connector_txn_id\n    - function: private::insert_payment_attempt\n    - function: private::update_payment_attempt\n    - function: private::find_payment_attempt_by_payment_id_merchant_id\n    - function: private::find_payment_attempt_by_transaction_id_payment_id_merchant_id\n    - function: private::find_payment_attempt_last_successful_attempt_by_payment_id_merchant_id\n    - impl: impl PaymentAttemptInterface for [async_trait::async_trait]\n    - impl: impl PaymentAttemptInterface for MockDb\n\n**payment_intent.rs**\n  Add:\n    - function: private::filter_payment_intent_by_constraints\n    - function: private::insert_payment_intent\n    - function: private::update_payment_intent\n    - function: private::find_payment_intent_by_payment_id_merchant_id\n    - impl: impl PaymentIntentInterface for MockDb\n\n**process_tracker.rs**\n  Add:\n    - function: private::find_process_by_id\n    - function: private::reinitialize_limbo_processes\n    - function: private::find_processes_by_time_status\n    - function: private::insert_process\n    - function: private::update_process\n    - function: private::update_process_tracker\n    - function: private::process_tracker_update_process_status_by_ids\n    - impl: impl ProcessTrackerInterface for MockDb\n\n**customers.rs**\n  Modify existing code\n\n**merchant_account.rs**\n  Add:\n    - function: private::insert_merchant\n    - function: private::find_merchant_account_by_merchant_id\n    - function: private::update_merchant\n    - function: private::find_merchant_account_by_api_key\n    - function: private::find_merchant_account_by_publishable_key\n    - function: private::delete_merchant_account_by_merchant_id\n    - trait: pub::MerchantAccountInterface\n    - impl: impl MerchantAccountInterface for [async_trait::async_trait]\n    - impl: impl MerchantAccountInterface for MockDb\n\n**merchant_connector_account.rs**\n  Add:\n    - function: private::find_merchant_connector_account_by_merchant_id_connector\n    - function: private::find_by_merchant_connector_account_merchant_id_merchant_connector_id\n    - function: private::insert_merchant_connector_account\n    - function: private::find_merchant_connector_account_by_merchant_id_list\n    - function: private::update_merchant_connector_account\n    - function: private::delete_merchant_connector_account_by_merchant_id_merchant_connector_id\n    - impl: impl MerchantConnectorAccountInterface for MockDb\n\n**payment_attempt.rs**\n  Remove:\n    - impl: impl IPaymentAttempt for super::IPaymentAttempt\n  Add:\n    - function: private::find_payment_attempt_by_merchant_id_txn_id\n    - function: private::find_payment_attempt_by_merchant_id_connector_txn_id\n    - function: private::insert_payment_attempt\n    - function: private::update_payment_attempt\n    - function: private::find_payment_attempt_by_payment_id_merchant_id\n    - function: private::find_payment_attempt_by_transaction_id_payment_id_merchant_id\n    - function: private::find_payment_attempt_last_successful_attempt_by_payment_id_merchant_id\n    - impl: impl PaymentAttemptInterface for [async_trait::async_trait]\n    - impl: impl PaymentAttemptInterface for MockDb\n\n**payment_intent.rs**\n  Add:\n    - function: private::filter_payment_intent_by_constraints\n    - function: private::insert_payment_intent\n    - function: private::update_payment_intent\n    - function: private::find_payment_intent_by_payment_id_merchant_id\n    - impl: impl PaymentIntentInterface for MockDb\n\n**temp_card.rs**\n  Add:\n    - function: private::insert_temp_card\n    - function: private::find_tempcard_by_transaction_id\n    - function: private::insert_tempcard_with_token\n    - function: private::find_tempcard_by_token\n    - impl: impl TempCardInterface for MockDb\n\n**refund.rs**\n  Add:\n    - function: private::find_refund_by_internal_reference_id_merchant_id\n    - function: private::insert_refund\n    - function: private::find_refund_by_merchant_id_transaction_id\n    - function: private::update_refund\n    - function: private::find_refund_by_merchant_id_refund_id\n    - function: private::find_refund_by_payment_id_merchant_id\n    - impl: impl RefundInterface for MockDb\n\n**temp_card.rs**\n  Add:\n    - function: private::insert_temp_card\n    - function: private::find_tempcard_by_transaction_id\n    - function: private::insert_tempcard_with_token\n    - function: private::find_tempcard_by_token\n    - impl: impl TempCardInterface for MockDb\n\n**utils.rs**\n  Modify existing code\n\n**ext_traits.rs**\n  Add:\n    - function: private::new_tree\n    - struct: private::ValidEmail\n    - impl: impl Strategy for ValidEmail\n\n**aci.rs**\n  Modify existing code\n\n**authorizedotnet.rs**\n  Modify existing code\n\n**checkout.rs**\n  Modify existing code\n\n**customers.rs**\n  Modify existing code\n\n**health_check.rs**\n  Remove:\n    - function: private::health_check\n\n**integration_demo.rs**\n  Remove:\n    - struct: private::TestApp\n  Add:\n    - function: private::legacy_partial_refund\n    - function: private::legacy_exceed_refund\n\n**payments.rs**\n  Modify existing code\n\n**payments2.rs**\n  Modify existing code\n\n**refunds.rs**\n  Modify existing code\n\n**utils.rs**\n  Modify existing code\n\n**webhooks.rs**\n  Modify existing code\n\n**types.rs**\n  Modify existing code\n\n**logger.rs**\n  Remove:\n    - function: pub::last_modified_log\n    - function: private::extra_fields"}
