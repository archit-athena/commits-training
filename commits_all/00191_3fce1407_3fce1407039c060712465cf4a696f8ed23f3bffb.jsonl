{"prompt": "feat(connector): [Checkout] add GooglePay, ApplePay and Webhooks support  (#875)\n\nCo-authored-by: Arun Raj M <jarnura47@gmail.com>", "response": "Files to modify:\n\n\n**checkout.rs**\n  Add:\n    - function: private::build_headers\n    - impl: impl ConnectorCommonExt<Flow, Request, Response> for Checkout\n\n**transformers.rs**\n  Remove:\n    - enum: pub::Source\n  Add:\n    - function: private::try_from\n    - function: private::try_from\n    - function: pub::is_refund_event\n    - function: pub::is_chargeback_event\n    - function: private::from\n    - function: private::from\n    - struct: pub::CheckoutGooglePayData\n    - struct: pub::CheckoutApplePayData\n    - struct: pub::CheckoutApplePayHeader\n    - struct: pub::CheckoutTokenResponse\n    - struct: pub::WalletSource\n    - struct: pub::CheckoutWebhookData\n    - struct: pub::CheckoutWebhookBody\n    - struct: pub::CheckoutWebhookObjectResource\n    - enum: pub::TokenRequest\n    - enum: pub::CheckoutSourceTypes\n    - enum: pub::CheckoutTxnType\n    - impl: impl TryFrom<&types::TokenizationRouterData> for TokenRequest\n    - impl: impl TryFrom<types::ResponseRouterData<F, CheckoutTokenResponse, T, types::PaymentsResponseData>> for types::RouterData<F, T, types::PaymentsResponseData>\n    - impl: impl From<CheckoutTxnType> for api::IncomingWebhookEvent\n    - impl: impl From<CheckoutTxnType> for api_models::enums::DisputeStage\n\n**utils.rs**\n  Add:\n    - function: private::get_payment_method_token\n\n**checkout.rs**\n  Add:\n    - function: private::build_headers\n    - impl: impl ConnectorCommonExt<Flow, Request, Response> for Checkout\n\n**connector_auth.rs**\n  Modify existing code"}
