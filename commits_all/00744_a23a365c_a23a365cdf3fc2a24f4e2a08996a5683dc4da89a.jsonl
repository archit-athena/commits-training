{"prompt": "feat(constraint_graph): make the constraint graph framework generic and move it into a separate crate (#3071)", "response": "Files to modify:\n\n\n**analyzer.rs**\n  Modify existing code\n\n**graph.rs**\n  Remove:\n    - function: private::from\n    - function: private::get_id\n    - function: private::with_id\n    - function: pub::new\n    - function: private::get_id\n    - function: private::with_id\n    - function: private::get_id\n    - function: private::with_id\n    - function: pub::new\n    - function: private::default\n    - function: private::deref\n    - function: private::deref_mut\n    - function: private::new\n    - function: private::from\n    - function: private::from\n    - function: private::get_analysis_trace\n    - function: private::eq\n    - function: private::check_presence\n    - function: pub::new\n    - function: pub::build\n    - function: pub::make_domain\n    - function: pub::make_value_node\n    - function: pub::make_edge\n    - function: pub::make_any_aggregator\n    - function: private::check_node\n    - function: pub::combine\n    - struct: pub::NodeId\n    - struct: pub::DomainInfo\n    - struct: pub::DomainIdentifier\n    - struct: pub::DomainId\n    - struct: pub::EdgeId\n    - struct: pub::Memoization\n    - struct: pub::Edge\n    - struct: pub::KnowledgeGraph\n    - struct: pub::KnowledgeGraphBuilder\n    - enum: pub::Strength\n    - enum: pub::Relation\n    - enum: pub::NodeType\n    - enum: pub::NodeValue\n    - enum: pub::ValueTracePredecessor\n    - enum: pub::AnalysisTrace\n    - enum: pub::AnalysisError\n    - trait: pub::KgraphMetadata\n    - impl: impl From<Relation> for bool\n    - impl: impl utils::EntityId for NodeId\n    - impl: impl DomainIdentifier<'a>\n    - impl: impl utils::EntityId for DomainId\n    - impl: impl utils::EntityId for EdgeId\n    - impl: impl Memoization\n    - impl: impl Default for Memoization\n    - impl: impl Deref for Memoization\n    - impl: impl DerefMut for Memoization\n    - impl: impl Node\n    - impl: impl KgraphMetadata for M\n    - impl: impl From<dir::DirValue> for NodeValue\n    - impl: impl From<dir::DirKey> for NodeValue\n    - impl: impl GraphError\n    - impl: impl PartialEq<dir::DirValue> for NodeValue\n  Add:\n    - enum: pub::AnalysisError\n    - trait: pub::CgraphExt\n    - impl: impl cgraph::KeyNode for dir::DirKey\n    - impl: impl CgraphExt for (&cgraph::NodeValue::Key(key))\n\n**truth.rs**\n  Modify existing code\n\n**types.rs**\n  Modify existing code\n\n**lib.rs**\n  Remove:\n    - mod: pub::utils\n\n**utils.rs**\n  Remove:\n    - mod: pub::dense_map\n\n**knowledge.rs**\n  Modify existing code\n\n**lib.rs**\n  Remove:\n    - mod: pub::utils\n\n**builder.rs**\n  Add:\n    - function: private::from\n    - function: private::from\n    - function: pub::new\n    - function: pub::build\n    - function: private::retrieve_domain_from_identifier\n    - function: pub::make_domain\n    - function: pub::make_value_node\n    - function: pub::make_edge\n    - function: pub::make_all_aggregator\n    - function: pub::make_any_aggregator\n    - function: pub::make_in_aggregator\n    - function: private::ensure_node_exists\n    - function: private::ensure_domain_exists\n    - struct: pub::ConstraintGraphBuilder\n    - enum: pub::DomainIdOrIdentifier\n    - impl: impl From<&'a str> for DomainIdOrIdentifier<'a>\n    - impl: impl From<DomainId> for DomainIdOrIdentifier<'_>\n    - impl: impl ConstraintGraphBuilder<'a, V>\n\n**dense_map.rs**\n  Modify existing code\n\n**error.rs**\n  Add:\n    - function: pub::get_analysis_trace\n    - enum: pub::ValueTracePredecessor\n    - enum: pub::AnalysisTrace\n    - enum: pub::GraphError\n    - impl: impl GraphError<V>\n\n**graph.rs**\n  Remove:\n    - function: private::from\n    - function: private::get_id\n    - function: private::with_id\n    - function: pub::new\n    - function: private::get_id\n    - function: private::with_id\n    - function: private::get_id\n    - function: private::with_id\n    - function: pub::new\n    - function: private::default\n    - function: private::deref\n    - function: private::deref_mut\n    - function: private::new\n    - function: private::from\n    - function: private::from\n    - function: private::get_analysis_trace\n    - function: private::eq\n    - function: private::check_presence\n    - function: pub::new\n    - function: pub::build\n    - function: pub::make_domain\n    - function: pub::make_value_node\n    - function: pub::make_edge\n    - function: pub::make_any_aggregator\n    - function: private::check_node\n    - function: pub::combine\n    - struct: pub::NodeId\n    - struct: pub::DomainInfo\n    - struct: pub::DomainIdentifier\n    - struct: pub::DomainId\n    - struct: pub::EdgeId\n    - struct: pub::Memoization\n    - struct: pub::Edge\n    - struct: pub::KnowledgeGraph\n    - struct: pub::KnowledgeGraphBuilder\n    - enum: pub::Strength\n    - enum: pub::Relation\n    - enum: pub::NodeType\n    - enum: pub::NodeValue\n    - enum: pub::ValueTracePredecessor\n    - enum: pub::AnalysisTrace\n    - enum: pub::AnalysisError\n    - trait: pub::KgraphMetadata\n    - impl: impl From<Relation> for bool\n    - impl: impl utils::EntityId for NodeId\n    - impl: impl DomainIdentifier<'a>\n    - impl: impl utils::EntityId for DomainId\n    - impl: impl utils::EntityId for EdgeId\n    - impl: impl Memoization\n    - impl: impl Default for Memoization\n    - impl: impl Deref for Memoization\n    - impl: impl DerefMut for Memoization\n    - impl: impl Node\n    - impl: impl KgraphMetadata for M\n    - impl: impl From<dir::DirValue> for NodeValue\n    - impl: impl From<dir::DirKey> for NodeValue\n    - impl: impl GraphError\n    - impl: impl PartialEq<dir::DirValue> for NodeValue\n  Add:\n    - enum: pub::AnalysisError\n    - trait: pub::CgraphExt\n    - impl: impl cgraph::KeyNode for dir::DirKey\n    - impl: impl CgraphExt for (&cgraph::NodeValue::Key(key))\n\n**lib.rs**\n  Remove:\n    - mod: pub::utils\n\n**types.rs**\n  Modify existing code\n\n**evaluation.rs**\n  Modify existing code\n\n**error.rs**\n  Add:\n    - function: pub::get_analysis_trace\n    - enum: pub::ValueTracePredecessor\n    - enum: pub::AnalysisTrace\n    - enum: pub::GraphError\n    - impl: impl GraphError<V>\n\n**mca.rs**\n  Modify existing code\n\n**routing.rs**\n  Modify existing code"}
