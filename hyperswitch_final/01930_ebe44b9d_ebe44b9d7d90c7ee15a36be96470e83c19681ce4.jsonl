{"prompt": "feat(routing): Add audit trail for routing (#8188)\n\nCo-authored-by: hyperswitch-bot[bot] <148525504+hyperswitch-bot[bot]@users.noreply.github.com>", "response": "Files to modify:\n\n\n**clickhouse.rs**\n  Add:\n    - function: private::try_into\n\n**lib.rs**\n  Add:\n    - mod: pub::routing_events\n\n**routing_events.rs**\n  Add:\n    - trait: pub::RoutingEventAnalytics\n    - mod: private::core\n    - mod: pub::events\n\n**core.rs**\n  Add:\n    - function: pub::routing_events_core\n\n**events.rs**\n  Add:\n    - function: pub::get_routing_events\n    - struct: pub::RoutingEventsResult\n    - trait: pub::RoutingEventLogAnalytics\n\n**sqlx.rs**\n  Modify existing code\n\n**types.rs**\n  Modify existing code\n\n**analytics.rs**\n  Add:\n    - mod: pub::routing_events\n\n**routing_events.rs**\n  Add:\n    - trait: pub::RoutingEventAnalytics\n    - mod: private::core\n    - mod: pub::events\n\n**events.rs**\n  Add:\n    - function: pub::get_routing_events\n    - struct: pub::RoutingEventsResult\n    - trait: pub::RoutingEventLogAnalytics\n\n**routing.rs**\n  Add:\n    - function: pub::from_decision_engine_approach\n    - function: private::fmt\n    - struct: pub::CalSuccessRateConfigEventRequest\n    - struct: pub::CalSuccessRateEventRequest\n    - struct: pub::EliminationRoutingEventBucketConfig\n    - struct: pub::EliminationRoutingEventRequest\n    - struct: pub::CalContractScoreEventRequest\n    - struct: pub::LabelWithScoreEventResponse\n    - struct: pub::CalSuccessRateEventResponse\n    - struct: pub::BucketInformationEventResponse\n    - struct: pub::EliminationInformationEventResponse\n    - struct: pub::LabelWithStatusEliminationEventResponse\n    - struct: pub::EliminationEventResponse\n    - struct: pub::ScoreDataEventResponse\n    - struct: pub::CalContractScoreEventResponse\n    - struct: pub::CalGlobalSuccessRateConfigEventRequest\n    - struct: pub::CalGlobalSuccessRateEventRequest\n    - struct: pub::UpdateSuccessRateWindowConfig\n    - struct: pub::UpdateLabelWithStatusEventRequest\n    - struct: pub::UpdateSuccessRateWindowEventRequest\n    - struct: pub::UpdateSuccessRateWindowEventResponse\n    - struct: pub::LabelWithBucketNameEventRequest\n    - struct: pub::UpdateEliminationBucketEventRequest\n    - struct: pub::UpdateEliminationBucketEventResponse\n    - struct: pub::ContractLabelInformationEventRequest\n    - struct: pub::UpdateContractRequestEventRequest\n    - struct: pub::UpdateContractEventResponse\n    - enum: pub::RoutingApproach\n    - enum: pub::UpdationStatusEventResponse\n    - enum: pub::EliminationUpdationStatusEventResponse\n    - enum: pub::ContractUpdationStatusEventResponse\n    - impl: impl RoutingApproach\n    - impl: impl std::fmt::Display for RoutingApproach\n\n**events.rs**\n  Add:\n    - function: pub::get_routing_events\n    - struct: pub::RoutingEventsResult\n    - trait: pub::RoutingEventLogAnalytics\n\n**routing_api_logs.rs**\n  Add:\n    - function: private::fmt\n    - function: pub::new\n    - function: pub::set_response_body\n    - function: pub::set_error_response_body\n    - function: pub::set_error\n    - function: pub::set_status_code\n    - function: pub::set_routable_connectors\n    - function: pub::set_payment_connector\n    - function: pub::set_routing_approach\n    - function: pub::get_request_id\n    - function: pub::get_merchant_id\n    - function: pub::get_payment_id\n    - function: pub::get_profile_id\n    - struct: pub::RoutingEvent\n    - enum: pub::RoutingEngine\n    - enum: pub::ApiMethod\n    - impl: impl fmt::Display for ApiMethod\n    - impl: impl RoutingEvent\n\n**analytics.rs**\n  Add:\n    - mod: pub::routing_events\n\n**payments.rs**\n  Modify existing code\n\n**routing.rs**\n  Add:\n    - function: pub::from_decision_engine_approach\n    - function: private::fmt\n    - struct: pub::CalSuccessRateConfigEventRequest\n    - struct: pub::CalSuccessRateEventRequest\n    - struct: pub::EliminationRoutingEventBucketConfig\n    - struct: pub::EliminationRoutingEventRequest\n    - struct: pub::CalContractScoreEventRequest\n    - struct: pub::LabelWithScoreEventResponse\n    - struct: pub::CalSuccessRateEventResponse\n    - struct: pub::BucketInformationEventResponse\n    - struct: pub::EliminationInformationEventResponse\n    - struct: pub::LabelWithStatusEliminationEventResponse\n    - struct: pub::EliminationEventResponse\n    - struct: pub::ScoreDataEventResponse\n    - struct: pub::CalContractScoreEventResponse\n    - struct: pub::CalGlobalSuccessRateConfigEventRequest\n    - struct: pub::CalGlobalSuccessRateEventRequest\n    - struct: pub::UpdateSuccessRateWindowConfig\n    - struct: pub::UpdateLabelWithStatusEventRequest\n    - struct: pub::UpdateSuccessRateWindowEventRequest\n    - struct: pub::UpdateSuccessRateWindowEventResponse\n    - struct: pub::LabelWithBucketNameEventRequest\n    - struct: pub::UpdateEliminationBucketEventRequest\n    - struct: pub::UpdateEliminationBucketEventResponse\n    - struct: pub::ContractLabelInformationEventRequest\n    - struct: pub::UpdateContractRequestEventRequest\n    - struct: pub::UpdateContractEventResponse\n    - enum: pub::RoutingApproach\n    - enum: pub::UpdationStatusEventResponse\n    - enum: pub::EliminationUpdationStatusEventResponse\n    - enum: pub::ContractUpdationStatusEventResponse\n    - impl: impl RoutingApproach\n    - impl: impl std::fmt::Display for RoutingApproach\n\n**helpers.rs**\n  Modify existing code\n\n**events.rs**\n  Add:\n    - function: pub::get_routing_events\n    - struct: pub::RoutingEventsResult\n    - trait: pub::RoutingEventLogAnalytics\n\n**routing_api_logs.rs**\n  Add:\n    - function: private::fmt\n    - function: pub::new\n    - function: pub::set_response_body\n    - function: pub::set_error_response_body\n    - function: pub::set_error\n    - function: pub::set_status_code\n    - function: pub::set_routable_connectors\n    - function: pub::set_payment_connector\n    - function: pub::set_routing_approach\n    - function: pub::get_request_id\n    - function: pub::get_merchant_id\n    - function: pub::get_payment_id\n    - function: pub::get_profile_id\n    - struct: pub::RoutingEvent\n    - enum: pub::RoutingEngine\n    - enum: pub::ApiMethod\n    - impl: impl fmt::Display for ApiMethod\n    - impl: impl RoutingEvent\n\n**kafka.rs**\n  Modify existing code"}
