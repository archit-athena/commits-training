{"prompt": "refactor(payment_intent_v2): payment intent fields refactoring (#5880)\n\nCo-authored-by: hrithikesh026 <hrithikesh.vm@juspay.in>\nCo-authored-by: hyperswitch-bot[bot] <148525504+hyperswitch-bot[bot]@users.noreply.github.com>", "response": "Files to modify:\n\n\n**payments.rs**\n  Remove:\n    - function: pub::get_client_secret\n    - function: private::deserialize\n    - function: private::expecting\n    - function: private::visit_str\n    - function: private::serialize\n    - function: private::test_serialize_client_secret\n    - function: private::test_deserialize_client_secret\n    - struct: pub::ClientSecret\n    - struct: private::ClientSecretVisitor\n    - impl: impl ClientSecret\n    - impl: impl Deserialize<'de> for ClientSecret\n    - impl: impl Visitor<'de> for ClientSecretVisitor\n    - impl: impl Serialize for ClientSecret\n    - mod: private::client_secret_tests\n\n**enums.rs**\n  Add:\n    - enum: pub::External3dsAuthenticationRequest\n    - enum: pub::EnablePaymentLinkRequest\n    - enum: pub::MitExemptionRequest\n    - enum: pub::PresenceOfCustomerDuringPayment\n\n**transformers.rs**\n  Add:\n    - function: private::from\n    - function: pub::as_bool\n    - function: pub::as_bool\n    - function: private::from\n    - function: private::from\n    - function: pub::as_bool\n    - function: private::from\n    - function: pub::as_bool\n    - impl: impl From<Option<bool>> for super::External3dsAuthenticationRequest\n    - impl: impl super::External3dsAuthenticationRequest\n    - impl: impl super::EnablePaymentLinkRequest\n    - impl: impl From<Option<bool>> for super::EnablePaymentLinkRequest\n    - impl: impl From<Option<bool>> for super::MitExemptionRequest\n    - impl: impl super::MitExemptionRequest\n    - impl: impl From<Option<bool>> for super::PresenceOfCustomerDuringPayment\n    - impl: impl super::PresenceOfCustomerDuringPayment\n\n**consts.rs**\n  Modify existing code\n\n**id_type.rs**\n  Remove:\n    - mod: private::payment_methods\n\n**global_id.rs**\n  Remove:\n    - struct: pub::CellId\n  Add:\n    - function: pub::get_string_repr\n    - struct: pub::CellId\n    - mod: pub::payment\n    - mod: pub::payment_methods\n\n**payment.rs**\n  Add:\n    - function: pub::get_string_repr\n    - function: private::try_from\n    - function: private::to_sql\n    - function: private::from_sql\n    - struct: pub::GlobalPaymentId\n    - impl: impl GlobalPaymentId\n    - impl: impl TryFrom<std::borrow::Cow<'static, str>> for GlobalPaymentId\n    - impl: impl diesel::serialize::ToSql<diesel::sql_types::Text, DB> for GlobalPaymentId\n    - impl: impl diesel::deserialize::FromSql<diesel::sql_types::Text, DB> for GlobalPaymentId\n\n**payment_methods.rs**\n  Remove:\n    - function: private::get_global_id\n    - impl: impl diesel::Queryable<diesel::sql_types::Text, DB> for GlobalPaymentMethodId\n  Add:\n    - impl: impl diesel::Queryable<sql_types::Text, DB> for GlobalPaymentMethodId\n\n**payment.rs**\n  Add:\n    - function: pub::get_string_repr\n    - function: private::try_from\n    - function: private::to_sql\n    - function: private::from_sql\n    - struct: pub::GlobalPaymentId\n    - impl: impl GlobalPaymentId\n    - impl: impl TryFrom<std::borrow::Cow<'static, str>> for GlobalPaymentId\n    - impl: impl diesel::serialize::ToSql<diesel::sql_types::Text, DB> for GlobalPaymentId\n    - impl: impl diesel::deserialize::FromSql<diesel::sql_types::Text, DB> for GlobalPaymentId\n\n**types.rs**\n  Remove:\n    - struct: pub::Description\n  Add:\n    - function: private::to_sql\n    - function: private::from_sql\n    - function: pub::get_string_repr\n    - function: private::deserialize\n    - function: private::expecting\n    - function: private::visit_str\n    - function: private::serialize\n    - function: private::to_sql\n    - function: private::from_sql\n    - function: private::build\n    - function: private::test_serialize_client_secret\n    - function: private::test_deserialize_client_secret\n    - function: pub::from\n    - function: pub::new_unchecked\n    - function: private::deserialize\n    - function: private::from_sql\n    - function: private::to_sql\n    - function: private::build\n    - function: private::from_sql\n    - struct: pub::Url\n    - struct: pub::ClientSecret\n    - struct: private::ClientSecretVisitor\n    - struct: pub::LengthString\n    - struct: pub::Description\n    - struct: pub::StatementDescriptor\n    - enum: pub::LengthStringError\n    - impl: impl ToSql<sql_types::Text, DB> for Url\n    - impl: impl FromSql<sql_types::Text, DB> for Url\n    - impl: impl ClientSecret\n    - impl: impl Deserialize<'de> for ClientSecret\n    - impl: impl Visitor<'de> for ClientSecretVisitor\n    - impl: impl Serialize for ClientSecret\n    - impl: impl ToSql<sql_types::Text, diesel::pg::Pg> for ClientSecret\n    - impl: impl FromSql<sql_types::Text, DB> for ClientSecret\n    - impl: impl Queryable<sql_types::Text, DB> for ClientSecret\n    - impl: impl LengthString<MAX_LENGTH, MIN_LENGTH>\n    - impl: impl Deserialize<'de> for LengthString<MAX_LENGTH, MIN_LENGTH>\n    - impl: impl FromSql<sql_types::Text, DB> for LengthString<MAX_DESCRIPTION_LENGTH, 1>\n    - impl: impl Queryable<sql_types::Text, DB> for StatementDescriptor\n    - impl: impl FromSql<sql_types::Text, DB> for StatementDescriptor\n    - mod: private::client_secret_type\n    - mod: private::client_secret_tests\n\n**payment_intent.rs**\n  Add:\n    - struct: pub::PaymentLinkConfigRequestForPayments\n    - struct: pub::PaymentLinkTransactionDetails\n    - struct: pub::TransactionDetailsUiConfiguration\n\n**payment_intent.rs**\n  Add:\n    - struct: pub::PaymentLinkConfigRequestForPayments\n    - struct: pub::PaymentLinkTransactionDetails\n    - struct: pub::TransactionDetailsUiConfiguration\n\n**schema_v2.rs**\n  Modify existing code\n\n**payments.rs**\n  Remove:\n    - function: pub::get_client_secret\n    - function: private::deserialize\n    - function: private::expecting\n    - function: private::visit_str\n    - function: private::serialize\n    - function: private::test_serialize_client_secret\n    - function: private::test_deserialize_client_secret\n    - struct: pub::ClientSecret\n    - struct: private::ClientSecretVisitor\n    - impl: impl ClientSecret\n    - impl: impl Deserialize<'de> for ClientSecret\n    - impl: impl Visitor<'de> for ClientSecretVisitor\n    - impl: impl Serialize for ClientSecret\n    - mod: private::client_secret_tests\n\n**payment_intent.rs**\n  Add:\n    - struct: pub::PaymentLinkConfigRequestForPayments\n    - struct: pub::PaymentLinkTransactionDetails\n    - struct: pub::TransactionDetailsUiConfiguration\n\n**customers.rs**\n  Modify existing code\n\n**fraud_check.rs**\n  Add:\n    - function: pub::call_frm_service\n    - function: pub::make_frm_data_and_fraud_check_operation\n\n**fulfillment_flow.rs**\n  Add:\n    - function: pub::construct_fulfillment_router_data\n\n**fraud_check_post.rs**\n  Add:\n    - function: private::get_trackers\n\n**fraud_check_pre.rs**\n  Add:\n    - function: private::get_trackers\n\n**payment_methods.rs**\n  Remove:\n    - function: private::get_global_id\n    - impl: impl diesel::Queryable<diesel::sql_types::Text, DB> for GlobalPaymentMethodId\n  Add:\n    - impl: impl diesel::Queryable<sql_types::Text, DB> for GlobalPaymentMethodId\n\n**cards.rs**\n  Modify existing code\n\n**transformers.rs**\n  Add:\n    - function: private::from\n    - function: pub::as_bool\n    - function: pub::as_bool\n    - function: private::from\n    - function: private::from\n    - function: pub::as_bool\n    - function: private::from\n    - function: pub::as_bool\n    - impl: impl From<Option<bool>> for super::External3dsAuthenticationRequest\n    - impl: impl super::External3dsAuthenticationRequest\n    - impl: impl super::EnablePaymentLinkRequest\n    - impl: impl From<Option<bool>> for super::EnablePaymentLinkRequest\n    - impl: impl From<Option<bool>> for super::MitExemptionRequest\n    - impl: impl super::MitExemptionRequest\n    - impl: impl From<Option<bool>> for super::PresenceOfCustomerDuringPayment\n    - impl: impl super::PresenceOfCustomerDuringPayment\n\n**payments.rs**\n  Remove:\n    - function: pub::get_client_secret\n    - function: private::deserialize\n    - function: private::expecting\n    - function: private::visit_str\n    - function: private::serialize\n    - function: private::test_serialize_client_secret\n    - function: private::test_deserialize_client_secret\n    - struct: pub::ClientSecret\n    - struct: private::ClientSecretVisitor\n    - impl: impl ClientSecret\n    - impl: impl Deserialize<'de> for ClientSecret\n    - impl: impl Visitor<'de> for ClientSecretVisitor\n    - impl: impl Serialize for ClientSecret\n    - mod: private::client_secret_tests\n\n**helpers.rs**\n  Add:\n    - function: pub::store_payment_method_data_in_vault\n    - function: pub::authenticate_client_secret\n    - function: pub::verify_payment_intent_time_and_client_secret\n\n**payment_response.rs**\n  Add:\n    - struct: pub::PaymentResponse\n\n**retry.rs**\n  Modify existing code\n\n**routing.rs**\n  Modify existing code\n\n**transformers.rs**\n  Add:\n    - function: private::from\n    - function: pub::as_bool\n    - function: pub::as_bool\n    - function: private::from\n    - function: private::from\n    - function: pub::as_bool\n    - function: private::from\n    - function: pub::as_bool\n    - impl: impl From<Option<bool>> for super::External3dsAuthenticationRequest\n    - impl: impl super::External3dsAuthenticationRequest\n    - impl: impl super::EnablePaymentLinkRequest\n    - impl: impl From<Option<bool>> for super::EnablePaymentLinkRequest\n    - impl: impl From<Option<bool>> for super::MitExemptionRequest\n    - impl: impl super::MitExemptionRequest\n    - impl: impl From<Option<bool>> for super::PresenceOfCustomerDuringPayment\n    - impl: impl super::PresenceOfCustomerDuringPayment\n\n**pm_auth.rs**\n  Add:\n    - function: pub::retrieve_payment_method_from_auth_service\n\n**utils.rs**\n  Add:\n    - function: pub::construct_refund_router_data\n    - function: pub::construct_payments_dynamic_tax_calculation_router_data\n    - function: private::get_profile_id\n\n**utils.rs**\n  Add:\n    - function: pub::construct_refund_router_data\n    - function: pub::construct_payments_dynamic_tax_calculation_router_data\n    - function: private::get_profile_id\n\n**kafka_store.rs**\n  Modify existing code\n\n**payment_intent.rs**\n  Add:\n    - struct: pub::PaymentLinkConfigRequestForPayments\n    - struct: pub::PaymentLinkTransactionDetails\n    - struct: pub::TransactionDetailsUiConfiguration\n\n**payment_intent_event.rs**\n  Modify existing code\n\n**storage.rs**\n  Modify existing code\n\n**utils.rs**\n  Add:\n    - function: pub::construct_refund_router_data\n    - function: pub::construct_payments_dynamic_tax_calculation_router_data\n    - function: private::get_profile_id\n\n**lib.rs**\n  Add:\n    - function: private::unique_constraints\n\n**payment_intent.rs**\n  Add:\n    - struct: pub::PaymentLinkConfigRequestForPayments\n    - struct: pub::PaymentLinkTransactionDetails\n    - struct: pub::TransactionDetailsUiConfiguration\n\n**payment_intent.rs**\n  Add:\n    - struct: pub::PaymentLinkConfigRequestForPayments\n    - struct: pub::PaymentLinkTransactionDetails\n    - struct: pub::TransactionDetailsUiConfiguration"}
