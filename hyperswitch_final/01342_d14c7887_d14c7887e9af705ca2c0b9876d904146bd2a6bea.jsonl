{"prompt": "feat(global_id): create a `GlobalId` domain type (#5644)\n\nCo-authored-by: hyperswitch-bot[bot] <148525504+hyperswitch-bot[bot]@users.noreply.github.com>", "response": "Files to modify:\n\n\n**consts.rs**\n  Modify existing code\n\n**id_type.rs**\n  Remove:\n    - enum: pub::LengthIdError\n  Add:\n    - enum: pub::LengthIdError\n    - mod: private::global_id\n\n**global_id.rs**\n  Add:\n    - function: private::prefix\n    - function: private::from\n    - function: private::from\n    - function: private::from_str\n    - function: pub::from_string\n    - function: private::get_string_repr\n    - function: pub::generate\n    - function: pub::from_string\n    - function: private::to_sql\n    - function: private::from_sql\n    - function: private::deserialize\n    - function: private::test_cell_id_from_str\n    - function: private::test_global_id_generate\n    - function: private::test_global_id_from_string\n    - function: private::test_global_id_deser\n    - function: private::test_global_id_deser_error\n    - struct: pub::GlobalId\n    - struct: pub::CellId\n    - enum: pub::GlobalEntity\n    - enum: pub::CellIdError\n    - enum: pub::GlobalIdError\n    - impl: impl GlobalEntity\n    - impl: impl From<LengthIdError> for CellIdError\n    - impl: impl From<AlphaNumericIdError> for CellIdError\n    - impl: impl CellId\n    - impl: impl GlobalId\n    - impl: impl ToSql<sql_types::Text, DB> for GlobalId\n    - impl: impl FromSql<sql_types::Text, DB> for GlobalId\n    - impl: impl serde::Deserialize<'de> for GlobalId\n    - mod: private::global_id_tests"}
