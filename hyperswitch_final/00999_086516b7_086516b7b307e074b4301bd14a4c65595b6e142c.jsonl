{"prompt": "feat(connector): [ZSL] add connector template code  (#4285)\n\nCo-authored-by: hyperswitch-bot[bot] <148525504+hyperswitch-bot[bot]@users.noreply.github.com>\nCo-authored-by: SamraatBansal <55536657+SamraatBansal@users.noreply.github.com>", "response": "Files to modify:\n\n\n**enums.rs**\n  Modify existing code\n\n**enums.rs**\n  Modify existing code\n\n**connector.rs**\n  Modify existing code\n\n**settings.rs**\n  Modify existing code\n\n**connector.rs**\n  Modify existing code\n\n**zsl.rs**\n  Add:\n    - function: private::build_headers\n    - function: private::id\n    - function: private::get_currency_unit\n    - function: private::common_get_content_type\n    - function: private::base_url\n    - function: private::get_auth_header\n    - function: private::build_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_webhook_object_reference_id\n    - function: private::get_webhook_event_type\n    - function: private::get_webhook_resource_object\n    - struct: pub::Zsl\n    - impl: impl api::Payment for Zsl\n    - impl: impl api::PaymentSession for Zsl\n    - impl: impl api::ConnectorAccessToken for Zsl\n    - impl: impl api::MandateSetup for Zsl\n    - impl: impl api::PaymentAuthorize for Zsl\n    - impl: impl api::PaymentSync for Zsl\n    - impl: impl api::PaymentCapture for Zsl\n    - impl: impl api::PaymentVoid for Zsl\n    - impl: impl api::Refund for Zsl\n    - impl: impl api::RefundExecute for Zsl\n    - impl: impl api::RefundSync for Zsl\n    - impl: impl api::PaymentToken for Zsl\n    - impl: impl ConnectorIntegration<\napi::PaymentMethodToken,\ntypes::PaymentMethodTokenizationData,\ntypes::PaymentsResponseData,\n> for Zsl\n    - impl: impl ConnectorCommonExt<Flow, Request, Response> for Zsl\n    - impl: impl ConnectorCommon for Zsl\n    - impl: impl ConnectorValidation for Zsl\n    - impl: impl ConnectorIntegration<api::Session, types::PaymentsSessionData, types::PaymentsResponseData> for Zsl\n    - impl: impl ConnectorIntegration<api::AccessTokenAuth, types::AccessTokenRequestData, types::AccessToken> for Zsl\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Zsl\n    - impl: impl ConnectorIntegration<api::Authorize, types::PaymentsAuthorizeData, types::PaymentsResponseData> for Zsl\n    - impl: impl ConnectorIntegration<api::PSync, types::PaymentsSyncData, types::PaymentsResponseData> for Zsl\n    - impl: impl ConnectorIntegration<api::Capture, types::PaymentsCaptureData, types::PaymentsResponseData> for Zsl\n    - impl: impl ConnectorIntegration<api::Void, types::PaymentsCancelData, types::PaymentsResponseData> for Zsl\n    - impl: impl ConnectorIntegration<api::Execute, types::RefundsData, types::RefundsResponseData> for Zsl\n    - impl: impl ConnectorIntegration<api::RSync, types::RefundsData, types::RefundsResponseData> for Zsl\n    - impl: impl api::IncomingWebhook for Zsl\n    - mod: pub::transformers\n\n**transformers.rs**\n  Add:\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::from\n    - function: private::try_from\n    - struct: pub::ZslRouterData\n    - struct: pub::ZslPaymentsRequest\n    - struct: pub::ZslCard\n    - struct: pub::ZslAuthType\n    - struct: pub::ZslPaymentsResponse\n    - struct: pub::ZslErrorResponse\n    - enum: pub::ZslPaymentStatus\n    - impl: impl TryFrom<(\n&types::api::CurrencyUnit,\ntypes::storage::enums::Currency,\ni64,\nT,\n)> for ZslRouterData<T>\n    - impl: impl TryFrom<&ZslRouterData<&types::PaymentsAuthorizeRouterData>> for ZslPaymentsRequest\n    - impl: impl TryFrom<&types::ConnectorAuthType> for ZslAuthType\n    - impl: impl From<ZslPaymentStatus> for enums::AttemptStatus\n    - impl: impl TryFrom<types::ResponseRouterData<F, ZslPaymentsResponse, T, types::PaymentsResponseData>> for types::RouterData<F, T, types::PaymentsResponseData>\n\n**admin.rs**\n  Modify existing code\n\n**flows.rs**\n  Modify existing code\n\n**api.rs**\n  Modify existing code\n\n**transformers.rs**\n  Add:\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::from\n    - function: private::try_from\n    - struct: pub::ZslRouterData\n    - struct: pub::ZslPaymentsRequest\n    - struct: pub::ZslCard\n    - struct: pub::ZslAuthType\n    - struct: pub::ZslPaymentsResponse\n    - struct: pub::ZslErrorResponse\n    - enum: pub::ZslPaymentStatus\n    - impl: impl TryFrom<(\n&types::api::CurrencyUnit,\ntypes::storage::enums::Currency,\ni64,\nT,\n)> for ZslRouterData<T>\n    - impl: impl TryFrom<&ZslRouterData<&types::PaymentsAuthorizeRouterData>> for ZslPaymentsRequest\n    - impl: impl TryFrom<&types::ConnectorAuthType> for ZslAuthType\n    - impl: impl From<ZslPaymentStatus> for enums::AttemptStatus\n    - impl: impl TryFrom<types::ResponseRouterData<F, ZslPaymentsResponse, T, types::PaymentsResponseData>> for types::RouterData<F, T, types::PaymentsResponseData>\n\n**ebanx.rs**\n  Modify existing code\n\n**main.rs**\n  Add:\n    - mod: private::zsl\n\n**zsl.rs**\n  Add:\n    - function: private::build_headers\n    - function: private::id\n    - function: private::get_currency_unit\n    - function: private::common_get_content_type\n    - function: private::base_url\n    - function: private::get_auth_header\n    - function: private::build_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_webhook_object_reference_id\n    - function: private::get_webhook_event_type\n    - function: private::get_webhook_resource_object\n    - struct: pub::Zsl\n    - impl: impl api::Payment for Zsl\n    - impl: impl api::PaymentSession for Zsl\n    - impl: impl api::ConnectorAccessToken for Zsl\n    - impl: impl api::MandateSetup for Zsl\n    - impl: impl api::PaymentAuthorize for Zsl\n    - impl: impl api::PaymentSync for Zsl\n    - impl: impl api::PaymentCapture for Zsl\n    - impl: impl api::PaymentVoid for Zsl\n    - impl: impl api::Refund for Zsl\n    - impl: impl api::RefundExecute for Zsl\n    - impl: impl api::RefundSync for Zsl\n    - impl: impl api::PaymentToken for Zsl\n    - impl: impl ConnectorIntegration<\napi::PaymentMethodToken,\ntypes::PaymentMethodTokenizationData,\ntypes::PaymentsResponseData,\n> for Zsl\n    - impl: impl ConnectorCommonExt<Flow, Request, Response> for Zsl\n    - impl: impl ConnectorCommon for Zsl\n    - impl: impl ConnectorValidation for Zsl\n    - impl: impl ConnectorIntegration<api::Session, types::PaymentsSessionData, types::PaymentsResponseData> for Zsl\n    - impl: impl ConnectorIntegration<api::AccessTokenAuth, types::AccessTokenRequestData, types::AccessToken> for Zsl\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for Zsl\n    - impl: impl ConnectorIntegration<api::Authorize, types::PaymentsAuthorizeData, types::PaymentsResponseData> for Zsl\n    - impl: impl ConnectorIntegration<api::PSync, types::PaymentsSyncData, types::PaymentsResponseData> for Zsl\n    - impl: impl ConnectorIntegration<api::Capture, types::PaymentsCaptureData, types::PaymentsResponseData> for Zsl\n    - impl: impl ConnectorIntegration<api::Void, types::PaymentsCancelData, types::PaymentsResponseData> for Zsl\n    - impl: impl ConnectorIntegration<api::Execute, types::RefundsData, types::RefundsResponseData> for Zsl\n    - impl: impl ConnectorIntegration<api::RSync, types::RefundsData, types::RefundsResponseData> for Zsl\n    - impl: impl api::IncomingWebhook for Zsl\n    - mod: pub::transformers\n\n**connector_auth.rs**\n  Modify existing code"}
