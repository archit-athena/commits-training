{"prompt": "feat(analytics): Add Clickhouse based analytics (#2988)\n\nCo-authored-by: harsh_sharma_juspay <harsh.sharma@juspay.in>\nCo-authored-by: Ivor Dsouza <ivor.dsouza@juspay.in>\nCo-authored-by: Chethan Rao <70657455+Chethan-rao@users.noreply.github.com>\nCo-authored-by: nain-F49FF806 <126972030+nain-F49FF806@users.noreply.github.com>\nCo-authored-by: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>\nCo-authored-by: hyperswitch-bot[bot] <148525504+hyperswitch-bot[bot]@users.noreply.github.com>\nCo-authored-by: akshay.s <akshay.s@juspay.in>\nCo-authored-by: Gnanasundari24 <118818938+Gnanasundari24@users.noreply.github.com>", "response": "Files to modify:\n\n\n**api_event.rs**\n  Add:\n    - trait: pub::APIEventAnalytics\n    - mod: private::core\n    - mod: pub::events\n    - mod: pub::filters\n    - mod: pub::metrics\n    - mod: pub::types\n\n**core.rs**\n  Add:\n    - function: pub::api_events_core\n    - function: pub::get_filters\n    - function: pub::get_api_event_metrics\n\n**events.rs**\n  Add:\n    - function: pub::get_api_event\n    - struct: pub::ApiLogsResult\n    - trait: pub::ApiLogsFilterAnalytics\n\n**filters.rs**\n  Add:\n    - function: pub::get_api_event_filter_for_dimension\n    - struct: pub::ApiEventFilter\n    - trait: pub::ApiEventFilterAnalytics\n\n**metrics.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::ApiEventMetricRow\n    - trait: pub::ApiEventMetricAnalytics\n    - trait: pub::ApiEventMetric\n    - impl: impl ApiEventMetric<T> for ApiEventMetrics\n    - mod: private::api_count\n    - mod: pub::latency\n    - mod: private::status_code_count\n\n**api_count.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::ApiCount\n    - impl: impl super::ApiEventMetric<T> for ApiCount\n\n**latency.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::MaxLatency\n    - struct: pub::LatencyAvg\n    - impl: impl super::ApiEventMetric<T> for MaxLatency\n\n**status_code_count.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::StatusCodeCount\n    - impl: impl super::ApiEventMetric<T> for StatusCodeCount\n\n**types.rs**\n  Add:\n    - function: private::set_filter_clause\n    - impl: impl QueryFilter<T> for ApiEventFilters\n\n**clickhouse.rs**\n  Add:\n    - function: private::default\n    - function: private::execute_query\n    - function: private::load_results\n    - function: private::get_table_engine\n    - function: private::load_row\n    - function: private::try_into\n    - function: private::try_into\n    - function: private::try_into\n    - function: private::try_into\n    - function: private::try_into\n    - function: private::try_into\n    - function: private::try_into\n    - function: private::try_into\n    - function: private::try_into\n    - function: private::try_into\n    - function: private::try_into\n    - function: private::try_into\n    - function: private::to_sql\n    - function: private::to_sql\n    - function: private::to_sql\n    - function: private::to_sql\n    - struct: pub::ClickhouseClient\n    - struct: pub::ClickhouseConfig\n    - struct: private::CkhQuery\n    - struct: private::CkhOutput\n    - enum: pub::ClickhouseError\n    - impl: impl Default for ClickhouseConfig\n    - impl: impl ClickhouseClient\n    - impl: impl AnalyticsDataSource for ClickhouseClient\n    - impl: impl LoadRow<T> for ClickhouseClient\n    - impl: impl super::payments::filters::PaymentFilterAnalytics for ClickhouseClient\n    - impl: impl super::payments::metrics::PaymentMetricAnalytics for ClickhouseClient\n    - impl: impl super::payments::distribution::PaymentDistributionAnalytics for ClickhouseClient\n    - impl: impl super::refunds::metrics::RefundMetricAnalytics for ClickhouseClient\n    - impl: impl super::refunds::filters::RefundFilterAnalytics for ClickhouseClient\n    - impl: impl super::sdk_events::filters::SdkEventFilterAnalytics for ClickhouseClient\n    - impl: impl super::sdk_events::metrics::SdkEventMetricAnalytics for ClickhouseClient\n    - impl: impl super::sdk_events::events::SdkEventsFilterAnalytics for ClickhouseClient\n    - impl: impl super::api_event::events::ApiLogsFilterAnalytics for ClickhouseClient\n    - impl: impl super::api_event::filters::ApiEventFilterAnalytics for ClickhouseClient\n    - impl: impl super::api_event::metrics::ApiEventMetricAnalytics for ClickhouseClient\n    - impl: impl TryInto<ApiLogsResult> for serde_json::Value\n    - impl: impl TryInto<SdkEventsResult> for serde_json::Value\n    - impl: impl TryInto<PaymentMetricRow> for serde_json::Value\n    - impl: impl TryInto<PaymentDistributionRow> for serde_json::Value\n    - impl: impl TryInto<FilterRow> for serde_json::Value\n    - impl: impl TryInto<RefundMetricRow> for serde_json::Value\n    - impl: impl TryInto<RefundFilterRow> for serde_json::Value\n    - impl: impl TryInto<ApiEventMetricRow> for serde_json::Value\n    - impl: impl TryInto<LatencyAvg> for serde_json::Value\n    - impl: impl TryInto<SdkEventMetricRow> for serde_json::Value\n    - impl: impl TryInto<SdkEventFilter> for serde_json::Value\n    - impl: impl TryInto<ApiEventFilter> for serde_json::Value\n    - impl: impl ToSql<ClickhouseClient> for PrimitiveDateTime\n    - impl: impl ToSql<ClickhouseClient> for AnalyticsCollection\n    - impl: impl ToSql<ClickhouseClient> for Aggregate<T>\n    - impl: impl ToSql<ClickhouseClient> for Window<T>\n\n**core.rs**\n  Add:\n    - function: pub::api_events_core\n    - function: pub::get_filters\n    - function: pub::get_api_event_metrics\n\n**errors.rs**\n  Modify existing code\n\n**lambda_utils.rs**\n  Add:\n    - function: private::get_aws_client\n    - function: pub::invoke_lambda\n\n**lib.rs**\n  Add:\n    - function: private::default\n    - function: private::to_string\n    - function: pub::get_payment_metrics\n    - function: pub::get_payment_distribution\n    - function: pub::get_refund_metrics\n    - function: pub::get_sdk_event_metrics\n    - function: pub::get_api_event_metrics\n    - function: pub::from_conf\n    - function: private::default\n    - struct: pub::ReportConfig\n    - enum: pub::AnalyticsProvider\n    - enum: pub::AnalyticsConfig\n    - impl: impl Default for AnalyticsProvider\n    - impl: impl ToString for AnalyticsProvider\n    - impl: impl AnalyticsProvider\n    - impl: impl Default for AnalyticsConfig\n    - mod: private::clickhouse\n    - mod: pub::core\n    - mod: pub::errors\n    - mod: pub::metrics\n    - mod: pub::payments\n    - mod: private::query\n    - mod: pub::refunds\n    - mod: pub::api_event\n    - mod: pub::sdk_events\n    - mod: private::sqlx\n    - mod: private::types\n    - mod: pub::lambda_utils\n    - mod: pub::utils\n\n**main.rs**\n  Add:\n    - function: private::main\n\n**metrics.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::ApiEventMetricRow\n    - trait: pub::ApiEventMetricAnalytics\n    - trait: pub::ApiEventMetric\n    - impl: impl ApiEventMetric<T> for ApiEventMetrics\n    - mod: private::api_count\n    - mod: pub::latency\n    - mod: private::status_code_count\n\n**request.rs**\n  Modify existing code\n\n**payments.rs**\n  Add:\n    - trait: pub::PaymentAnalytics\n    - mod: pub::accumulator\n    - mod: private::core\n    - mod: pub::distribution\n    - mod: pub::filters\n    - mod: pub::metrics\n    - mod: pub::types\n\n**accumulator.rs**\n  Add:\n    - function: private::add_distribution_bucket\n    - function: private::collect\n    - struct: pub::ErrorDistributionRow\n    - struct: pub::ErrorDistributionAccumulator\n    - impl: impl PaymentDistributionAccumulator for ErrorDistributionAccumulator\n\n**core.rs**\n  Add:\n    - function: pub::api_events_core\n    - function: pub::get_filters\n    - function: pub::get_api_event_metrics\n\n**distribution.rs**\n  Add:\n    - function: private::load_distribution\n    - struct: pub::PaymentDistributionRow\n    - trait: pub::PaymentDistributionAnalytics\n    - trait: pub::PaymentDistribution\n    - impl: impl PaymentDistribution<T> for PaymentDistributions\n    - mod: private::payment_error_message\n\n**payment_error_message.rs**\n  Add:\n    - function: private::load_distribution\n    - struct: pub::PaymentErrorMessage\n    - impl: impl PaymentDistribution<T> for PaymentErrorMessage\n\n**filters.rs**\n  Add:\n    - function: pub::get_api_event_filter_for_dimension\n    - struct: pub::ApiEventFilter\n    - trait: pub::ApiEventFilterAnalytics\n\n**metrics.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::ApiEventMetricRow\n    - trait: pub::ApiEventMetricAnalytics\n    - trait: pub::ApiEventMetric\n    - impl: impl ApiEventMetric<T> for ApiEventMetrics\n    - mod: private::api_count\n    - mod: pub::latency\n    - mod: private::status_code_count\n\n**avg_ticket_size.rs**\n  Modify existing code\n\n**connector_success_rate.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::ConnectorSuccessRate\n    - impl: impl super::PaymentMetric<T> for ConnectorSuccessRate\n\n**payment_count.rs**\n  Modify existing code\n\n**payment_processed_amount.rs**\n  Modify existing code\n\n**payment_success_count.rs**\n  Modify existing code\n\n**retries_count.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::RetriesCount\n    - impl: impl super::PaymentMetric<T> for RetriesCount\n\n**success_rate.rs**\n  Modify existing code\n\n**types.rs**\n  Add:\n    - function: private::set_filter_clause\n    - impl: impl QueryFilter<T> for ApiEventFilters\n\n**query.rs**\n  Add:\n    - function: private::set_group_by_clause\n    - function: private::to_string\n    - function: private::to_sql\n    - function: private::transform_to_sql_values\n    - function: pub::add_top_n_clause\n    - function: pub::add_outer_select_column\n    - struct: pub::TopN\n    - enum: pub::Window\n    - enum: pub::Order\n    - impl: impl GroupByClause<super::ClickhouseClient> for Granularity\n    - impl: impl ToString for Order\n\n**refunds.rs**\n  Modify existing code\n\n**accumulator.rs**\n  Add:\n    - function: private::add_distribution_bucket\n    - function: private::collect\n    - struct: pub::ErrorDistributionRow\n    - struct: pub::ErrorDistributionAccumulator\n    - impl: impl PaymentDistributionAccumulator for ErrorDistributionAccumulator\n\n**core.rs**\n  Add:\n    - function: pub::api_events_core\n    - function: pub::get_filters\n    - function: pub::get_api_event_metrics\n\n**filters.rs**\n  Add:\n    - function: pub::get_api_event_filter_for_dimension\n    - struct: pub::ApiEventFilter\n    - trait: pub::ApiEventFilterAnalytics\n\n**metrics.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::ApiEventMetricRow\n    - trait: pub::ApiEventMetricAnalytics\n    - trait: pub::ApiEventMetric\n    - impl: impl ApiEventMetric<T> for ApiEventMetrics\n    - mod: private::api_count\n    - mod: pub::latency\n    - mod: private::status_code_count\n\n**refund_count.rs**\n  Modify existing code\n\n**refund_processed_amount.rs**\n  Modify existing code\n\n**refund_success_count.rs**\n  Modify existing code\n\n**refund_success_rate.rs**\n  Modify existing code\n\n**types.rs**\n  Add:\n    - function: private::set_filter_clause\n    - impl: impl QueryFilter<T> for ApiEventFilters\n\n**sdk_events.rs**\n  Add:\n    - trait: pub::SDKEventAnalytics\n    - trait: pub::SdkEventAnalytics\n    - mod: pub::accumulator\n    - mod: private::core\n    - mod: pub::events\n    - mod: pub::filters\n    - mod: pub::metrics\n    - mod: pub::types\n\n**accumulator.rs**\n  Add:\n    - function: private::add_distribution_bucket\n    - function: private::collect\n    - struct: pub::ErrorDistributionRow\n    - struct: pub::ErrorDistributionAccumulator\n    - impl: impl PaymentDistributionAccumulator for ErrorDistributionAccumulator\n\n**core.rs**\n  Add:\n    - function: pub::api_events_core\n    - function: pub::get_filters\n    - function: pub::get_api_event_metrics\n\n**events.rs**\n  Add:\n    - function: pub::get_api_event\n    - struct: pub::ApiLogsResult\n    - trait: pub::ApiLogsFilterAnalytics\n\n**filters.rs**\n  Add:\n    - function: pub::get_api_event_filter_for_dimension\n    - struct: pub::ApiEventFilter\n    - trait: pub::ApiEventFilterAnalytics\n\n**metrics.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::ApiEventMetricRow\n    - trait: pub::ApiEventMetricAnalytics\n    - trait: pub::ApiEventMetric\n    - impl: impl ApiEventMetric<T> for ApiEventMetrics\n    - mod: private::api_count\n    - mod: pub::latency\n    - mod: private::status_code_count\n\n**average_payment_time.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::AveragePaymentTime\n    - impl: impl super::SdkEventMetric<T> for AveragePaymentTime\n\n**payment_attempts.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::PaymentAttempts\n    - impl: impl super::SdkEventMetric<T> for PaymentAttempts\n\n**payment_data_filled_count.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::PaymentDataFilledCount\n    - impl: impl super::SdkEventMetric<T> for PaymentDataFilledCount\n\n**payment_method_selected_count.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::PaymentMethodSelectedCount\n    - impl: impl super::SdkEventMetric<T> for PaymentMethodSelectedCount\n\n**payment_methods_call_count.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::PaymentMethodsCallCount\n    - impl: impl super::SdkEventMetric<T> for PaymentMethodsCallCount\n\n**payment_success_count.rs**\n  Modify existing code\n\n**sdk_initiated_count.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::SdkInitiatedCount\n    - impl: impl super::SdkEventMetric<T> for SdkInitiatedCount\n\n**sdk_rendered_count.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::SdkRenderedCount\n    - impl: impl super::SdkEventMetric<T> for SdkRenderedCount\n\n**types.rs**\n  Add:\n    - function: private::set_filter_clause\n    - impl: impl QueryFilter<T> for ApiEventFilters\n\n**sqlx.rs**\n  Add:\n    - function: private::from_row\n    - function: private::to_sql\n    - function: private::to_sql\n    - function: private::to_sql\n\n**types.rs**\n  Add:\n    - function: private::set_filter_clause\n    - impl: impl QueryFilter<T> for ApiEventFilters\n\n**utils.rs**\n  Add:\n    - function: pub::get_sdk_event_dimensions\n    - function: pub::get_api_event_dimensions\n    - function: pub::get_sdk_event_metrics_info\n    - function: pub::get_api_event_metrics_info\n\n**analytics.rs**\n  Remove:\n    - struct: pub::TimeRange\n    - impl: impl ApiEventMetric for GetInfoResponse\n    - impl: impl ApiEventMetric for GetPaymentMetricRequest\n    - impl: impl ApiEventMetric for GetRefundMetricRequest\n    - impl: impl ApiEventMetric for GetPaymentFiltersRequest\n    - impl: impl ApiEventMetric for PaymentFiltersResponse\n    - impl: impl ApiEventMetric for GetRefundFilterRequest\n    - impl: impl ApiEventMetric for RefundFiltersResponse\n  Add:\n    - function: private::into\n    - struct: pub::Distribution\n    - struct: pub::ReportRequest\n    - struct: pub::GenerateReportRequest\n    - struct: pub::GetSdkEventMetricRequest\n    - struct: pub::GetSdkEventFiltersRequest\n    - struct: pub::SdkEventFiltersResponse\n    - struct: pub::SdkEventFilterValue\n    - struct: pub::GetApiEventFiltersRequest\n    - struct: pub::ApiEventFiltersResponse\n    - struct: pub::ApiEventFilterValue\n    - struct: pub::GetApiEventMetricRequest\n    - enum: pub::QueryLimit\n    - impl: impl Into<u64> for QueryLimit\n    - mod: pub::api_event\n    - mod: pub::sdk_events\n\n**api_event.rs**\n  Add:\n    - trait: pub::APIEventAnalytics\n    - mod: private::core\n    - mod: pub::events\n    - mod: pub::filters\n    - mod: pub::metrics\n    - mod: pub::types\n\n**payments.rs**\n  Add:\n    - trait: pub::PaymentAnalytics\n    - mod: pub::accumulator\n    - mod: private::core\n    - mod: pub::distribution\n    - mod: pub::filters\n    - mod: pub::metrics\n    - mod: pub::types\n\n**refunds.rs**\n  Modify existing code\n\n**sdk_events.rs**\n  Add:\n    - trait: pub::SDKEventAnalytics\n    - trait: pub::SdkEventAnalytics\n    - mod: pub::accumulator\n    - mod: private::core\n    - mod: pub::events\n    - mod: pub::filters\n    - mod: pub::metrics\n    - mod: pub::types\n\n**events.rs**\n  Add:\n    - function: pub::get_api_event\n    - struct: pub::ApiLogsResult\n    - trait: pub::ApiLogsFilterAnalytics\n\n**payments.rs**\n  Add:\n    - trait: pub::PaymentAnalytics\n    - mod: pub::accumulator\n    - mod: private::core\n    - mod: pub::distribution\n    - mod: pub::filters\n    - mod: pub::metrics\n    - mod: pub::types\n\n**analytics.rs**\n  Remove:\n    - struct: pub::TimeRange\n    - impl: impl ApiEventMetric for GetInfoResponse\n    - impl: impl ApiEventMetric for GetPaymentMetricRequest\n    - impl: impl ApiEventMetric for GetRefundMetricRequest\n    - impl: impl ApiEventMetric for GetPaymentFiltersRequest\n    - impl: impl ApiEventMetric for PaymentFiltersResponse\n    - impl: impl ApiEventMetric for GetRefundFilterRequest\n    - impl: impl ApiEventMetric for RefundFiltersResponse\n  Add:\n    - function: private::into\n    - struct: pub::Distribution\n    - struct: pub::ReportRequest\n    - struct: pub::GenerateReportRequest\n    - struct: pub::GetSdkEventMetricRequest\n    - struct: pub::GetSdkEventFiltersRequest\n    - struct: pub::SdkEventFiltersResponse\n    - struct: pub::SdkEventFilterValue\n    - struct: pub::GetApiEventFiltersRequest\n    - struct: pub::ApiEventFiltersResponse\n    - struct: pub::ApiEventFilterValue\n    - struct: pub::GetApiEventMetricRequest\n    - enum: pub::QueryLimit\n    - impl: impl Into<u64> for QueryLimit\n    - mod: pub::api_event\n    - mod: pub::sdk_events\n\n**core.rs**\n  Add:\n    - function: pub::api_events_core\n    - function: pub::get_filters\n    - function: pub::get_api_event_metrics\n\n**payments.rs**\n  Add:\n    - trait: pub::PaymentAnalytics\n    - mod: pub::accumulator\n    - mod: private::core\n    - mod: pub::distribution\n    - mod: pub::filters\n    - mod: pub::metrics\n    - mod: pub::types\n\n**core.rs**\n  Add:\n    - function: pub::api_events_core\n    - function: pub::get_filters\n    - function: pub::get_api_event_metrics\n\n**core.rs**\n  Add:\n    - function: pub::api_events_core\n    - function: pub::get_filters\n    - function: pub::get_api_event_metrics\n\n**routes.rs**\n  Remove:\n    - function: pub::server\n    - function: pub::get_info\n    - function: pub::get_payment_metrics\n    - function: pub::get_refunds_metrics\n    - function: pub::get_payment_filters\n    - function: pub::get_refund_filters\n    - struct: pub::Analytics\n    - impl: impl Analytics\n\n**scheduler.rs**\n  Modify existing code\n\n**kms.rs**\n  Modify existing code\n\n**settings.rs**\n  Remove:\n    - function: private::from\n    - enum: pub::QueueStrategy\n    - impl: impl From<QueueStrategy> for bb8::QueueStrategy\n\n**refunds.rs**\n  Modify existing code\n\n**webhooks.rs**\n  Modify existing code\n\n**db.rs**\n  Add:\n    - function: private::insert_fraud_check_response\n    - function: private::update_fraud_check_response_with_attempt_id\n    - function: private::find_fraud_check_by_payment_id\n    - function: private::find_fraud_check_by_payment_id_if_present\n    - function: private::insert_organization\n    - function: private::find_organization_by_org_id\n    - function: private::update_organization_by_org_id\n    - impl: impl FraudCheckInterface for KafkaStore\n    - impl: impl OrganizationInterface for KafkaStore\n    - mod: private::kafka_store\n\n**kafka_store.rs**\n  Add:\n    - function: pub::new\n    - function: private::find_address_by_address_id\n    - function: private::update_address\n    - function: private::update_address_for_payments\n    - function: private::insert_address_for_payments\n    - function: private::find_address_by_merchant_id_payment_id_address_id\n    - function: private::insert_address_for_customers\n    - function: private::update_address_by_merchant_id_customer_id\n    - function: private::insert_api_key\n    - function: private::update_api_key\n    - function: private::revoke_api_key\n    - function: private::find_api_key_by_merchant_id_key_id_optional\n    - function: private::find_api_key_by_hash_optional\n    - function: private::list_api_keys_by_merchant_id\n    - function: private::get_card_info\n    - function: private::insert_config\n    - function: private::find_config_by_key\n    - function: private::find_config_by_key_from_db\n    - function: private::update_config_in_database\n    - function: private::update_config_by_key\n    - function: private::delete_config_by_key\n    - function: private::find_config_by_key_unwrap_or\n    - function: private::delete_customer_by_customer_id_merchant_id\n    - function: private::find_customer_optional_by_customer_id_merchant_id\n    - function: private::update_customer_by_customer_id_merchant_id\n    - function: private::list_customers_by_merchant_id\n    - function: private::find_customer_by_customer_id_merchant_id\n    - function: private::insert_customer\n    - function: private::insert_dispute\n    - function: private::find_by_merchant_id_payment_id_connector_dispute_id\n    - function: private::find_dispute_by_merchant_id_dispute_id\n    - function: private::find_disputes_by_merchant_id\n    - function: private::update_dispute\n    - function: private::find_disputes_by_merchant_id_payment_id\n    - function: private::create_ephemeral_key\n    - function: private::get_ephemeral_key\n    - function: private::delete_ephemeral_key\n    - function: private::insert_event\n    - function: private::update_event\n    - function: private::find_locker_by_card_id\n    - function: private::insert_locker_mock_up\n    - function: private::delete_locker_mock_up\n    - function: private::find_mandate_by_merchant_id_mandate_id\n    - function: private::find_mandate_by_merchant_id_connector_mandate_id\n    - function: private::find_mandate_by_merchant_id_customer_id\n    - function: private::update_mandate_by_merchant_id_mandate_id\n    - function: private::find_mandates_by_merchant_id\n    - function: private::insert_mandate\n    - function: private::find_payment_link_by_payment_link_id\n    - function: private::insert_payment_link\n    - function: private::list_payment_link_by_merchant_id\n    - function: private::insert_merchant\n    - function: private::find_merchant_account_by_merchant_id\n    - function: private::update_merchant\n    - function: private::update_specific_fields_in_merchant\n    - function: private::find_merchant_account_by_publishable_key\n    - function: private::list_merchant_accounts_by_organization_id\n    - function: private::delete_merchant_account_by_merchant_id\n    - function: private::get_access_token\n    - function: private::set_access_token\n    - function: private::insert_file_metadata\n    - function: private::find_file_metadata_by_merchant_id_file_id\n    - function: private::delete_file_metadata_by_merchant_id_file_id\n    - function: private::update_file_metadata\n    - function: private::find_merchant_connector_account_by_merchant_id_connector_label\n    - function: private::find_merchant_connector_account_by_merchant_id_connector_name\n    - function: private::find_merchant_connector_account_by_profile_id_connector_name\n    - function: private::insert_merchant_connector_account\n    - function: private::find_by_merchant_connector_account_merchant_id_merchant_connector_id\n    - function: private::find_merchant_connector_account_by_merchant_id_and_disabled_list\n    - function: private::update_merchant_connector_account\n    - function: private::delete_merchant_connector_account_by_merchant_id_merchant_connector_id\n    - function: private::fetch_consumer_tasks\n    - function: private::consumer_group_create\n    - function: private::acquire_pt_lock\n    - function: private::release_pt_lock\n    - function: private::stream_append_entry\n    - function: private::get_key\n    - function: private::insert_payment_attempt\n    - function: private::update_payment_attempt_with_attempt_id\n    - function: private::find_payment_attempt_by_connector_transaction_id_payment_id_merchant_id\n    - function: private::find_payment_attempt_by_merchant_id_connector_txn_id\n    - function: private::find_payment_attempt_by_payment_id_merchant_id_attempt_id\n    - function: private::find_payment_attempt_by_attempt_id_merchant_id\n    - function: private::find_payment_attempt_last_successful_attempt_by_payment_id_merchant_id\n    - function: private::find_payment_attempt_last_successful_or_partially_captured_attempt_by_payment_id_merchant_id\n    - function: private::find_payment_attempt_by_preprocessing_id_merchant_id\n    - function: private::get_filters_for_payments\n    - function: private::get_total_count_of_filtered_payment_attempts\n    - function: private::find_attempts_by_merchant_id_payment_id\n    - function: private::update_payment_intent\n    - function: private::insert_payment_intent\n    - function: private::find_payment_intent_by_payment_id_merchant_id\n    - function: private::filter_payment_intent_by_constraints\n    - function: private::filter_payment_intents_by_time_range_constraints\n    - function: private::get_filtered_payment_intents_attempt\n    - function: private::get_filtered_active_attempt_ids_for_total_count\n    - function: private::get_active_payment_attempt\n    - function: private::find_payment_method\n    - function: private::find_payment_method_by_customer_id_merchant_id_list\n    - function: private::insert_payment_method\n    - function: private::update_payment_method\n    - function: private::delete_payment_method_by_merchant_id_payment_method_id\n    - function: private::find_payout_attempt_by_merchant_id_payout_id\n    - function: private::update_payout_attempt_by_merchant_id_payout_id\n    - function: private::insert_payout_attempt\n    - function: private::find_payout_by_merchant_id_payout_id\n    - function: private::update_payout_by_merchant_id_payout_id\n    - function: private::insert_payout\n    - function: private::reinitialize_limbo_processes\n    - function: private::find_process_by_id\n    - function: private::update_process\n    - function: private::process_tracker_update_process_status_by_ids\n    - function: private::update_process_tracker\n    - function: private::insert_process\n    - function: private::find_processes_by_time_status\n    - function: private::insert_capture\n    - function: private::update_capture_with_capture_id\n    - function: private::find_all_captures_by_merchant_id_payment_id_authorized_attempt_id\n    - function: private::find_refund_by_internal_reference_id_merchant_id\n    - function: private::find_refund_by_payment_id_merchant_id\n    - function: private::find_refund_by_merchant_id_refund_id\n    - function: private::find_refund_by_merchant_id_connector_refund_id_connector\n    - function: private::update_refund\n    - function: private::find_refund_by_merchant_id_connector_transaction_id\n    - function: private::insert_refund\n    - function: private::filter_refund_by_constraints\n    - function: private::filter_refund_by_meta_constraints\n    - function: private::get_total_count_of_refunds\n    - function: private::insert_merchant_key_store\n    - function: private::get_merchant_key_store_by_merchant_id\n    - function: private::delete_merchant_key_store_by_merchant_id\n    - function: private::insert_business_profile\n    - function: private::find_business_profile_by_profile_id\n    - function: private::update_business_profile_by_profile_id\n    - function: private::delete_business_profile_by_profile_id_merchant_id\n    - function: private::list_business_profile_by_merchant_id\n    - function: private::find_business_profile_by_profile_name_merchant_id\n    - function: private::insert_reverse_lookup\n    - function: private::get_lookup_by_lookup_id\n    - function: private::insert_routing_algorithm\n    - function: private::find_routing_algorithm_by_profile_id_algorithm_id\n    - function: private::find_routing_algorithm_by_algorithm_id_merchant_id\n    - function: private::find_routing_algorithm_metadata_by_algorithm_id_profile_id\n    - function: private::list_routing_algorithm_metadata_by_profile_id\n    - function: private::list_routing_algorithm_metadata_by_merchant_id\n    - function: private::add_gsm_rule\n    - function: private::find_gsm_decision\n    - function: private::find_gsm_rule\n    - function: private::update_gsm_rule\n    - function: private::delete_gsm_rule\n    - function: private::get_scheduler_db\n    - function: private::get_master_key\n    - function: private::insert_user\n    - function: private::find_user_by_email\n    - function: private::find_user_by_id\n    - function: private::update_user_by_user_id\n    - function: private::delete_user_by_user_id\n    - function: private::get_redis_conn\n    - function: private::insert_user_role\n    - function: private::find_user_role_by_user_id\n    - function: private::update_user_role_by_user_id_merchant_id\n    - function: private::delete_user_role\n    - function: private::list_user_roles_by_user_id\n    - struct: pub::KafkaStore\n    - impl: impl KafkaStore\n    - impl: impl AddressInterface for KafkaStore\n    - impl: impl ApiKeyInterface for KafkaStore\n    - impl: impl CardsInfoInterface for KafkaStore\n    - impl: impl ConfigInterface for KafkaStore\n    - impl: impl CustomerInterface for KafkaStore\n    - impl: impl DisputeInterface for KafkaStore\n    - impl: impl EphemeralKeyInterface for KafkaStore\n    - impl: impl EventInterface for KafkaStore\n    - impl: impl LockerMockUpInterface for KafkaStore\n    - impl: impl MandateInterface for KafkaStore\n    - impl: impl PaymentLinkInterface for KafkaStore\n    - impl: impl MerchantAccountInterface for KafkaStore\n    - impl: impl ConnectorAccessToken for KafkaStore\n    - impl: impl FileMetadataInterface for KafkaStore\n    - impl: impl MerchantConnectorAccountInterface for KafkaStore\n    - impl: impl QueueInterface for KafkaStore\n    - impl: impl PaymentAttemptInterface for KafkaStore\n    - impl: impl PaymentIntentInterface for KafkaStore\n    - impl: impl PaymentMethodInterface for KafkaStore\n    - impl: impl PayoutAttemptInterface for KafkaStore\n    - impl: impl PayoutsInterface for KafkaStore\n    - impl: impl ProcessTrackerInterface for KafkaStore\n    - impl: impl CaptureInterface for KafkaStore\n    - impl: impl RefundInterface for KafkaStore\n    - impl: impl MerchantKeyStoreInterface for KafkaStore\n    - impl: impl BusinessProfileInterface for KafkaStore\n    - impl: impl ReverseLookupInterface for KafkaStore\n    - impl: impl RoutingAlgorithmInterface for KafkaStore\n    - impl: impl GsmInterface for KafkaStore\n    - impl: impl StorageInterface for KafkaStore\n    - impl: impl SchedulerInterface for KafkaStore\n    - impl: impl MasterKeyInterface for KafkaStore\n    - impl: impl UserInterface for KafkaStore\n    - impl: impl RedisConnInterface for KafkaStore\n    - impl: impl UserRoleInterface for KafkaStore\n\n**events.rs**\n  Add:\n    - function: pub::get_api_event\n    - struct: pub::ApiLogsResult\n    - trait: pub::ApiLogsFilterAnalytics\n\n**api_logs.rs**\n  Modify existing code\n\n**event_logger.rs**\n  Modify existing code\n\n**kafka_handler.rs**\n  Add:\n    - function: private::log_event\n    - function: private::key\n    - function: private::value\n    - impl: impl EventHandler for KafkaProducer\n    - impl: impl KafkaMessage for RawEvent\n\n**lib.rs**\n  Add:\n    - function: private::default\n    - function: private::to_string\n    - function: pub::get_payment_metrics\n    - function: pub::get_payment_distribution\n    - function: pub::get_refund_metrics\n    - function: pub::get_sdk_event_metrics\n    - function: pub::get_api_event_metrics\n    - function: pub::from_conf\n    - function: private::default\n    - struct: pub::ReportConfig\n    - enum: pub::AnalyticsProvider\n    - enum: pub::AnalyticsConfig\n    - impl: impl Default for AnalyticsProvider\n    - impl: impl ToString for AnalyticsProvider\n    - impl: impl AnalyticsProvider\n    - impl: impl Default for AnalyticsConfig\n    - mod: private::clickhouse\n    - mod: pub::core\n    - mod: pub::errors\n    - mod: pub::metrics\n    - mod: pub::payments\n    - mod: private::query\n    - mod: pub::refunds\n    - mod: pub::api_event\n    - mod: pub::sdk_events\n    - mod: private::sqlx\n    - mod: private::types\n    - mod: pub::lambda_utils\n    - mod: pub::utils\n\n**app.rs**\n  Modify existing code\n\n**services.rs**\n  Add:\n    - mod: pub::kafka\n\n**api.rs**\n  Modify existing code\n\n**kafka.rs**\n  Add:\n    - function: private::value\n    - function: private::creation_timestamp\n    - function: private::new\n    - function: private::old\n    - function: private::key\n    - function: private::creation_timestamp\n    - function: pub::validate\n    - function: private::fmt\n    - function: pub::create\n    - function: pub::log_kafka_event\n    - function: pub::log_payment_attempt\n    - function: pub::log_payment_attempt_delete\n    - function: pub::log_payment_intent\n    - function: pub::log_payment_intent_delete\n    - function: pub::log_refund\n    - function: pub::log_refund_delete\n    - function: pub::log_api_event\n    - function: pub::get_topic\n    - function: private::drop\n    - struct: private::KafkaEvent\n    - struct: pub::KafkaSettings\n    - struct: pub::KafkaProducer\n    - struct: private::RdKafkaProducer\n    - enum: pub::KafkaError\n    - trait: pub::KafkaMessage\n    - impl: impl KafkaEvent<'a, T>\n    - impl: impl KafkaMessage for KafkaEvent<'a, T>\n    - impl: impl KafkaSettings\n    - impl: impl std::fmt::Debug for RdKafkaProducer\n    - impl: impl KafkaProducer\n    - impl: impl Drop for RdKafkaProducer\n    - mod: private::api_event\n    - mod: pub::outgoing_request\n    - mod: private::payment_attempt\n    - mod: private::payment_intent\n    - mod: private::refund\n\n**api_event.rs**\n  Add:\n    - trait: pub::APIEventAnalytics\n    - mod: private::core\n    - mod: pub::events\n    - mod: pub::filters\n    - mod: pub::metrics\n    - mod: pub::types\n\n**outgoing_request.rs**\n  Add:\n    - struct: pub::OutgoingRequest\n\n**payment_attempt.rs**\n  Add:\n    - function: pub::from_storage\n    - function: private::key\n    - function: private::creation_timestamp\n    - struct: pub::KafkaPaymentAttempt\n    - impl: impl KafkaPaymentAttempt<'a>\n    - impl: impl super::KafkaMessage for KafkaPaymentAttempt<'a>\n\n**payment_intent.rs**\n  Add:\n    - function: pub::from_storage\n    - function: private::key\n    - function: private::creation_timestamp\n    - struct: pub::KafkaPaymentIntent\n    - impl: impl KafkaPaymentIntent<'a>\n    - impl: impl super::KafkaMessage for KafkaPaymentIntent<'a>\n\n**refund.rs**\n  Add:\n    - function: pub::from_storage\n    - function: private::key\n    - struct: pub::KafkaRefund\n    - impl: impl KafkaRefund<'a>\n    - impl: impl super::KafkaMessage for KafkaRefund<'a>\n\n**payment_attempt.rs**\n  Add:\n    - function: pub::from_storage\n    - function: private::key\n    - function: private::creation_timestamp\n    - struct: pub::KafkaPaymentAttempt\n    - impl: impl KafkaPaymentAttempt<'a>\n    - impl: impl super::KafkaMessage for KafkaPaymentAttempt<'a>\n\n**aci.rs**\n  Modify existing code\n\n**utils.rs**\n  Add:\n    - function: pub::get_sdk_event_dimensions\n    - function: pub::get_api_event_dimensions\n    - function: pub::get_sdk_event_metrics_info\n    - function: pub::get_api_event_metrics_info\n\n**payments2.rs**\n  Modify existing code\n\n**utils.rs**\n  Add:\n    - function: pub::get_sdk_event_dimensions\n    - function: pub::get_api_event_dimensions\n    - function: pub::get_sdk_event_metrics_info\n    - function: pub::get_api_event_metrics_info\n\n**lib.rs**\n  Add:\n    - function: private::default\n    - function: private::to_string\n    - function: pub::get_payment_metrics\n    - function: pub::get_payment_distribution\n    - function: pub::get_refund_metrics\n    - function: pub::get_sdk_event_metrics\n    - function: pub::get_api_event_metrics\n    - function: pub::from_conf\n    - function: private::default\n    - struct: pub::ReportConfig\n    - enum: pub::AnalyticsProvider\n    - enum: pub::AnalyticsConfig\n    - impl: impl Default for AnalyticsProvider\n    - impl: impl ToString for AnalyticsProvider\n    - impl: impl AnalyticsProvider\n    - impl: impl Default for AnalyticsConfig\n    - mod: private::clickhouse\n    - mod: pub::core\n    - mod: pub::errors\n    - mod: pub::metrics\n    - mod: pub::payments\n    - mod: private::query\n    - mod: pub::refunds\n    - mod: pub::api_event\n    - mod: pub::sdk_events\n    - mod: private::sqlx\n    - mod: private::types\n    - mod: pub::lambda_utils\n    - mod: pub::utils\n\n**config.rs**\n  Add:\n    - function: private::from\n    - function: private::default\n    - enum: pub::QueueStrategy\n    - impl: impl From<QueueStrategy> for bb8::QueueStrategy\n    - impl: impl Default for Database\n\n**store.rs**\n  Modify existing code"}
