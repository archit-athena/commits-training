{"prompt": "feat(connector): (checkout.com) add support for multiple captures PSync (#2043)", "response": "Files to modify:\n\n\n**checkout.rs**\n  Modify existing code\n\n**transformers.rs**\n  Add:\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::get_connector_capture_id\n    - function: private::get_capture_attempt_status\n    - function: private::get_connector_reference_id\n    - function: private::is_capture_response\n    - function: private::get_connector_capture_id\n    - function: private::get_capture_attempt_status\n    - function: private::get_connector_reference_id\n    - function: private::is_capture_response\n    - function: private::try_from\n    - enum: pub::PaymentsResponseEnum\n    - impl: impl TryFrom<CheckoutWebhookEventType> for CheckoutPaymentStatus\n    - impl: impl TryFrom<types::PaymentsSyncResponseRouterData<PaymentsResponseEnum>> for types::PaymentsSyncRouterData\n    - impl: impl utils::MultipleCaptureSyncResponse for ActionResponse\n    - impl: impl utils::MultipleCaptureSyncResponse for Box<PaymentsResponse>\n    - impl: impl TryFrom<&api::IncomingWebhookRequestDetails<'_>> for PaymentsResponse\n\n**utils.rs**\n  Add:\n    - function: private::get_connector_reference_id\n    - function: pub::construct_captures_response_hashmap\n    - trait: pub::MultipleCaptureSyncResponse\n\n**psync_flow.rs**\n  Modify existing code\n\n**transformers.rs**\n  Add:\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::get_connector_capture_id\n    - function: private::get_capture_attempt_status\n    - function: private::get_connector_reference_id\n    - function: private::is_capture_response\n    - function: private::get_connector_capture_id\n    - function: private::get_capture_attempt_status\n    - function: private::get_connector_reference_id\n    - function: private::is_capture_response\n    - function: private::try_from\n    - enum: pub::PaymentsResponseEnum\n    - impl: impl TryFrom<CheckoutWebhookEventType> for CheckoutPaymentStatus\n    - impl: impl TryFrom<types::PaymentsSyncResponseRouterData<PaymentsResponseEnum>> for types::PaymentsSyncRouterData\n    - impl: impl utils::MultipleCaptureSyncResponse for ActionResponse\n    - impl: impl utils::MultipleCaptureSyncResponse for Box<PaymentsResponse>\n    - impl: impl TryFrom<&api::IncomingWebhookRequestDetails<'_>> for PaymentsResponse\n\n**types.rs**\n  Remove:\n    - enum: pub::CaptureSyncType\n  Add:\n    - enum: pub::SyncRequestType\n\n**bambora.rs**\n  Modify existing code\n\n**forte.rs**\n  Modify existing code\n\n**nexinets.rs**\n  Modify existing code\n\n**paypal.rs**\n  Modify existing code\n\n**utils.rs**\n  Add:\n    - function: private::get_connector_reference_id\n    - function: pub::construct_captures_response_hashmap\n    - trait: pub::MultipleCaptureSyncResponse\n\n**zen.rs**\n  Modify existing code"}
