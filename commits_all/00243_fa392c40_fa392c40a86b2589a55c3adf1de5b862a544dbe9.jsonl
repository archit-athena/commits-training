{"prompt": "feat: encrypt PII fields before saving it in the database (#1043)\n\nCo-authored-by: Nishant Joshi <nishant.joshi@juspay.in>", "response": "Files to modify:\n\n\n**admin.rs**\n  Modify existing code\n\n**customers.rs**\n  Modify existing code\n\n**payments.rs**\n  Remove:\n    - function: private::from\n    - impl: impl From<VerifyRequest> for VerifyResponse\n\n**crypto.rs**\n  Remove:\n    - struct: pub::GcmAes256\n  Add:\n    - function: private::new\n    - function: private::current\n    - function: private::from_bytes\n    - function: private::advance\n    - function: pub::new\n    - function: pub::into_inner\n    - function: pub::into_encrypted\n    - function: private::deref\n    - function: private::serialize\n    - function: private::eq\n    - struct: private::NonceSequence\n    - struct: pub::GcmAes256\n    - struct: pub::Encryptable\n    - impl: impl NonceSequence\n    - impl: impl ring::aead::NonceSequence for NonceSequence\n    - impl: impl Encryptable<masking::Secret<T, S>>\n    - impl: impl Encryptable<T>\n    - impl: impl Deref for Encryptable<masking::Secret<T>>\n    - impl: impl masking::Serialize for Encryptable<T>\n    - impl: impl PartialEq for Encryptable<T>\n\n**pii.rs**\n  Add:\n    - function: private::from\n    - function: private::expose\n    - impl: impl From<Encryptable<Secret<String, EmailStrategy>>> for Email\n    - impl: impl ExposeInterface<Secret<String, EmailStrategy>> for Email\n\n**router.rs**\n  Modify existing code\n\n**types.rs**\n  Modify existing code\n\n**types.rs**\n  Modify existing code\n\n**defaults.rs**\n  Modify existing code\n\n**settings.rs**\n  Modify existing code\n\n**validations.rs**\n  Modify existing code\n\n**bluesnap.rs**\n  Modify existing code\n\n**admin.rs**\n  Modify existing code\n\n**cards_info.rs**\n  Modify existing code\n\n**customers.rs**\n  Modify existing code\n\n**disputes.rs**\n  Modify existing code\n\n**transformers.rs**\n  Modify existing code\n\n**errors.rs**\n  Modify existing code\n\n**files.rs**\n  Modify existing code\n\n**helpers.rs**\n  Modify existing code\n\n**mandate.rs**\n  Modify existing code\n\n**cards.rs**\n  Modify existing code\n\n**payments.rs**\n  Remove:\n    - function: private::from\n    - impl: impl From<VerifyRequest> for VerifyResponse\n\n**access_token.rs**\n  Modify existing code\n\n**customers.rs**\n  Modify existing code\n\n**flows.rs**\n  Modify existing code\n\n**authorize_flow.rs**\n  Modify existing code\n\n**cancel_flow.rs**\n  Modify existing code\n\n**capture_flow.rs**\n  Modify existing code\n\n**complete_authorize_flow.rs**\n  Modify existing code\n\n**psync_flow.rs**\n  Modify existing code\n\n**session_flow.rs**\n  Modify existing code\n\n**verfiy_flow.rs**\n  Modify existing code\n\n**helpers.rs**\n  Modify existing code\n\n**operations.rs**\n  Modify existing code\n\n**payment_cancel.rs**\n  Modify existing code\n\n**payment_capture.rs**\n  Modify existing code\n\n**payment_complete_authorize.rs**\n  Modify existing code\n\n**payment_confirm.rs**\n  Modify existing code\n\n**payment_create.rs**\n  Modify existing code\n\n**payment_method_validate.rs**\n  Modify existing code\n\n**payment_session.rs**\n  Modify existing code\n\n**payment_start.rs**\n  Modify existing code\n\n**payment_status.rs**\n  Modify existing code\n\n**payment_update.rs**\n  Modify existing code\n\n**tokenization.rs**\n  Modify existing code\n\n**transformers.rs**\n  Modify existing code\n\n**refunds.rs**\n  Modify existing code\n\n**utils.rs**\n  Modify existing code\n\n**webhooks.rs**\n  Modify existing code\n\n**db.rs**\n  Add:\n    - function: private::get_master_key\n    - function: private::get_migration_timestamp\n    - function: private::get_master_key\n    - function: private::get_migration_timestamp\n    - trait: private::MasterKeyInterface\n    - impl: impl MasterKeyInterface for Store\n    - impl: impl MasterKeyInterface for MockDb\n    - mod: pub::merchant_key_store\n\n**address.rs**\n  Add:\n    - trait: pub::AddressInterface\n\n**customers.rs**\n  Modify existing code\n\n**merchant_account.rs**\n  Modify existing code\n\n**merchant_connector_account.rs**\n  Add:\n    - trait: pub::MerchantConnectorAccountInterface\n\n**merchant_key_store.rs**\n  Add:\n    - function: private::insert_merchant_key_store\n    - function: private::get_merchant_key_store_by_merchant_id\n    - function: private::insert_merchant_key_store\n    - function: private::get_merchant_key_store_by_merchant_id\n    - trait: pub::MerchantKeyStoreInterface\n    - impl: impl MerchantKeyStoreInterface for Store\n    - impl: impl MerchantKeyStoreInterface for MockDb\n\n**lib.rs**\n  Add:\n    - mod: pub::scripts\n\n**metrics.rs**\n  Modify existing code\n\n**request.rs**\n  Modify existing code\n\n**payments.rs**\n  Remove:\n    - function: private::from\n    - impl: impl From<VerifyRequest> for VerifyResponse\n\n**scripts.rs**\n  Add:\n    - mod: pub::pii_encryption\n\n**pii_encryption.rs**\n  Add:\n    - function: pub::create_merchant_key_store\n    - function: pub::encrypt_merchant_account_fields\n    - function: pub::encrypt_merchant_connector_account_fields\n    - function: pub::encrypt_customer_fields\n    - function: pub::encrypt_address_fields\n    - function: pub::test_2_step_encryption\n\n**services.rs**\n  Remove:\n    - function: private::get_redis_conn\n    - impl: impl RedisConnInterface for Store\n  Add:\n    - function: private::get_redis_conn\n    - function: private::get_master_enc_key\n    - impl: impl RedisConnInterface for Store\n\n**authentication.rs**\n  Modify existing code\n\n**encryption.rs**\n  Modify existing code\n\n**types.rs**\n  Modify existing code\n\n**admin.rs**\n  Modify existing code\n\n**customers.rs**\n  Modify existing code\n\n**mandates.rs**\n  Modify existing code\n\n**webhooks.rs**\n  Modify existing code\n\n**domain.rs**\n  Add:\n    - mod: private::address\n    - mod: pub::behaviour\n    - mod: private::customer\n    - mod: private::merchant_account\n    - mod: private::merchant_connector_account\n    - mod: pub::merchant_key_store\n    - mod: pub::types\n\n**address.rs**\n  Add:\n    - trait: pub::AddressInterface\n\n**behaviour.rs**\n  Add:\n    - function: private::convert\n    - trait: pub::Conversion\n    - trait: pub::ReverseConversion\n    - impl: impl ReverseConversion<U> for T\n\n**customer.rs**\n  Add:\n    - function: private::convert\n    - function: private::convert_back\n    - function: private::construct_new\n    - function: private::from\n    - struct: pub::Customer\n    - enum: pub::CustomerUpdate\n    - impl: impl super::behaviour::Conversion for Customer\n    - impl: impl From<CustomerUpdate> for CustomerUpdateInternal\n\n**merchant_account.rs**\n  Modify existing code\n\n**merchant_connector_account.rs**\n  Add:\n    - trait: pub::MerchantConnectorAccountInterface\n\n**merchant_key_store.rs**\n  Add:\n    - function: private::insert_merchant_key_store\n    - function: private::get_merchant_key_store_by_merchant_id\n    - function: private::insert_merchant_key_store\n    - function: private::get_merchant_key_store_by_merchant_id\n    - trait: pub::MerchantKeyStoreInterface\n    - impl: impl MerchantKeyStoreInterface for Store\n    - impl: impl MerchantKeyStoreInterface for MockDb\n\n**types.rs**\n  Modify existing code\n\n**address.rs**\n  Add:\n    - trait: pub::AddressInterface\n\n**customers.rs**\n  Modify existing code\n\n**merchant_account.rs**\n  Modify existing code\n\n**merchant_connector_account.rs**\n  Add:\n    - trait: pub::MerchantConnectorAccountInterface\n\n**transformers.rs**\n  Modify existing code\n\n**address.rs**\n  Add:\n    - trait: pub::AddressInterface\n\n**customers.rs**\n  Modify existing code\n\n**encryption.rs**\n  Modify existing code\n\n**lib.rs**\n  Add:\n    - mod: pub::scripts\n\n**merchant_account.rs**\n  Modify existing code\n\n**merchant_connector_account.rs**\n  Add:\n    - trait: pub::MerchantConnectorAccountInterface\n\n**merchant_key_store.rs**\n  Add:\n    - function: private::insert_merchant_key_store\n    - function: private::get_merchant_key_store_by_merchant_id\n    - function: private::insert_merchant_key_store\n    - function: private::get_merchant_key_store_by_merchant_id\n    - trait: pub::MerchantKeyStoreInterface\n    - impl: impl MerchantKeyStoreInterface for Store\n    - impl: impl MerchantKeyStoreInterface for MockDb\n\n**query.rs**\n  Add:\n    - mod: pub::merchant_key_store\n\n**address.rs**\n  Add:\n    - trait: pub::AddressInterface\n\n**customers.rs**\n  Modify existing code\n\n**merchant_account.rs**\n  Modify existing code\n\n**merchant_connector_account.rs**\n  Add:\n    - trait: pub::MerchantConnectorAccountInterface\n\n**merchant_key_store.rs**\n  Add:\n    - function: private::insert_merchant_key_store\n    - function: private::get_merchant_key_store_by_merchant_id\n    - function: private::insert_merchant_key_store\n    - function: private::get_merchant_key_store_by_merchant_id\n    - trait: pub::MerchantKeyStoreInterface\n    - impl: impl MerchantKeyStoreInterface for Store\n    - impl: impl MerchantKeyStoreInterface for MockDb\n\n**schema.rs**\n  Modify existing code"}
