{"prompt": "refactor(paymentMethods): move all pm migration related changes to payment methods crate (#7786)\n\nCo-authored-by: hyperswitch-bot[bot] <148525504+hyperswitch-bot[bot]@users.noreply.github.com>\nCo-authored-by: Gnanasundari24 <118818938+Gnanasundari24@users.noreply.github.com>", "response": "Files to modify:\n\n\n**cards_info.rs**\n  Add:\n    - trait: pub::CardsInfoInterface\n\n**ext_traits.rs**\n  Add:\n    - function: private::check_value_present\n    - function: private::get_required_value\n    - function: private::parse_enum\n    - function: private::parse_value\n    - function: private::update_value\n    - trait: pub::OptionExt\n    - impl: impl OptionExt<T> for Option<T>\n\n**lib.rs**\n  Add:\n    - mod: pub::cards_info\n    - mod: pub::ext_traits\n\n**controller.rs**\n  Add:\n    - function: private::get_or_insert_payment_method\n    - function: pub::create_encrypted_data\n    - struct: pub::DeleteCardResp\n    - enum: pub::DataDuplicationCheck\n    - trait: pub::PaymentMethodsController\n\n**core.rs**\n  Add:\n    - mod: pub::errors\n    - mod: pub::migration\n\n**errors.rs**\n  Add:\n    - enum: pub::VaultError\n\n**migration.rs**\n  Add:\n    - mod: pub::payment_methods\n\n**payment_methods.rs**\n  Add:\n    - function: pub::migrate_payment_method\n    - function: pub::migrate_payment_method\n    - function: pub::populate_bin_details_for_masked_card\n    - function: private::foreign_try_from\n    - function: private::foreign_try_from\n    - function: pub::get_client_secret_or_add_payment_method_for_migration\n    - function: pub::skip_locker_call_and_migrate_payment_method\n    - function: pub::skip_locker_call_and_migrate_payment_method\n    - function: pub::get_card_bin_and_last4_digits_for_masked_card\n    - function: pub::save_migration_payment_method\n    - impl: impl ForeignTryFrom<(\n&api_models::payment_methods::MigrateCardDetail,\nOption<cards_info::CardInfo>,\n)> for pm_api::CardDetailFromLocker\n    - impl: impl ForeignTryFrom<(\n&api_models::payment_methods::MigrateCardDetail,\nOption<cards_info::CardInfo>,\n)> for pm_api::CardDetailFromLocker\n\n**helpers.rs**\n  Add:\n    - function: pub::populate_bin_details_for_payment_method_create\n    - function: pub::populate_bin_details_for_payment_method_create\n    - function: pub::validate_payment_method_type_against_payment_method\n    - function: private::foreign_from\n    - function: private::foreign_from\n    - function: private::to_not_found_response\n    - function: private::to_duplicate_response\n    - trait: pub::ForeignFrom\n    - trait: pub::ForeignTryFrom\n    - trait: pub::StorageErrorExt\n    - impl: impl ForeignFrom<(Option<api::CardDetailFromLocker>, domain::PaymentMethod)> for api::PaymentMethodResponse\n    - impl: impl ForeignFrom<(Option<api::CardDetailFromLocker>, domain::PaymentMethod)> for api::PaymentMethodResponse\n    - impl: impl StorageErrorExt<T, api_error_response::ApiErrorResponse> for error_stack::Result<T, storage_impl::StorageError>\n\n**lib.rs**\n  Add:\n    - mod: pub::cards_info\n    - mod: pub::ext_traits\n\n**state.rs**\n  Modify existing code\n\n**cards_info.rs**\n  Add:\n    - trait: pub::CardsInfoInterface\n\n**customers.rs**\n  Modify existing code\n\n**errors.rs**\n  Add:\n    - enum: pub::VaultError\n\n**locker_migration.rs**\n  Modify existing code\n\n**mandate.rs**\n  Modify existing code\n\n**payment_methods.rs**\n  Add:\n    - function: pub::migrate_payment_method\n    - function: pub::migrate_payment_method\n    - function: pub::populate_bin_details_for_masked_card\n    - function: private::foreign_try_from\n    - function: private::foreign_try_from\n    - function: pub::get_client_secret_or_add_payment_method_for_migration\n    - function: pub::skip_locker_call_and_migrate_payment_method\n    - function: pub::skip_locker_call_and_migrate_payment_method\n    - function: pub::get_card_bin_and_last4_digits_for_masked_card\n    - function: pub::save_migration_payment_method\n    - impl: impl ForeignTryFrom<(\n&api_models::payment_methods::MigrateCardDetail,\nOption<cards_info::CardInfo>,\n)> for pm_api::CardDetailFromLocker\n    - impl: impl ForeignTryFrom<(\n&api_models::payment_methods::MigrateCardDetail,\nOption<cards_info::CardInfo>,\n)> for pm_api::CardDetailFromLocker\n\n**cards.rs**\n  Remove:\n    - function: pub::store_default_payment_method\n    - function: pub::store_default_payment_method\n    - function: pub::get_or_insert_payment_method\n  Add:\n    - function: private::store_default_payment_method\n    - function: private::store_default_payment_method\n    - function: private::get_or_insert_payment_method\n    - function: private::insert_payment_method\n    - function: private::insert_payment_method\n    - function: private::add_bank_to_locker\n    - function: private::add_card_to_locker\n    - function: private::add_card_hs\n    - function: private::get_card_details_with_locker_fallback\n    - function: private::get_card_details_without_locker_fallback\n    - function: private::set_default_payment_method\n    - function: private::add_payment_method_status_update_task\n    - struct: pub::PmCards\n\n**network_tokenization.rs**\n  Modify existing code\n\n**tokenize.rs**\n  Modify existing code\n\n**card_executor.rs**\n  Modify existing code\n\n**transformers.rs**\n  Remove:\n    - struct: pub::DeleteCardResp\n    - enum: pub::DataDuplicationCheck\n\n**helpers.rs**\n  Add:\n    - function: pub::populate_bin_details_for_payment_method_create\n    - function: pub::populate_bin_details_for_payment_method_create\n    - function: pub::validate_payment_method_type_against_payment_method\n    - function: private::foreign_from\n    - function: private::foreign_from\n    - function: private::to_not_found_response\n    - function: private::to_duplicate_response\n    - trait: pub::ForeignFrom\n    - trait: pub::ForeignTryFrom\n    - trait: pub::StorageErrorExt\n    - impl: impl ForeignFrom<(Option<api::CardDetailFromLocker>, domain::PaymentMethod)> for api::PaymentMethodResponse\n    - impl: impl ForeignFrom<(Option<api::CardDetailFromLocker>, domain::PaymentMethod)> for api::PaymentMethodResponse\n    - impl: impl StorageErrorExt<T, api_error_response::ApiErrorResponse> for error_stack::Result<T, storage_impl::StorageError>\n\n**tokenization.rs**\n  Modify existing code\n\n**helpers.rs**\n  Add:\n    - function: pub::populate_bin_details_for_payment_method_create\n    - function: pub::populate_bin_details_for_payment_method_create\n    - function: pub::validate_payment_method_type_against_payment_method\n    - function: private::foreign_from\n    - function: private::foreign_from\n    - function: private::to_not_found_response\n    - function: private::to_duplicate_response\n    - trait: pub::ForeignFrom\n    - trait: pub::ForeignTryFrom\n    - trait: pub::StorageErrorExt\n    - impl: impl ForeignFrom<(Option<api::CardDetailFromLocker>, domain::PaymentMethod)> for api::PaymentMethodResponse\n    - impl: impl ForeignFrom<(Option<api::CardDetailFromLocker>, domain::PaymentMethod)> for api::PaymentMethodResponse\n    - impl: impl StorageErrorExt<T, api_error_response::ApiErrorResponse> for error_stack::Result<T, storage_impl::StorageError>\n\n**validator.rs**\n  Modify existing code\n\n**incoming.rs**\n  Modify existing code\n\n**db.rs**\n  Remove:\n    - mod: pub::cards_info\n  Add:\n    - function: private::get_payment_methods_store\n    - function: private::get_payment_methods_store\n\n**cards_info.rs**\n  Add:\n    - trait: pub::CardsInfoInterface\n\n**kafka_store.rs**\n  Add:\n    - function: private::get_payment_methods_store\n\n**payment_methods.rs**\n  Add:\n    - function: pub::migrate_payment_method\n    - function: pub::migrate_payment_method\n    - function: pub::populate_bin_details_for_masked_card\n    - function: private::foreign_try_from\n    - function: private::foreign_try_from\n    - function: pub::get_client_secret_or_add_payment_method_for_migration\n    - function: pub::skip_locker_call_and_migrate_payment_method\n    - function: pub::skip_locker_call_and_migrate_payment_method\n    - function: pub::get_card_bin_and_last4_digits_for_masked_card\n    - function: pub::save_migration_payment_method\n    - impl: impl ForeignTryFrom<(\n&api_models::payment_methods::MigrateCardDetail,\nOption<cards_info::CardInfo>,\n)> for pm_api::CardDetailFromLocker\n    - impl: impl ForeignTryFrom<(\n&api_models::payment_methods::MigrateCardDetail,\nOption<cards_info::CardInfo>,\n)> for pm_api::CardDetailFromLocker\n\n**mandates.rs**\n  Modify existing code\n\n**types.rs**\n  Add:\n    - function: private::from\n    - impl: impl From<&app::SessionState> for pm_state::PaymentMethodsState\n\n**ext_traits.rs**\n  Add:\n    - function: private::check_value_present\n    - function: private::get_required_value\n    - function: private::parse_enum\n    - function: private::parse_value\n    - function: private::update_value\n    - trait: pub::OptionExt\n    - impl: impl OptionExt<T> for Option<T>\n\n**cards_info.rs**\n  Add:\n    - trait: pub::CardsInfoInterface\n\n**lib.rs**\n  Add:\n    - mod: pub::cards_info\n    - mod: pub::ext_traits\n\n**payment_method.rs**\n  Modify existing code"}
