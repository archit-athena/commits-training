{"prompt": "<!-- Describe your changes in detail -->\r\n- Payout is done via Decrypted Token data of Apple pay.\r\n- The decrypted data is directly collected in the request to initiate payout.\r\n- Integration is done via Worldpay for the following flow\r\n\r\nNote: this is a hotfix raised against https://github.com/juspay/hyperswitch/pull/9857", "response": "To implement this **search_filter** feature, you'll need to modify these architectural layers:\n\n\n**1. API Request/Response Models**\n   - `crates/api_models/src/enums.rs`\n   - `crates/api_models/src/payouts.rs`\n\n**2. Core Business Logic**\n   - `crates/router/src/core/payment_methods/vault.rs`\n\n**3. External Connector Integration**\n   - `crates/common_enums/src/connector_enums.rs`\n   - `crates/connector_configs/src/connector.rs`\n   - `crates/connector_configs/toml/development.toml`\n   - ... and 10 more files\n\n**4. Type Definitions**\n   - `crates/router/src/types/transformers.rs`\n\n**5. Utils**\n   - `crates/common_utils/src/payout_method_utils.rs`\n\n**6. Other**\n   - `api-reference/v1/openapi_spec_v1.json`\n   - `api-reference/v2/openapi_spec_v2.json`\n   - `crates/openapi/src/openapi.rs`\n   - ... and 1 more files\n\n**Code Patterns Applied:**\n- Define new data structures (13 changes)\n- Implement new functions (27 changes)\n- Extend existing types with new fields (107 changes)\n- Add conditional logic for feature flags or filtering (1 changes)\n\n**Detailed Identifier Changes:**\n\n\nCommit 4b27e118:\nFiles to modify:\n\n\n**crates/api_models/src/enums.rs**\n  Modify existing code\n\n**crates/api_models/src/payouts.rs**\n  Modify existing code\n\n**crates/common_enums/src/connector_enums.rs**\n  Modify existing code\n\n**crates/common_utils/src/payout_method_utils.rs**\n  Modify existing code\n\n**crates/connector_configs/src/connector.rs**\n  Modify existing code\n\n**crates/hyperswitch_connectors/src/connectors/adyen/transformers.rs**\n  Modify existing code\n\n**crates/hyperswitch_connectors/src/connectors/paypal/transformers.rs**\n  Modify existing code\n\n**crates/hyperswitch_connectors/src/connectors/worldpay.rs**\n  Modify existing code\n\n**crates/hyperswitch_connectors/src/connectors/worldpay/payout_requests.rs**\n  Modify existing code\n\n**crates/hyperswitch_connectors/src/connectors/worldpay/payout_response.rs**\n  Modify existing code\n\n**crates/hyperswitch_connectors/src/connectors/worldpay/payout_transformers.rs**\n  Modify existing code\n\n**crates/hyperswitch_connectors/src/default_implementations.rs**\n  Modify existing code\n\n**crates/hyperswitch_connectors/src/utils.rs**\n  Modify existing code\n\n**crates/openapi/src/openapi.rs**\n  Modify existing code\n\n**crates/openapi/src/openapi_v2.rs**\n  Modify existing code\n\n**crates/router/src/core/payment_methods/vault.rs**\n  Modify existing code\n\n**crates/router/src/types/transformers.rs**\n  Modify existing code", "metadata": {"pr_number": 9875, "pr_title": "feat(payouts): apple pay decrypt payout", "merged_at": "2025-10-16T08:47:47Z", "intent": {"feature_type": "search_filter", "action": "add_feature", "entities": ["customer", "merchant", "order"]}, "hierarchy": {"api_models": ["crates/api_models/src/enums.rs", "crates/api_models/src/payouts.rs"], "core_business": ["crates/router/src/core/payment_methods/vault.rs"], "connectors": ["crates/common_enums/src/connector_enums.rs", "crates/connector_configs/src/connector.rs", "crates/connector_configs/toml/development.toml", "crates/connector_configs/toml/production.toml", "crates/connector_configs/toml/sandbox.toml", "crates/hyperswitch_connectors/src/connectors/adyen/transformers.rs", "crates/hyperswitch_connectors/src/connectors/paypal/transformers.rs", "crates/hyperswitch_connectors/src/connectors/worldpay.rs", "crates/hyperswitch_connectors/src/connectors/worldpay/payout_requests.rs", "crates/hyperswitch_connectors/src/connectors/worldpay/payout_response.rs", "crates/hyperswitch_connectors/src/connectors/worldpay/payout_transformers.rs", "crates/hyperswitch_connectors/src/default_implementations.rs", "crates/hyperswitch_connectors/src/utils.rs"], "types": ["crates/router/src/types/transformers.rs"], "utils": ["crates/common_utils/src/payout_method_utils.rs"], "other": ["api-reference/v1/openapi_spec_v1.json", "api-reference/v2/openapi_spec_v2.json", "crates/openapi/src/openapi.rs", "crates/openapi/src/openapi_v2.rs"]}, "change_types": {"structs_added": 13, "functions_added": 27, "enums_added": 3, "fields_added": 107, "imports_added": 17, "conditionals_added": 1}, "has_identifier_data": true, "commits_matched": 1, "match_method": "pr_number"}}
{"prompt": "<!-- Describe your changes in detail -->\r\n- Payout is done via Decrypted Token data of Apple pay.\r\n- The decrypted data is directly collected in the request to initiate payout.\r\n- Integration is done via Worldpay for the following flow", "response": "To implement this **search_filter** feature, you'll need to modify these architectural layers:\n\n\n**1. API Request/Response Models**\n   - `crates/api_models/src/enums.rs`\n   - `crates/api_models/src/payouts.rs`\n\n**2. Core Business Logic**\n   - `crates/router/src/core/payment_methods/vault.rs`\n\n**3. External Connector Integration**\n   - `crates/common_enums/src/connector_enums.rs`\n   - `crates/connector_configs/src/connector.rs`\n   - `crates/connector_configs/toml/development.toml`\n   - ... and 10 more files\n\n**4. Type Definitions**\n   - `crates/router/src/types/transformers.rs`\n\n**5. Utils**\n   - `crates/common_utils/src/payout_method_utils.rs`\n\n**6. Other**\n   - `api-reference/v1/openapi_spec_v1.json`\n   - `api-reference/v2/openapi_spec_v2.json`\n   - `crates/openapi/src/openapi.rs`\n   - ... and 1 more files\n\n**Code Patterns Applied:**\n- Define new data structures (13 changes)\n- Implement new functions (27 changes)\n- Extend existing types with new fields (107 changes)\n- Add conditional logic for feature flags or filtering (1 changes)\n\n**Detailed Identifier Changes:**\n\n\nCommit e7dee751:\nFiles to modify:\n\n\n**crates/api_models/src/enums.rs**\n  Modify existing code\n\n**crates/api_models/src/payouts.rs**\n  Modify existing code\n\n**crates/common_enums/src/connector_enums.rs**\n  Modify existing code\n\n**crates/common_utils/src/payout_method_utils.rs**\n  Modify existing code\n\n**crates/connector_configs/src/connector.rs**\n  Modify existing code\n\n**crates/hyperswitch_connectors/src/connectors/adyen/transformers.rs**\n  Modify existing code\n\n**crates/hyperswitch_connectors/src/connectors/paypal/transformers.rs**\n  Modify existing code\n\n**crates/hyperswitch_connectors/src/connectors/worldpay.rs**\n  Modify existing code\n\n**crates/hyperswitch_connectors/src/connectors/worldpay/payout_requests.rs**\n  Modify existing code\n\n**crates/hyperswitch_connectors/src/connectors/worldpay/payout_response.rs**\n  Modify existing code\n\n**crates/hyperswitch_connectors/src/connectors/worldpay/payout_transformers.rs**\n  Modify existing code\n\n**crates/hyperswitch_connectors/src/default_implementations.rs**\n  Modify existing code\n\n**crates/hyperswitch_connectors/src/utils.rs**\n  Modify existing code\n\n**crates/openapi/src/openapi.rs**\n  Modify existing code\n\n**crates/openapi/src/openapi_v2.rs**\n  Modify existing code\n\n**crates/router/src/core/payment_methods/vault.rs**\n  Modify existing code\n\n**crates/router/src/types/transformers.rs**\n  Modify existing code", "metadata": {"pr_number": 9857, "pr_title": "feat(payouts): apple pay decrypt payout", "merged_at": "2025-10-16T08:06:22Z", "intent": {"feature_type": "search_filter", "action": "add_feature", "entities": ["customer", "merchant", "order"]}, "hierarchy": {"api_models": ["crates/api_models/src/enums.rs", "crates/api_models/src/payouts.rs"], "core_business": ["crates/router/src/core/payment_methods/vault.rs"], "connectors": ["crates/common_enums/src/connector_enums.rs", "crates/connector_configs/src/connector.rs", "crates/connector_configs/toml/development.toml", "crates/connector_configs/toml/production.toml", "crates/connector_configs/toml/sandbox.toml", "crates/hyperswitch_connectors/src/connectors/adyen/transformers.rs", "crates/hyperswitch_connectors/src/connectors/paypal/transformers.rs", "crates/hyperswitch_connectors/src/connectors/worldpay.rs", "crates/hyperswitch_connectors/src/connectors/worldpay/payout_requests.rs", "crates/hyperswitch_connectors/src/connectors/worldpay/payout_response.rs", "crates/hyperswitch_connectors/src/connectors/worldpay/payout_transformers.rs", "crates/hyperswitch_connectors/src/default_implementations.rs", "crates/hyperswitch_connectors/src/utils.rs"], "types": ["crates/router/src/types/transformers.rs"], "utils": ["crates/common_utils/src/payout_method_utils.rs"], "other": ["api-reference/v1/openapi_spec_v1.json", "api-reference/v2/openapi_spec_v2.json", "crates/openapi/src/openapi.rs", "crates/openapi/src/openapi_v2.rs"]}, "change_types": {"structs_added": 13, "functions_added": 27, "enums_added": 3, "fields_added": 107, "imports_added": 17, "conditionals_added": 1}, "has_identifier_data": true, "commits_matched": 1, "match_method": "pr_number"}}
{"prompt": "<!-- Describe your changes in detail -->\r\n\r\nThis PR involves adding WASM changes for Google Pay for Finix Connector.\r\n\r\nPreviously `Merchant Identity ID` was being retrieved from the metadata in MCA call. This field is now moved to Authentication field `MultiAuthKey`.", "response": "To implement this **search_filter** feature, you'll need to modify these architectural layers:\n\n\n**1. Core Business Logic**\n   - `crates/router/src/core/connector_validation.rs`\n\n**2. External Connector Integration**\n   - `crates/connector_configs/toml/development.toml`\n   - `crates/connector_configs/toml/production.toml`\n   - `crates/connector_configs/toml/sandbox.toml`\n   - ... and 3 more files\n\n**Code Patterns Applied:**\n- Extend existing types with new fields (3 changes)\n\n**Detailed Identifier Changes:**\n\n\nCommit e641ea29:\nFiles to modify:\n\n\n**crates/hyperswitch_connectors/src/connectors/finix/transformers.rs**\n  Modify existing code\n\n**crates/hyperswitch_connectors/src/connectors/finix/transformers/request.rs**\n  Modify existing code\n\n**crates/router/src/core/connector_validation.rs**\n  Modify existing code", "metadata": {"pr_number": 9845, "pr_title": "fix(connector): Add WASM Changes for Finix Google Pay", "merged_at": "2025-10-15T16:19:48Z", "intent": {"feature_type": "search_filter", "action": "add_feature", "entities": ["customer", "payment", "merchant"]}, "hierarchy": {"core_business": ["crates/router/src/core/connector_validation.rs"], "connectors": ["crates/connector_configs/toml/development.toml", "crates/connector_configs/toml/production.toml", "crates/connector_configs/toml/sandbox.toml", "crates/hyperswitch_connectors/src/connectors/finix/transformers.rs", "crates/hyperswitch_connectors/src/connectors/finix/transformers/request.rs", "crates/router/tests/connectors/sample_auth.toml"]}, "change_types": {"fields_added": 3}, "has_identifier_data": true, "commits_matched": 1, "match_method": "pr_number"}}
{"prompt": "<!-- Describe your changes in detail -->\r\n\r\nCurrently, `subscription/create`, `/subscription`, and `/subscription/:id/update` accept amount and currency as input parameters(this pr removes that). \r\nRetrieved the amount and currency from the `get_subscription_estimate` from item_price_id.", "response": "To implement this **search_filter** feature, you'll need to modify these architectural layers:\n\n\n**1. API Request/Response Models**\n   - `crates/api_models/src/subscription.rs`\n\n**2. Core Business Logic**\n   - `crates/router/src/core/subscription.rs`\n   - `crates/router/src/core/subscription/invoice_handler.rs`\n\n**Code Patterns Applied:**\n- Extend existing types with new fields (10 changes)\n\n**Detailed Identifier Changes:**\n\n\nCommit c2c48940:\nFiles to modify:\n\n\n**crates/api_models/src/subscription.rs**\n  Modify existing code\n\n**crates/router/src/core/subscription.rs**\n  Modify existing code\n\n**crates/router/src/core/subscription/invoice_handler.rs**\n  Modify existing code", "metadata": {"pr_number": 9835, "pr_title": "feat(subscription): Add estimate to subscriptions flow and remove amount and currency", "merged_at": "2025-10-16T10:36:29Z", "intent": {"feature_type": "search_filter", "action": "add_feature", "entities": ["customer", "payment", "merchant"]}, "hierarchy": {"api_models": ["crates/api_models/src/subscription.rs"], "core_business": ["crates/router/src/core/subscription.rs", "crates/router/src/core/subscription/invoice_handler.rs"]}, "change_types": {"fields_added": 10}, "has_identifier_data": true, "commits_matched": 1, "match_method": "pr_number"}}
{"prompt": "<!-- Describe your changes in detail -->\r\nMoving db interfaces in router crate to hyperswitch_domain_models and its implementation is added in storage_impl\r\n\r\n**Refactored Interfaces**\r\n1. MerchantAccount\r\n2. MerchantConnectorAccount\r\n3. MerchantKeyStore\r\n4. BusinessProfile\r\n5. Configs\r\n\r\n\r\nAlso, moving the execute_connector_processing step and call_connector_api methods to a common place so that any module outside the router can use them.\r\nApiClient interfaces related to the above methods are also moved to the common place.", "response": "To implement this **search_filter** feature, you'll need to modify these architectural layers:\n\n\n**1. Domain Models (Business Logic Types)**\n   - `crates/hyperswitch_domain_models/src/business_profile.rs`\n   - `crates/hyperswitch_domain_models/src/configs.rs`\n   - `crates/hyperswitch_domain_models/src/customer.rs`\n   - ... and 4 more files\n\n**2. Core Business Logic**\n   - `crates/router/src/core/payments/customers.rs`\n   - `crates/router/src/core/payments/flows/psync_flow.rs`\n   - `crates/router/src/core/payments/helpers.rs`\n   - ... and 2 more files\n\n**3. External Connector Integration**\n   - `crates/external_services/src/grpc_client/unified_connector_service.rs`\n   - `crates/hyperswitch_interfaces/src/unified_connector_service.rs`\n   - `crates/hyperswitch_interfaces/src/unified_connector_service/transformers.rs`\n   - ... and 2 more files\n\n**4. Type Definitions**\n   - `crates/common_utils/src/types.rs`\n\n**5. Utils**\n   - `crates/hyperswitch_interfaces/src/helpers.rs`\n   - `crates/storage_impl/src/utils.rs`\n\n**6. Configuration Files**\n   - `crates/hyperswitch_interfaces/Cargo.toml`\n   - `crates/hyperswitch_interfaces/src/configs.rs`\n   - `crates/router/Cargo.toml`\n   - ... and 6 more files\n\n**7. Other**\n   - `Cargo.lock`\n   - `crates/analytics/src/lib.rs`\n   - `crates/hyperswitch_interfaces/src/api_client.rs`\n   - ... and 23 more files\n\n**Code Patterns Applied:**\n- Define new data structures (6 changes)\n- Implement new functions (254 changes)\n- Extend existing types with new fields (693 changes)\n- Add conditional logic for feature flags or filtering (9 changes)\n- Modify database queries (18 changes)\n\n**Detailed Identifier Changes:**\n\n\nCommit 59628332:\nFiles to modify:\n\n\n**crates/analytics/src/lib.rs**\n  Modify existing code\n\n**crates/common_utils/src/types.rs**\n  Modify existing code\n\n**crates/external_services/src/grpc_client/unified_connector_service.rs**\n  Modify existing code\n\n**crates/hyperswitch_domain_models/src/business_profile.rs**\n  Modify existing code\n\n**crates/hyperswitch_domain_models/src/configs.rs**\n  Modify existing code\n\n**crates/hyperswitch_domain_models/src/customer.rs**\n  Modify existing code\n\n**crates/hyperswitch_domain_models/src/lib.rs**\n  Modify existing code\n\n**crates/hyperswitch_domain_models/src/merchant_account.rs**\n  Modify existing code\n\n**crates/hyperswitch_domain_models/src/merchant_connector_account.rs**\n  Modify existing code\n\n**crates/hyperswitch_domain_models/src/merchant_key_store.rs**\n  Modify existing code\n\n**crates/hyperswitch_interfaces/src/api_client.rs**\n  Modify existing code\n\n**crates/hyperswitch_interfaces/src/configs.rs**\n  Modify existing code\n\n**crates/hyperswitch_interfaces/src/consts.rs**\n  Modify existing code\n\n**crates/hyperswitch_interfaces/src/events.rs**\n  Modify existing code\n\n**crates/hyperswitch_interfaces/src/helpers.rs**\n  Modify existing code\n\n**crates/hyperswitch_interfaces/src/lib.rs**\n  Modify existing code\n\n**crates/hyperswitch_interfaces/src/metrics.rs**\n  Modify existing code\n\n**crates/hyperswitch_interfaces/src/unified_connector_service.rs**\n  Modify existing code\n\n**crates/hyperswitch_interfaces/src/unified_connector_service/transformers.rs**\n  Modify existing code\n\n**crates/router/src/configs/defaults.rs**\n  Modify existing code\n\n**crates/router/src/configs/settings.rs**\n  Modify existing code\n\n**crates/router/src/core/payments/customers.rs**\n  Modify existing code\n\n**crates/router/src/core/payments/flows/psync_flow.rs**\n  Modify existing code\n\n**crates/router/src/core/payments/helpers.rs**\n  Modify existing code\n\n**crates/router/src/core/unified_connector_service.rs**\n  Modify existing code\n\n**crates/router/src/core/unified_connector_service/transformers.rs**\n  Modify existing code\n\n**crates/router/src/db.rs**\n  Modify existing code\n\n**crates/router/src/db/business_profile.rs**\n  Modify existing code\n\n**crates/router/src/db/configs.rs**\n  Modify existing code\n\n**crates/router/src/db/events.rs**\n  Modify existing code\n\n**crates/router/src/db/kafka_store.rs**\n  Modify existing code\n\n**crates/router/src/db/merchant_account.rs**\n  Modify existing code\n\n**crates/router/src/db/merchant_connector_account.rs**\n  Modify existing code\n\n**crates/router/src/db/merchant_key_store.rs**\n  Modify existing code\n\n**crates/router/src/events.rs**\n  Modify existing code\n\n**crates/router/src/routes/app.rs**\n  Modify existing code\n\n**crates/router/src/services.rs**\n  Modify existing code\n\n**crates/router/src/services/api.rs**\n  Modify existing code\n\n**crates/router/src/services/api/client.rs**\n  Modify existing code\n\n**crates/router/src/services/kafka.rs**\n  Modify existing code\n\n**crates/storage_impl/src/business_profile.rs**\n  Modify existing code\n\n**crates/storage_impl/src/config.rs**\n  Modify existing code\n\n**crates/storage_impl/src/configs.rs**\n  Modify existing code\n\n**crates/storage_impl/src/database/store.rs**\n  Modify existing code\n\n**crates/storage_impl/src/kv_router_store.rs**\n  Modify existing code\n\n**crates/storage_impl/src/lib.rs**\n  Modify existing code\n\n**crates/storage_impl/src/merchant_account.rs**\n  Modify existing code\n\n**crates/storage_impl/src/merchant_connector_account.rs**\n  Modify existing code\n\n**crates/storage_impl/src/merchant_key_store.rs**\n  Modify existing code\n\n**crates/storage_impl/src/mock_db.rs**\n  Modify existing code\n\n**crates/storage_impl/src/utils.rs**\n  Modify existing code", "metadata": {"pr_number": 9830, "pr_title": "refactor(db_interfaces): move db interfaces in router to domain_models", "merged_at": "2025-10-15T07:33:48Z", "intent": {"feature_type": "search_filter", "action": "add_feature", "entities": ["customer", "payment", "merchant"]}, "hierarchy": {"domain": ["crates/hyperswitch_domain_models/src/business_profile.rs", "crates/hyperswitch_domain_models/src/configs.rs", "crates/hyperswitch_domain_models/src/customer.rs", "crates/hyperswitch_domain_models/src/lib.rs", "crates/hyperswitch_domain_models/src/merchant_account.rs", "crates/hyperswitch_domain_models/src/merchant_connector_account.rs", "crates/hyperswitch_domain_models/src/merchant_key_store.rs"], "core_business": ["crates/router/src/core/payments/customers.rs", "crates/router/src/core/payments/flows/psync_flow.rs", "crates/router/src/core/payments/helpers.rs", "crates/router/src/core/unified_connector_service.rs", "crates/router/src/core/unified_connector_service/transformers.rs"], "connectors": ["crates/external_services/src/grpc_client/unified_connector_service.rs", "crates/hyperswitch_interfaces/src/unified_connector_service.rs", "crates/hyperswitch_interfaces/src/unified_connector_service/transformers.rs", "crates/router/src/db/merchant_connector_account.rs", "crates/storage_impl/src/merchant_connector_account.rs"], "types": ["crates/common_utils/src/types.rs"], "utils": ["crates/hyperswitch_interfaces/src/helpers.rs", "crates/storage_impl/src/utils.rs"], "config": ["crates/hyperswitch_interfaces/Cargo.toml", "crates/hyperswitch_interfaces/src/configs.rs", "crates/router/Cargo.toml", "crates/router/src/configs/defaults.rs", "crates/router/src/configs/settings.rs", "crates/router/src/db/configs.rs", "crates/storage_impl/Cargo.toml", "crates/storage_impl/src/config.rs", "crates/storage_impl/src/configs.rs"], "other": ["Cargo.lock", "crates/analytics/src/lib.rs", "crates/hyperswitch_interfaces/src/api_client.rs", "crates/hyperswitch_interfaces/src/consts.rs", "crates/hyperswitch_interfaces/src/events.rs", "crates/hyperswitch_interfaces/src/lib.rs", "crates/hyperswitch_interfaces/src/metrics.rs", "crates/router/src/db.rs", "crates/router/src/db/business_profile.rs", "crates/router/src/db/events.rs", "crates/router/src/db/kafka_store.rs", "crates/router/src/db/merchant_account.rs", "crates/router/src/db/merchant_key_store.rs", "crates/router/src/events.rs", "crates/router/src/routes/app.rs", "crates/router/src/services.rs", "crates/router/src/services/api.rs", "crates/router/src/services/api/client.rs", "crates/router/src/services/kafka.rs", "crates/storage_impl/src/business_profile.rs", "crates/storage_impl/src/database/store.rs", "crates/storage_impl/src/kv_router_store.rs", "crates/storage_impl/src/lib.rs", "crates/storage_impl/src/merchant_account.rs", "crates/storage_impl/src/merchant_key_store.rs", "crates/storage_impl/src/mock_db.rs"]}, "change_types": {"structs_added": 6, "functions_added": 254, "enums_added": 2, "fields_added": 693, "imports_added": 83, "conditionals_added": 9, "database_queries": 18}, "has_identifier_data": true, "commits_matched": 1, "match_method": "pr_number"}}
{"prompt": "Hotfix for https://github.com/juspay/hyperswitch/pull/9823", "response": "To implement this **search_filter** feature, you'll need to modify these architectural layers:\n\n\n**1. External Connector Integration**\n   - `crates/hyperswitch_connectors/src/connectors/adyenplatform/transformers/payouts.rs`\n\n**Code Patterns Applied:**\n- Extend existing types with new fields (1 changes)", "metadata": {"pr_number": 9829, "pr_title": "fix(connector): [adyenplatform] use YYYY format for expiry year", "merged_at": "2025-10-14T09:08:04Z", "intent": {"feature_type": "search_filter", "action": "add_feature", "entities": []}, "hierarchy": {"connectors": ["crates/hyperswitch_connectors/src/connectors/adyenplatform/transformers/payouts.rs"]}, "change_types": {"fields_added": 1}, "has_identifier_data": false, "commits_matched": 0, "match_method": "none"}}
{"prompt": "<!-- Describe your changes in detail -->\r\nfix connector metadata deserialization\r\n\r\nCurrently we deserialize to camelCase.\r\nbut dashboard always sends in snake_case.\r\n\r\nmain pr - #9826", "response": "To implement this **search_filter** feature, you'll need to modify these architectural layers:\n\n\n**1. External Connector Integration**\n   - `crates/hyperswitch_connectors/src/connectors/peachpayments/transformers.rs`", "metadata": {"pr_number": 9827, "pr_title": "fix(connector):  [Peach Payments] fix connector metadata deserialization", "merged_at": "2025-10-14T11:48:24Z", "intent": {"feature_type": "search_filter", "action": "add_feature", "entities": ["user", "connector"]}, "hierarchy": {"connectors": ["crates/hyperswitch_connectors/src/connectors/peachpayments/transformers.rs"]}, "change_types": {}, "has_identifier_data": false, "commits_matched": 0, "match_method": "none"}}
{"prompt": "<!-- Describe your changes in detail -->\r\nfix connector metadata deserialization\r\n\r\nCurrently we deserialize to camelCase.\r\nbut dashboard always sends in snake_case.", "response": "To implement this **search_filter** feature, you'll need to modify these architectural layers:\n\n\n**1. External Connector Integration**\n   - `crates/hyperswitch_connectors/src/connectors/peachpayments/transformers.rs`", "metadata": {"pr_number": 9826, "pr_title": "fix(connector):  [Peach Payments] fix connector metadata deserialization", "merged_at": "2025-10-14T10:15:43Z", "intent": {"feature_type": "search_filter", "action": "add_feature", "entities": ["user", "connector"]}, "hierarchy": {"connectors": ["crates/hyperswitch_connectors/src/connectors/peachpayments/transformers.rs"]}, "change_types": {}, "has_identifier_data": false, "commits_matched": 0, "match_method": "none"}}
{"prompt": "The Noon Connector V2 API is failing in the payment flow with the error `Missing required param: order_category.` This happens because the connector_metadata is not being extracted in the V2 confirm-intent flow, which causes the order_category field to be None. The fix involves correctly parsing connector_metadata and ensuring the order_category value is passed from it.", "response": "To implement this **search_filter** feature, you'll need to modify these architectural layers:\n\n\n**1. API Request/Response Models**\n   - `crates/api_models/src/payments.rs`\n\n**2. Domain Models (Business Logic Types)**\n   - `crates/hyperswitch_domain_models/src/payments.rs`\n   - `crates/hyperswitch_domain_models/src/payments/payment_intent.rs`\n\n**3. Core Business Logic**\n   - `crates/router/src/core/payments/operations/payment_update_intent.rs`\n   - `crates/router/src/core/payments/transformers.rs`\n   - `crates/router/src/core/utils.rs`\n\n**4. Other**\n   - `crates/router/src/services/kafka/payment_intent.rs`\n   - `crates/router/src/services/kafka/payment_intent_event.rs`\n\n**Code Patterns Applied:**\n- Extend existing types with new fields (12 changes)\n\n**Detailed Identifier Changes:**\n\n\nCommit 6f045d84:\nFiles to modify:\n\n\n**crates/api_models/src/payments.rs**\n  Modify existing code\n\n**crates/hyperswitch_domain_models/src/payments.rs**\n  Modify existing code\n\n**crates/hyperswitch_domain_models/src/payments/payment_intent.rs**\n  Modify existing code\n\n**crates/router/src/core/payments/operations/payment_update_intent.rs**\n  Modify existing code\n\n**crates/router/src/core/payments/transformers.rs**\n  Modify existing code\n\n**crates/router/src/core/utils.rs**\n  Modify existing code\n\n**crates/router/src/services/kafka/payment_intent.rs**\n  Modify existing code\n\n**crates/router/src/services/kafka/payment_intent_event.rs**\n  Modify existing code", "metadata": {"pr_number": 9825, "pr_title": "fix(payments): add connector metadata parsing and order category to payment router data", "merged_at": "2025-10-16T10:25:01Z", "intent": {"feature_type": "search_filter", "action": "add_feature", "entities": ["customer", "payment", "merchant"]}, "hierarchy": {"api_models": ["crates/api_models/src/payments.rs"], "domain": ["crates/hyperswitch_domain_models/src/payments.rs", "crates/hyperswitch_domain_models/src/payments/payment_intent.rs"], "core_business": ["crates/router/src/core/payments/operations/payment_update_intent.rs", "crates/router/src/core/payments/transformers.rs", "crates/router/src/core/utils.rs"], "other": ["crates/router/src/services/kafka/payment_intent.rs", "crates/router/src/services/kafka/payment_intent_event.rs"]}, "change_types": {"fields_added": 12, "imports_added": 2}, "has_identifier_data": true, "commits_matched": 1, "match_method": "pr_number"}}
