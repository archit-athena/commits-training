{"prompt": "feat(braintree): Sessions flow for braintree and klarna (#121)", "response": "Files to modify:\n\n\n**payments.rs**\n  Modify existing code\n\n**custom_serde.rs**\n  Add:\n    - function: pub::deserialize\n    - mod: pub::json_string\n\n**settings.rs**\n  Modify existing code\n\n**connector.rs**\n  Add:\n    - mod: pub::klarna\n\n**braintree.rs**\n  Add:\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::build_request\n    - function: private::get_error_response\n    - function: private::get_request_body\n    - function: private::handle_response\n\n**transformers.rs**\n  Add:\n    - function: private::try_from\n    - struct: pub::AuthorizationFingerprint\n    - struct: pub::ClientToken\n    - struct: pub::BraintreeSessionTokenResponse\n    - impl: impl TryFrom<\ntypes::ResponseRouterData<F, BraintreeSessionTokenResponse, T, types::PaymentsResponseData>,\n> for types::RouterData<F, T, types::PaymentsResponseData>\n\n**klarna.rs**\n  Add:\n    - function: private::id\n    - function: private::common_get_content_type\n    - function: private::base_url\n    - function: private::get_auth_header\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_webhook_object_reference_id\n    - function: private::get_webhook_event_type\n    - function: private::get_webhook_resource_object\n    - struct: pub::Klarna\n    - impl: impl api::ConnectorCommon for Klarna\n    - impl: impl api::Payment for Klarna\n    - impl: impl api::PaymentAuthorize for Klarna\n    - impl: impl api::PaymentSync for Klarna\n    - impl: impl api::PaymentVoid for Klarna\n    - impl: impl api::PaymentCapture for Klarna\n    - impl: impl api::PaymentSession for Klarna\n    - impl: impl services::ConnectorIntegration<\napi::Session,\ntypes::PaymentsSessionData,\ntypes::PaymentsResponseData,\n> for Klarna\n    - impl: impl api::PreVerify for Klarna\n    - impl: impl services::ConnectorIntegration<\napi::Verify,\ntypes::VerifyRequestData,\ntypes::PaymentsResponseData,\n> for Klarna\n    - impl: impl services::ConnectorIntegration<\napi::Capture,\ntypes::PaymentsCaptureData,\ntypes::PaymentsResponseData,\n> for Klarna\n    - impl: impl services::ConnectorIntegration<api::PSync, types::PaymentsSyncData, types::PaymentsResponseData> for Klarna\n    - impl: impl services::ConnectorIntegration<\napi::Authorize,\ntypes::PaymentsAuthorizeData,\ntypes::PaymentsResponseData,\n> for Klarna\n    - impl: impl services::ConnectorIntegration<\napi::Void,\ntypes::PaymentsCancelData,\ntypes::PaymentsResponseData,\n> for Klarna\n    - impl: impl api::Refund for Klarna\n    - impl: impl api::RefundExecute for Klarna\n    - impl: impl api::RefundSync for Klarna\n    - impl: impl services::ConnectorIntegration<api::Execute, types::RefundsData, types::RefundsResponseData> for Klarna\n    - impl: impl services::ConnectorIntegration<api::RSync, types::RefundsData, types::RefundsResponseData> for Klarna\n    - impl: impl api::IncomingWebhook for Klarna\n    - impl: impl services::ConnectorRedirectResponse for Klarna\n    - mod: private::transformers\n\n**transformers.rs**\n  Add:\n    - function: private::try_from\n    - struct: pub::AuthorizationFingerprint\n    - struct: pub::ClientToken\n    - struct: pub::BraintreeSessionTokenResponse\n    - impl: impl TryFrom<\ntypes::ResponseRouterData<F, BraintreeSessionTokenResponse, T, types::PaymentsResponseData>,\n> for types::RouterData<F, T, types::PaymentsResponseData>\n\n**payments.rs**\n  Modify existing code\n\n**payment_session.rs**\n  Modify existing code\n\n**transformers.rs**\n  Add:\n    - function: private::try_from\n    - struct: pub::AuthorizationFingerprint\n    - struct: pub::ClientToken\n    - struct: pub::BraintreeSessionTokenResponse\n    - impl: impl TryFrom<\ntypes::ResponseRouterData<F, BraintreeSessionTokenResponse, T, types::PaymentsResponseData>,\n> for types::RouterData<F, T, types::PaymentsResponseData>\n\n**app.rs**\n  Modify existing code\n\n**types.rs**\n  Remove:\n    - struct: pub::PaymentsSessionResponseData\n  Add:\n    - struct: pub::ConnectorSessionToken\n    - struct: pub::PaymentsSessionResponse\n\n**api.rs**\n  Modify existing code\n\n**connector.rs**\n  Add:\n    - mod: pub::klarna"}
