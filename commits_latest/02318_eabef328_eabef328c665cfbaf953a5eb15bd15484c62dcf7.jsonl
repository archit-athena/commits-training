{"prompt": "feat(refunds_v2): Add refund create core flow (#7619)\n\nCo-authored-by: hyperswitch-bot[bot] <148525504+hyperswitch-bot[bot]@users.noreply.github.com>", "response": "Files to modify:\n\n\n**refund.rs**\n  Add:\n    - function: private::get_api_event_type\n    - impl: impl ApiEventMetric for RefundsCreateRequest\n\n**refunds.rs**\n  Add:\n    - enum: pub::RefundType\n\n**types.rs**\n  Add:\n    - function: pub::extract_hashed_data\n\n**payment_attempt.rs**\n  Add:\n    - function: pub::find_last_successful_or_partially_captured_attempt_by_payment_id\n\n**refund.rs**\n  Add:\n    - function: private::get_api_event_type\n    - impl: impl ApiEventMetric for RefundsCreateRequest\n\n**refund.rs**\n  Add:\n    - function: private::get_api_event_type\n    - impl: impl ApiEventMetric for RefundsCreateRequest\n\n**payments.rs**\n  Add:\n    - function: pub::get_optional_customer_id\n    - function: pub::get_optional_connector_metadata\n\n**payment_attempt.rs**\n  Add:\n    - function: pub::find_last_successful_or_partially_captured_attempt_by_payment_id\n\n**openapi_v2.rs**\n  Modify existing code\n\n**core.rs**\n  Add:\n    - mod: pub::refunds_v2\n\n**refunds.rs**\n  Add:\n    - enum: pub::RefundType\n\n**refunds_v2.rs**\n  Add:\n    - function: pub::refund_create_core\n    - function: pub::trigger_refund_to_gateway\n    - function: private::call_connector_service\n    - function: private::get_refund_update_object\n    - function: private::get_connector_implementation_error_refund_update\n    - function: private::get_connector_error_refund_update\n    - function: private::get_unified_error_and_message\n    - function: pub::get_refund_update_for_refund_response_data\n    - function: pub::perform_integrity_check\n    - function: private::foreign_from\n    - function: pub::check_refund_integrity\n    - function: pub::validate_and_create_refund\n    - function: private::foreign_try_from\n    - function: pub::schedule_refund_execution\n    - function: pub::refund_to_refund_core_workflow_model\n    - function: pub::add_refund_execute_task\n    - function: pub::add_refund_sync_task\n    - impl: impl ForeignFrom<(&errors::ConnectorError, enums::MerchantStorageScheme)> for Option<storage::RefundUpdate>\n    - impl: impl ForeignTryFrom<storage::Refund> for api::RefundResponse\n\n**utils.rs**\n  Add:\n    - mod: pub::refunds_transformers\n    - mod: pub::refunds_validator\n\n**refunds_transformers.rs**\n  Modify existing code\n\n**refunds_validator.rs**\n  Add:\n    - function: pub::validate_for_valid_refunds\n\n**kafka_store.rs**\n  Add:\n    - function: private::find_payment_attempt_last_successful_or_partially_captured_attempt_by_payment_id\n\n**refund.rs**\n  Add:\n    - function: private::get_api_event_type\n    - impl: impl ApiEventMetric for RefundsCreateRequest\n\n**lib.rs**\n  Modify existing code\n\n**routes.rs**\n  Modify existing code\n\n**app.rs**\n  Add:\n    - function: pub::server\n    - impl: impl Refunds\n\n**refunds.rs**\n  Add:\n    - enum: pub::RefundType\n\n**refunds.rs**\n  Add:\n    - enum: pub::RefundType\n\n**payment_attempt.rs**\n  Add:\n    - function: pub::find_last_successful_or_partially_captured_attempt_by_payment_id\n\n**payment_attempt.rs**\n  Add:\n    - function: pub::find_last_successful_or_partially_captured_attempt_by_payment_id"}
