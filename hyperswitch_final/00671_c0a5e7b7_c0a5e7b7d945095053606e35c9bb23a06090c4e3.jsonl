{"prompt": "feat(analytics): analytics APIs (#2676)\n\nCo-authored-by: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>", "response": "Files to modify:\n\n\n**analytics.rs**\n  Add:\n    - struct: pub::NameDescription\n    - struct: pub::GetInfoResponse\n    - struct: pub::TimeRange\n    - struct: pub::TimeSeries\n    - struct: pub::GetPaymentMetricRequest\n    - struct: pub::GetRefundMetricRequest\n    - struct: pub::AnalyticsMetadata\n    - struct: pub::GetPaymentFiltersRequest\n    - struct: pub::PaymentFiltersResponse\n    - struct: pub::FilterValue\n    - struct: pub::GetRefundFilterRequest\n    - struct: pub::RefundFiltersResponse\n    - struct: pub::RefundFilterValue\n    - struct: pub::MetricsResponse\n    - enum: pub::Granularity\n    - mod: pub::payments\n    - mod: pub::refunds\n\n**payments.rs**\n  Add:\n    - function: private::from\n    - function: private::from\n    - function: pub::new\n    - function: private::hash\n    - function: private::eq\n    - struct: pub::PaymentFilters\n    - struct: pub::PaymentSuccessRate\n    - struct: pub::PaymentCount\n    - struct: pub::PaymentSuccessCount\n    - struct: pub::PaymentProcessedAmount\n    - struct: pub::AvgTicketSize\n    - struct: pub::PaymentMetricsBucketIdentifier\n    - struct: pub::PaymentMetricsBucketValue\n    - struct: pub::MetricsBucketResponse\n    - enum: pub::PaymentDimensions\n    - enum: pub::PaymentMetrics\n    - impl: impl From<PaymentMetrics> for NameDescription\n    - impl: impl From<PaymentDimensions> for NameDescription\n    - impl: impl PaymentMetricsBucketIdentifier\n    - impl: impl Hash for PaymentMetricsBucketIdentifier\n    - impl: impl PartialEq for PaymentMetricsBucketIdentifier\n    - mod: pub::metric_behaviour\n\n**refunds.rs**\n  Add:\n    - function: private::from\n    - function: private::from\n    - function: private::hash\n    - function: private::eq\n    - function: pub::new\n    - struct: pub::RefundFilters\n    - struct: pub::RefundSuccessRate\n    - struct: pub::RefundCount\n    - struct: pub::RefundSuccessCount\n    - struct: pub::RefundProcessedAmount\n    - struct: pub::RefundMetricsBucketIdentifier\n    - struct: pub::RefundMetricsBucketValue\n    - struct: pub::RefundMetricsBucketResponse\n    - enum: pub::RefundType\n    - enum: pub::RefundDimensions\n    - enum: pub::RefundMetrics\n    - impl: impl From<RefundMetrics> for NameDescription\n    - impl: impl From<RefundDimensions> for NameDescription\n    - impl: impl Hash for RefundMetricsBucketIdentifier\n    - impl: impl PartialEq for RefundMetricsBucketIdentifier\n    - impl: impl RefundMetricsBucketIdentifier\n    - mod: pub::metric_behaviour\n\n**lib.rs**\n  Add:\n    - mod: pub::analytics\n\n**custom_serde.rs**\n  Add:\n    - function: pub::serialize\n    - function: pub::deserialize\n    - mod: pub::iso8601custom\n\n**analytics.rs**\n  Add:\n    - struct: pub::NameDescription\n    - struct: pub::GetInfoResponse\n    - struct: pub::TimeRange\n    - struct: pub::TimeSeries\n    - struct: pub::GetPaymentMetricRequest\n    - struct: pub::GetRefundMetricRequest\n    - struct: pub::AnalyticsMetadata\n    - struct: pub::GetPaymentFiltersRequest\n    - struct: pub::PaymentFiltersResponse\n    - struct: pub::FilterValue\n    - struct: pub::GetRefundFilterRequest\n    - struct: pub::RefundFiltersResponse\n    - struct: pub::RefundFilterValue\n    - struct: pub::MetricsResponse\n    - enum: pub::Granularity\n    - mod: pub::payments\n    - mod: pub::refunds\n\n**core.rs**\n  Add:\n    - function: pub::get_domain_info\n    - function: pub::payment_filters_core\n    - function: pub::refund_filter_core\n\n**errors.rs**\n  Add:\n    - function: private::switch\n    - enum: pub::AnalyticsError\n    - impl: impl ErrorSwitch<ApiErrorResponse> for AnalyticsError\n\n**metrics.rs**\n  Add:\n    - mod: pub::request\n\n**request.rs**\n  Add:\n    - function: pub::add_attributes\n    - function: pub::record_operation_time\n    - function: pub::time_future\n\n**payments.rs**\n  Add:\n    - function: private::from\n    - function: private::from\n    - function: pub::new\n    - function: private::hash\n    - function: private::eq\n    - struct: pub::PaymentFilters\n    - struct: pub::PaymentSuccessRate\n    - struct: pub::PaymentCount\n    - struct: pub::PaymentSuccessCount\n    - struct: pub::PaymentProcessedAmount\n    - struct: pub::AvgTicketSize\n    - struct: pub::PaymentMetricsBucketIdentifier\n    - struct: pub::PaymentMetricsBucketValue\n    - struct: pub::MetricsBucketResponse\n    - enum: pub::PaymentDimensions\n    - enum: pub::PaymentMetrics\n    - impl: impl From<PaymentMetrics> for NameDescription\n    - impl: impl From<PaymentDimensions> for NameDescription\n    - impl: impl PaymentMetricsBucketIdentifier\n    - impl: impl Hash for PaymentMetricsBucketIdentifier\n    - impl: impl PartialEq for PaymentMetricsBucketIdentifier\n    - mod: pub::metric_behaviour\n\n**accumulator.rs**\n  Add:\n    - function: private::add_metrics_bucket\n    - function: private::collect\n    - function: private::add_metrics_bucket\n    - function: private::collect\n    - function: private::add_metrics_bucket\n    - function: private::collect\n    - function: private::add_metrics_bucket\n    - function: private::collect\n    - function: pub::collect\n    - struct: pub::PaymentMetricsAccumulator\n    - struct: pub::SuccessRateAccumulator\n    - struct: pub::CountAccumulator\n    - struct: pub::SumAccumulator\n    - struct: pub::AverageAccumulator\n    - trait: pub::PaymentMetricAccumulator\n    - impl: impl PaymentMetricAccumulator for SuccessRateAccumulator\n    - impl: impl PaymentMetricAccumulator for CountAccumulator\n    - impl: impl PaymentMetricAccumulator for SumAccumulator\n    - impl: impl PaymentMetricAccumulator for AverageAccumulator\n    - impl: impl PaymentMetricsAccumulator\n\n**core.rs**\n  Add:\n    - function: pub::get_domain_info\n    - function: pub::payment_filters_core\n    - function: pub::refund_filter_core\n\n**filters.rs**\n  Add:\n    - function: pub::get_payment_filter_for_dimension\n    - struct: pub::FilterRow\n    - trait: pub::PaymentFilterAnalytics\n\n**metrics.rs**\n  Add:\n    - mod: pub::request\n\n**avg_ticket_size.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::AvgTicketSize\n    - impl: impl PaymentMetric<T> for AvgTicketSize\n\n**payment_count.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::PaymentCount\n    - impl: impl super::PaymentMetric<T> for PaymentCount\n\n**payment_processed_amount.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::PaymentProcessedAmount\n    - impl: impl super::PaymentMetric<T> for PaymentProcessedAmount\n\n**payment_success_count.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::PaymentSuccessCount\n    - impl: impl super::PaymentMetric<T> for PaymentSuccessCount\n\n**success_rate.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::PaymentSuccessRate\n    - impl: impl super::PaymentMetric<T> for PaymentSuccessRate\n\n**types.rs**\n  Add:\n    - function: private::set_filter_clause\n    - impl: impl QueryFilter<T> for PaymentFilters\n\n**query.rs**\n  Add:\n    - function: private::set_filter_clause\n    - function: private::set_group_by_clause\n    - function: private::get_lowest_common_granularity_level\n    - function: private::get_bucket_size\n    - function: private::clip_to_start\n    - function: private::clip_to_end\n    - function: pub::new\n    - function: pub::add_select_column\n    - function: pub::set_distinct\n    - function: pub::add_filter_clause\n    - function: pub::add_bool_filter_clause\n    - function: pub::add_custom_filter_clause\n    - function: pub::add_filter_in_range_clause\n    - function: pub::add_group_by_clause\n    - function: pub::add_granularity_in_mins\n    - function: private::get_filter_clause\n    - function: private::get_select_clause\n    - function: private::get_group_by_clause\n    - function: pub::add_having_clause\n    - function: pub::get_filter_type_clause\n    - function: pub::build_query\n    - function: pub::execute_query\n    - struct: pub::QueryBuilder\n    - enum: pub::TimeGranularityLevel\n    - enum: pub::QueryBuildingError\n    - enum: pub::PostProcessingError\n    - enum: pub::Aggregate\n    - enum: pub::FilterTypes\n    - trait: pub::QueryFilter\n    - trait: pub::GroupByClause\n    - trait: pub::SeriesBucket\n    - trait: pub::ToSql\n    - impl: impl QueryFilter<T> for analytics_api::TimeRange\n    - impl: impl GroupByClause<super::SqlxClient> for Granularity\n    - impl: impl SeriesBucket for Granularity\n    - impl: impl QueryBuilder<T>\n\n**refunds.rs**\n  Add:\n    - function: private::from\n    - function: private::from\n    - function: private::hash\n    - function: private::eq\n    - function: pub::new\n    - struct: pub::RefundFilters\n    - struct: pub::RefundSuccessRate\n    - struct: pub::RefundCount\n    - struct: pub::RefundSuccessCount\n    - struct: pub::RefundProcessedAmount\n    - struct: pub::RefundMetricsBucketIdentifier\n    - struct: pub::RefundMetricsBucketValue\n    - struct: pub::RefundMetricsBucketResponse\n    - enum: pub::RefundType\n    - enum: pub::RefundDimensions\n    - enum: pub::RefundMetrics\n    - impl: impl From<RefundMetrics> for NameDescription\n    - impl: impl From<RefundDimensions> for NameDescription\n    - impl: impl Hash for RefundMetricsBucketIdentifier\n    - impl: impl PartialEq for RefundMetricsBucketIdentifier\n    - impl: impl RefundMetricsBucketIdentifier\n    - mod: pub::metric_behaviour\n\n**accumulator.rs**\n  Add:\n    - function: private::add_metrics_bucket\n    - function: private::collect\n    - function: private::add_metrics_bucket\n    - function: private::collect\n    - function: private::add_metrics_bucket\n    - function: private::collect\n    - function: private::add_metrics_bucket\n    - function: private::collect\n    - function: pub::collect\n    - struct: pub::PaymentMetricsAccumulator\n    - struct: pub::SuccessRateAccumulator\n    - struct: pub::CountAccumulator\n    - struct: pub::SumAccumulator\n    - struct: pub::AverageAccumulator\n    - trait: pub::PaymentMetricAccumulator\n    - impl: impl PaymentMetricAccumulator for SuccessRateAccumulator\n    - impl: impl PaymentMetricAccumulator for CountAccumulator\n    - impl: impl PaymentMetricAccumulator for SumAccumulator\n    - impl: impl PaymentMetricAccumulator for AverageAccumulator\n    - impl: impl PaymentMetricsAccumulator\n\n**core.rs**\n  Add:\n    - function: pub::get_domain_info\n    - function: pub::payment_filters_core\n    - function: pub::refund_filter_core\n\n**filters.rs**\n  Add:\n    - function: pub::get_payment_filter_for_dimension\n    - struct: pub::FilterRow\n    - trait: pub::PaymentFilterAnalytics\n\n**metrics.rs**\n  Add:\n    - mod: pub::request\n\n**refund_count.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::RefundCount\n    - impl: impl super::RefundMetric<T> for RefundCount\n\n**refund_processed_amount.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::RefundProcessedAmount\n    - impl: impl super::RefundMetric<T> for RefundProcessedAmount\n\n**refund_success_count.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::RefundSuccessCount\n    - impl: impl super::RefundMetric<T> for RefundSuccessCount\n\n**refund_success_rate.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::RefundSuccessRate\n    - impl: impl super::RefundMetric<T> for RefundSuccessRate\n\n**types.rs**\n  Add:\n    - function: private::set_filter_clause\n    - impl: impl QueryFilter<T> for PaymentFilters\n\n**routes.rs**\n  Add:\n    - function: pub::server\n    - function: pub::get_info\n    - function: pub::get_payment_metrics\n    - function: pub::get_refunds_metrics\n    - function: pub::get_payment_filters\n    - function: pub::get_refund_filters\n    - struct: pub::Analytics\n    - impl: impl Analytics\n\n**sqlx.rs**\n  Add:\n    - function: pub::from_conf\n    - function: private::encode_by_ref\n    - function: private::size_hint\n    - function: private::decode\n    - function: private::type_info\n    - function: private::load_row\n    - function: private::load_results\n    - function: private::from_row\n    - function: private::from_row\n    - function: private::from_row\n    - function: private::from_row\n    - function: private::to_sql\n    - function: private::to_sql\n    - function: private::to_sql\n    - struct: pub::SqlxClient\n    - trait: pub::DbType\n    - impl: impl SqlxClient\n    - impl: impl Encode<'q, Postgres> for DBEnumWrapper<Type>\n    - impl: impl Decode<'r, Postgres> for DBEnumWrapper<Type>\n    - impl: impl sqlx::Type<Postgres> for DBEnumWrapper<Type>\n    - impl: impl LoadRow<T> for SqlxClient\n    - impl: impl super::payments::filters::PaymentFilterAnalytics for SqlxClient\n    - impl: impl super::payments::metrics::PaymentMetricAnalytics for SqlxClient\n    - impl: impl super::refunds::metrics::RefundMetricAnalytics for SqlxClient\n    - impl: impl super::refunds::filters::RefundFilterAnalytics for SqlxClient\n    - impl: impl AnalyticsDataSource for SqlxClient\n    - impl: impl FromRow<'a, PgRow> for super::refunds::metrics::RefundMetricRow\n    - impl: impl FromRow<'a, PgRow> for super::payments::metrics::PaymentMetricRow\n    - impl: impl FromRow<'a, PgRow> for super::payments::filters::FilterRow\n    - impl: impl FromRow<'a, PgRow> for super::refunds::filters::RefundFilterRow\n    - impl: impl ToSql<SqlxClient> for PrimitiveDateTime\n    - impl: impl ToSql<SqlxClient> for AnalyticsCollection\n    - impl: impl ToSql<SqlxClient> for Aggregate<T>\n\n**types.rs**\n  Add:\n    - function: private::set_filter_clause\n    - impl: impl QueryFilter<T> for PaymentFilters\n\n**utils.rs**\n  Add:\n    - function: pub::get_payment_dimensions\n    - function: pub::get_refund_dimensions\n    - function: pub::get_payment_metrics_info\n    - function: pub::get_refund_metrics_info\n\n**settings.rs**\n  Modify existing code\n\n**lib.rs**\n  Add:\n    - mod: pub::analytics\n\n**routes.rs**\n  Add:\n    - function: pub::server\n    - function: pub::get_info\n    - function: pub::get_payment_metrics\n    - function: pub::get_refunds_metrics\n    - function: pub::get_payment_filters\n    - function: pub::get_refund_filters\n    - struct: pub::Analytics\n    - impl: impl Analytics\n\n**app.rs**\n  Modify existing code\n\n**lib.rs**\n  Add:\n    - mod: pub::analytics\n\n**metrics.rs**\n  Add:\n    - mod: pub::request"}
