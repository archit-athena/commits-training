{"prompt": "refactor(pm): create new crate for payment methods (#7355)\n\nCo-authored-by: hyperswitch-bot[bot] <148525504+hyperswitch-bot[bot]@users.noreply.github.com>", "response": "Files to modify:\n\n\n**errors.rs**\n  Add:\n    - function: pub::is_db_not_found\n    - impl: impl StorageError\n\n**payment_methods.rs**\n  Add:\n    - trait: pub::PaymentMethodInterface\n\n**lib.rs**\n  Add:\n    - mod: pub::state\n\n**state.rs**\n  Add:\n    - function: private::from\n    - function: pub::find_payment_method\n    - struct: pub::PaymentMethodsState\n    - trait: pub::PaymentMethodsStorageInterface\n    - impl: impl PaymentMethodsStorageInterface for MockDb\n    - impl: impl PaymentMethodsStorageInterface for RouterStore<T>\n    - impl: impl PaymentMethodsStorageInterface for KVRouterStore<T>\n    - impl: impl From<&PaymentMethodsState> for KeyManagerState\n    - impl: impl PaymentMethodsState\n\n**customers.rs**\n  Modify existing code\n\n**payment_method_executor.rs**\n  Modify existing code\n\n**db.rs**\n  Remove:\n    - mod: pub::payment_method\n\n**kafka_store.rs**\n  Add:\n    - impl: impl PaymentMethodsStorageInterface for KafkaStore\n\n**payment_method.rs**\n  Remove:\n    - function: private::find_payment_method\n    - function: private::find_payment_method\n    - function: private::find_payment_method_by_locker_id\n    - function: private::get_payment_method_count_by_customer_id_merchant_id_status\n    - function: private::insert_payment_method\n    - function: private::insert_payment_method\n    - function: private::update_payment_method\n    - function: private::update_payment_method\n    - function: private::find_payment_method_by_customer_id_merchant_id_list\n    - function: private::find_payment_method_list_by_global_customer_id\n    - function: private::find_payment_method_by_customer_id_merchant_id_status\n    - function: private::find_payment_method_by_global_customer_id_merchant_id_status\n    - function: private::delete_payment_method_by_merchant_id_payment_method_id\n    - function: private::delete_payment_method\n    - function: private::find_payment_method_by_fingerprint_id\n    - function: private::find_payment_method\n    - function: private::find_payment_method\n    - function: private::find_payment_method_by_locker_id\n    - function: private::get_payment_method_count_by_customer_id_merchant_id_status\n    - function: private::insert_payment_method\n    - function: private::update_payment_method\n    - function: private::update_payment_method\n    - function: private::find_payment_method_by_customer_id_merchant_id_list\n    - function: private::find_payment_method_list_by_global_customer_id\n    - function: private::find_payment_method_by_customer_id_merchant_id_status\n    - function: private::find_payment_method_by_global_customer_id_merchant_id_status\n    - function: private::delete_payment_method_by_merchant_id_payment_method_id\n    - function: private::delete_payment_method\n    - function: private::find_payment_method_by_fingerprint_id\n    - function: private::find_payment_method\n    - function: private::find_payment_method\n    - function: private::find_payment_method_by_locker_id\n    - function: private::get_payment_method_count_by_customer_id_merchant_id_status\n    - function: private::insert_payment_method\n    - function: private::find_payment_method_by_customer_id_merchant_id_list\n    - function: private::find_payment_method_list_by_global_customer_id\n    - function: private::find_payment_method_by_customer_id_merchant_id_status\n    - function: private::find_payment_method_by_global_customer_id_merchant_id_status\n    - function: private::delete_payment_method_by_merchant_id_payment_method_id\n    - function: private::update_payment_method\n    - function: private::delete_payment_method\n    - function: private::find_payment_method_by_fingerprint_id\n    - trait: pub::PaymentMethodInterface\n    - impl: impl PaymentMethodInterface for Store\n    - impl: impl PaymentMethodInterface for Store\n    - impl: impl PaymentMethodInterface for MockDb\n    - mod: private::storage\n    - mod: private::storage\n\n**admin.rs**\n  Modify existing code\n\n**api_keys.rs**\n  Modify existing code\n\n**app.rs**\n  Modify existing code\n\n**customers.rs**\n  Modify existing code\n\n**dummy_connector.rs**\n  Modify existing code\n\n**services.rs**\n  Modify existing code\n\n**db_utils.rs**\n  Remove:\n    - function: pub::find_all_combined_kv_database\n    - function: private::union_vec\n\n**payment_method_status_update.rs**\n  Modify existing code\n\n**scheduler.rs**\n  Modify existing code\n\n**kv_router_store.rs**\n  Add:\n    - function: private::new\n    - function: private::get_master_pool\n    - function: private::get_replica_pool\n    - function: private::get_accounts_master_pool\n    - function: private::get_accounts_replica_pool\n    - function: private::get_redis_conn\n    - function: pub::from_store\n    - function: pub::master_key\n    - function: pub::get_drainer_stream_name\n    - function: pub::push_to_drainer_stream\n    - function: pub::find_resource_by_id\n    - function: pub::insert_resource\n    - function: pub::update_resource\n    - function: pub::filter_resources\n    - struct: pub::KVRouterStore\n    - struct: pub::InsertResourceParams\n    - struct: pub::UpdateResourceParams\n    - struct: pub::FilterResourceParams\n    - impl: impl DatabaseStore for KVRouterStore<T>\n    - impl: impl RedisConnInterface for KVRouterStore<T>\n    - impl: impl KVRouterStore<T>\n    - impl: impl PayoutAttemptInterface for KVRouterStore<T>\n    - impl: impl PayoutsInterface for KVRouterStore<T>\n\n**lib.rs**\n  Add:\n    - mod: pub::state\n\n**lookup.rs**\n  Modify existing code\n\n**mock_db.rs**\n  Add:\n    - function: pub::find_resource\n    - function: pub::find_resources\n    - function: pub::update_resource\n\n**payment_method.rs**\n  Remove:\n    - function: private::find_payment_method\n    - function: private::find_payment_method\n    - function: private::find_payment_method_by_locker_id\n    - function: private::get_payment_method_count_by_customer_id_merchant_id_status\n    - function: private::insert_payment_method\n    - function: private::insert_payment_method\n    - function: private::update_payment_method\n    - function: private::update_payment_method\n    - function: private::find_payment_method_by_customer_id_merchant_id_list\n    - function: private::find_payment_method_list_by_global_customer_id\n    - function: private::find_payment_method_by_customer_id_merchant_id_status\n    - function: private::find_payment_method_by_global_customer_id_merchant_id_status\n    - function: private::delete_payment_method_by_merchant_id_payment_method_id\n    - function: private::delete_payment_method\n    - function: private::find_payment_method_by_fingerprint_id\n    - function: private::find_payment_method\n    - function: private::find_payment_method\n    - function: private::find_payment_method_by_locker_id\n    - function: private::get_payment_method_count_by_customer_id_merchant_id_status\n    - function: private::insert_payment_method\n    - function: private::update_payment_method\n    - function: private::update_payment_method\n    - function: private::find_payment_method_by_customer_id_merchant_id_list\n    - function: private::find_payment_method_list_by_global_customer_id\n    - function: private::find_payment_method_by_customer_id_merchant_id_status\n    - function: private::find_payment_method_by_global_customer_id_merchant_id_status\n    - function: private::delete_payment_method_by_merchant_id_payment_method_id\n    - function: private::delete_payment_method\n    - function: private::find_payment_method_by_fingerprint_id\n    - function: private::find_payment_method\n    - function: private::find_payment_method\n    - function: private::find_payment_method_by_locker_id\n    - function: private::get_payment_method_count_by_customer_id_merchant_id_status\n    - function: private::insert_payment_method\n    - function: private::find_payment_method_by_customer_id_merchant_id_list\n    - function: private::find_payment_method_list_by_global_customer_id\n    - function: private::find_payment_method_by_customer_id_merchant_id_status\n    - function: private::find_payment_method_by_global_customer_id_merchant_id_status\n    - function: private::delete_payment_method_by_merchant_id_payment_method_id\n    - function: private::update_payment_method\n    - function: private::delete_payment_method\n    - function: private::find_payment_method_by_fingerprint_id\n    - trait: pub::PaymentMethodInterface\n    - impl: impl PaymentMethodInterface for Store\n    - impl: impl PaymentMethodInterface for Store\n    - impl: impl PaymentMethodInterface for MockDb\n    - mod: private::storage\n    - mod: private::storage\n\n**payment_attempt.rs**\n  Modify existing code\n\n**payment_intent.rs**\n  Modify existing code\n\n**payout_attempt.rs**\n  Modify existing code\n\n**payouts.rs**\n  Modify existing code\n\n**kv_store.rs**\n  Modify existing code\n\n**utils.rs**\n  Add:\n    - function: private::union_vec\n    - function: pub::find_all_combined_kv_database"}
