{"prompt": "feat(router): [worldpayvantiv] add dispute list sync and implement dispute (#8830)\n\nCo-authored-by: hyperswitch-bot[bot] <148525504+hyperswitch-bot[bot]@users.noreply.github.com>\nCo-authored-by: Jagan <jaganelavarasan@gmail.com>", "response": "Files to modify:\n\n\n**admin.rs**\n  Modify existing code\n\n**disputes.rs**\n  Add:\n    - struct: pub::DisputeRetrieveRequest\n    - struct: pub::DisputeRetrieveBody\n\n**dispute.rs**\n  Add:\n    - function: private::get_api_event_type\n    - impl: impl ApiEventMetric for DisputeRetrieveRequest\n\n**files.rs**\n  Add:\n    - struct: pub::FileRetrieveQuery\n\n**webhooks.rs**\n  Modify existing code\n\n**connector_enums.rs**\n  Modify existing code\n\n**enums.rs**\n  Modify existing code\n\n**consts.rs**\n  Modify existing code\n\n**primitive_wrappers.rs**\n  Add:\n    - function: private::deref\n    - function: private::deserialize\n    - function: private::from_sql\n    - function: private::to_sql\n    - function: private::default\n    - struct: pub::DisputePollingIntervalInHours\n    - impl: impl Deref for DisputePollingIntervalInHours\n    - impl: impl Deserialize<'de> for DisputePollingIntervalInHours\n    - impl: impl diesel::deserialize::FromSql<diesel::sql_types::Integer, diesel::pg::Pg> for DisputePollingIntervalInHours\n    - impl: impl diesel::serialize::ToSql<diesel::sql_types::Integer, diesel::pg::Pg> for DisputePollingIntervalInHours\n    - impl: impl Default for DisputePollingIntervalInHours\n    - mod: private::u32_wrappers\n\n**business_profile.rs**\n  Modify existing code\n\n**schema.rs**\n  Modify existing code\n\n**schema_v2.rs**\n  Modify existing code\n\n**worldpayvantiv.rs**\n  Remove:\n    - function: private::handle_vantiv_json_error_response\n  Add:\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_url\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_url\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::handle_vantiv_json_error_response\n    - function: private::handle_vantiv_dispute_error_response\n    - function: private::validate_file_upload\n    - impl: impl Dispute for Worldpayvantiv\n    - impl: impl FetchDisputes for Worldpayvantiv\n    - impl: impl DisputeSync for Worldpayvantiv\n    - impl: impl SubmitEvidence for Worldpayvantiv\n    - impl: impl AcceptDispute for Worldpayvantiv\n    - impl: impl ConnectorIntegration<Fetch, FetchDisputesRequestData, FetchDisputesResponse> for Worldpayvantiv\n    - impl: impl ConnectorIntegration<Dsync, DisputeSyncData, DisputeSyncResponse> for Worldpayvantiv\n    - impl: impl ConnectorIntegration<Evidence, SubmitEvidenceRequestData, SubmitEvidenceResponse> for Worldpayvantiv\n    - impl: impl ConnectorIntegration<Accept, AcceptDisputeRequestData, AcceptDisputeResponse> for Worldpayvantiv\n    - impl: impl UploadFile for Worldpayvantiv\n    - impl: impl ConnectorIntegration<Upload, UploadFileRequestData, UploadFileResponse> for Worldpayvantiv\n    - impl: impl RetrieveFile for Worldpayvantiv\n    - impl: impl ConnectorIntegration<Retrieve, RetrieveFileRequestData, RetrieveFileResponse> for Worldpayvantiv\n    - impl: impl FileUpload for Worldpayvantiv\n\n**transformers.rs**\n  Add:\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::get_dispute_stage\n    - function: pub::get_dispute_status\n    - function: private::convert_string_to_primitive_date\n    - function: private::try_from\n    - function: private::from\n    - function: private::from\n    - function: private::is_file_uploaded\n    - function: private::try_from\n    - function: private::try_from\n    - struct: pub::VantivDisputeErrorResponse\n    - struct: pub::VantivDisputeErrors\n    - struct: pub::ChargebackRetrievalResponse\n    - struct: pub::ChargebackCase\n    - struct: pub::Activity\n    - struct: pub::ChargebackUpdateRequest\n    - struct: pub::ChargebackDocumentUploadResponse\n    - enum: pub::ActivityType\n    - enum: pub::WorldpayvantivFileUploadResponseCode\n    - impl: impl TryFrom<\nResponseRouterData<\nFetch,\nChargebackRetrievalResponse,\nFetchDisputesRequestData,\nFetchDisputesResponse,\n>,\n> for RouterData<Fetch, FetchDisputesRequestData, FetchDisputesResponse>\n    - impl: impl TryFrom<\nResponseRouterData<\nDsync,\nChargebackRetrievalResponse,\nDisputeSyncData,\nDisputeSyncResponse,\n>,\n> for RouterData<Dsync, DisputeSyncData, DisputeSyncResponse>\n    - impl: impl TryFrom<ChargebackCase> for DisputeSyncResponse\n    - impl: impl From<&SubmitEvidenceRouterData> for ChargebackUpdateRequest\n    - impl: impl From<&AcceptDisputeRouterData> for ChargebackUpdateRequest\n    - impl: impl TryFrom<\nResponseRouterData<\nUpload,\nChargebackDocumentUploadResponse,\nUploadFileRequestData,\nUploadFileResponse,\n>,\n> for RouterData<Upload, UploadFileRequestData, UploadFileResponse>\n    - impl: impl TryFrom<\nResponseRouterData<\nRetrieve,\nChargebackDocumentUploadResponse,\nRetrieveFileRequestData,\nRetrieveFileResponse,\n>,\n> for RouterData<Retrieve, RetrieveFileRequestData, RetrieveFileResponse>\n\n**default_implementations.rs**\n  Add:\n    - impl: impl FetchDisputes for connectors::DummyConnector<T>\n    - impl: impl ConnectorIntegration<Fetch, FetchDisputesRequestData, FetchDisputesResponse> for connectors::DummyConnector<T>\n    - impl: impl DisputeSync for connectors::DummyConnector<T>\n    - impl: impl ConnectorIntegration<Dsync, DisputeSyncData, DisputeSyncResponse> for connectors::DummyConnector<T>\n\n**default_implementations_v2.rs**\n  Remove:\n    - impl: impl SubmitEvidenceV2 for $connector\n  Add:\n    - impl: impl FetchDisputesV2 for $connector\n\n**types.rs**\n  Modify existing code\n\n**business_profile.rs**\n  Modify existing code\n\n**connector_endpoints.rs**\n  Modify existing code\n\n**merchant_connector_account.rs**\n  Add:\n    - function: pub::get_metadata\n\n**dispute.rs**\n  Add:\n    - function: private::get_api_event_type\n    - impl: impl ApiEventMetric for DisputeRetrieveRequest\n\n**router_request_types.rs**\n  Add:\n    - struct: pub::FetchDisputesRequestData\n    - struct: pub::DisputeSyncData\n\n**router_response_types.rs**\n  Modify existing code\n\n**disputes.rs**\n  Add:\n    - struct: pub::DisputeRetrieveRequest\n    - struct: pub::DisputeRetrieveBody\n\n**disputes.rs**\n  Add:\n    - struct: pub::DisputeRetrieveRequest\n    - struct: pub::DisputeRetrieveBody\n\n**disputes_v2.rs**\n  Modify existing code\n\n**disputes.rs**\n  Add:\n    - struct: pub::DisputeRetrieveRequest\n    - struct: pub::DisputeRetrieveBody\n\n**types.rs**\n  Modify existing code\n\n**disputes.rs**\n  Add:\n    - struct: pub::DisputeRetrieveRequest\n    - struct: pub::DisputeRetrieveBody\n\n**scheduler.rs**\n  Modify existing code\n\n**secrets_transformers.rs**\n  Modify existing code\n\n**settings.rs**\n  Add:\n    - struct: pub::ListDiputeSupportedConnectors\n\n**consts.rs**\n  Modify existing code\n\n**admin.rs**\n  Modify existing code\n\n**disputes.rs**\n  Add:\n    - struct: pub::DisputeRetrieveRequest\n    - struct: pub::DisputeRetrieveBody\n\n**transformers.rs**\n  Add:\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::get_dispute_stage\n    - function: pub::get_dispute_status\n    - function: private::convert_string_to_primitive_date\n    - function: private::try_from\n    - function: private::from\n    - function: private::from\n    - function: private::is_file_uploaded\n    - function: private::try_from\n    - function: private::try_from\n    - struct: pub::VantivDisputeErrorResponse\n    - struct: pub::VantivDisputeErrors\n    - struct: pub::ChargebackRetrievalResponse\n    - struct: pub::ChargebackCase\n    - struct: pub::Activity\n    - struct: pub::ChargebackUpdateRequest\n    - struct: pub::ChargebackDocumentUploadResponse\n    - enum: pub::ActivityType\n    - enum: pub::WorldpayvantivFileUploadResponseCode\n    - impl: impl TryFrom<\nResponseRouterData<\nFetch,\nChargebackRetrievalResponse,\nFetchDisputesRequestData,\nFetchDisputesResponse,\n>,\n> for RouterData<Fetch, FetchDisputesRequestData, FetchDisputesResponse>\n    - impl: impl TryFrom<\nResponseRouterData<\nDsync,\nChargebackRetrievalResponse,\nDisputeSyncData,\nDisputeSyncResponse,\n>,\n> for RouterData<Dsync, DisputeSyncData, DisputeSyncResponse>\n    - impl: impl TryFrom<ChargebackCase> for DisputeSyncResponse\n    - impl: impl From<&SubmitEvidenceRouterData> for ChargebackUpdateRequest\n    - impl: impl From<&AcceptDisputeRouterData> for ChargebackUpdateRequest\n    - impl: impl TryFrom<\nResponseRouterData<\nUpload,\nChargebackDocumentUploadResponse,\nUploadFileRequestData,\nUploadFileResponse,\n>,\n> for RouterData<Upload, UploadFileRequestData, UploadFileResponse>\n    - impl: impl TryFrom<\nResponseRouterData<\nRetrieve,\nChargebackDocumentUploadResponse,\nRetrieveFileRequestData,\nRetrieveFileResponse,\n>,\n> for RouterData<Retrieve, RetrieveFileRequestData, RetrieveFileResponse>\n\n**utils.rs**\n  Add:\n    - function: private::to_files_failed_response\n\n**files.rs**\n  Add:\n    - struct: pub::FileRetrieveQuery\n\n**helpers.rs**\n  Modify existing code\n\n**utils.rs**\n  Add:\n    - function: private::to_files_failed_response\n\n**webhooks.rs**\n  Modify existing code\n\n**incoming.rs**\n  Modify existing code\n\n**events.rs**\n  Modify existing code\n\n**api_logs.rs**\n  Modify existing code\n\n**app.rs**\n  Modify existing code\n\n**disputes.rs**\n  Add:\n    - struct: pub::DisputeRetrieveRequest\n    - struct: pub::DisputeRetrieveBody\n\n**files.rs**\n  Add:\n    - struct: pub::FileRetrieveQuery\n\n**types.rs**\n  Modify existing code\n\n**admin.rs**\n  Modify existing code\n\n**disputes.rs**\n  Add:\n    - struct: pub::DisputeRetrieveRequest\n    - struct: pub::DisputeRetrieveBody\n\n**disputes_v2.rs**\n  Modify existing code\n\n**files.rs**\n  Add:\n    - struct: pub::FileRetrieveQuery\n\n**domain.rs**\n  Add:\n    - mod: private::payment_attempt\n\n**workflows.rs**\n  Add:\n    - mod: pub::process_dispute\n    - mod: pub::dispute_list\n\n**dispute_list.rs**\n  Add:\n    - function: private::execute_workflow\n    - function: private::execute_workflow\n    - function: private::error_handler\n    - function: pub::get_sync_process_schedule_time\n    - function: pub::retry_sync_task\n    - function: pub::schedule_next_dispute_list_task\n    - struct: pub::DisputeListWorkflow\n    - impl: impl ProcessTrackerWorkflow<SessionState> for DisputeListWorkflow\n\n**outgoing_webhook_retry.rs**\n  Modify existing code\n\n**process_dispute.rs**\n  Add:\n    - function: private::execute_workflow\n    - function: private::execute_workflow\n    - function: private::error_handler\n    - function: pub::get_sync_process_schedule_time\n    - function: pub::retry_sync_task\n    - struct: pub::ProcessDisputeWorkflow\n    - impl: impl ProcessTrackerWorkflow<SessionState> for ProcessDisputeWorkflow\n\n**utils.rs**\n  Add:\n    - function: private::to_files_failed_response"}
