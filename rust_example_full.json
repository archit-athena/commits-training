{
  "repo": "juspay/hyperswitch",
  "instance_id": "juspay__hyperswitch-9642",
  "problem_statement": "Bug: [FEAT]: [Customer] Add search support to Customer API by Customer_ID\n\n\n\n### Feature Description\n\nCurrently, the Customer List API (/api/customers/list?limit=20&offset=0) does not support search functionality, which forces the dashboard to display customers without the ability to search dynamically.\n\nWe want to enhance this API to support search across multiple fields so that users can quickly locate a customer.\nSupported fields for full text match:\n\ncustomer_id: \"cust_abcdefgh\"\n\nname: \"venu\"\n\nemail: \"venu.b@juspay.in\"\n\nphone: \"+91234567890\"\n\n\n### Possible Implementation\n\nAdd a search bar in the Dashboard UI for the Customer List page.\n\nThe search bar should allow merchants to search using customer_id (partial or full match).\n\nPass the search query to the backend API via query parameter, for example:\n``` bash\nGET: /api/customers/list?limit=20&offset=0&customer_id=cus_12345\n```\n\n### Have you spent some time checking if this feature request has been raised before?\n\n- [x] I checked and didn't find a similar issue\n\n### Have you read the Contributing Guidelines?\n\n- [x] I have read the [Contributing Guidelines](https://github.com/juspay/hyperswitch/blob/main/docs/CONTRIBUTING.md)\n\n### Are you willing to submit a PR?\n\nNone",
  "patch": "diff --git a/crates/api_models/src/customers.rs b/crates/api_models/src/customers.rs\nindex 19016e292a8..62fd000ddb8 100644\n--- a/crates/api_models/src/customers.rs\n+++ b/crates/api_models/src/customers.rs\n@@ -52,6 +52,8 @@ pub struct CustomerListRequest {\n     /// Limit\n     #[schema(example = 32)]\n     pub limit: Option<u16>,\n+    /// Unique identifier for a customer\n+    pub customer_id: Option<id_type::CustomerId>,\n }\n \n #[cfg(feature = \"v1\")]\ndiff --git a/crates/diesel_models/src/query/customers.rs b/crates/diesel_models/src/query/customers.rs\nindex def8d77fe7a..a6121d408c2 100644\n--- a/crates/diesel_models/src/query/customers.rs\n+++ b/crates/diesel_models/src/query/customers.rs\n@@ -20,6 +20,7 @@ impl CustomerNew {\n pub struct CustomerListConstraints {\n     pub limit: i64,\n     pub offset: Option<i64>,\n+    pub customer_id: Option<id_type::CustomerId>,\n }\n \n impl Customer {\n@@ -54,19 +55,66 @@ impl Customer {\n         generics::generic_find_by_id::<<Self as HasTable>::Table, _, _>(conn, id.to_owned()).await\n     }\n \n+    #[cfg(feature = \"v1\")]\n     pub async fn list_by_merchant_id(\n         conn: &PgPooledConn,\n         merchant_id: &id_type::MerchantId,\n         constraints: CustomerListConstraints,\n     ) -> StorageResult<Vec<Self>> {\n-        generics::generic_filter::<<Self as HasTable>::Table, _, _, _>(\n-            conn,\n-            dsl::merchant_id.eq(merchant_id.to_owned()),\n-            Some(constraints.limit),\n-            constraints.offset,\n-            Some(dsl::created_at),\n-        )\n-        .await\n+        if let Some(customer_id) = constraints.customer_id {\n+            let predicate = dsl::merchant_id\n+                .eq(merchant_id.clone())\n+                .and(dsl::customer_id.eq(customer_id));\n+            generics::generic_filter::<<Self as HasTable>::Table, _, _, Self>(\n+                conn,\n+                predicate,\n+                Some(constraints.limit),\n+                constraints.offset,\n+                Some(dsl::created_at),\n+            )\n+            .await\n+        } else {\n+            let predicate = dsl::merchant_id.eq(merchant_id.clone());\n+            generics::generic_filter::<<Self as HasTable>::Table, _, _, Self>(\n+                conn,\n+                predicate,\n+                Some(constraints.limit),\n+                constraints.offset,\n+                Some(dsl::created_at),\n+            )\n+            .await\n+        }\n+    }\n+\n+    #[cfg(feature = \"v2\")]\n+    pub async fn list_by_merchant_id(\n+        conn: &PgPooledConn,\n+        merchant_id: &id_type::MerchantId,\n+        constraints: CustomerListConstraints,\n+    ) -> StorageResult<Vec<Self>> {\n+        if let Some(customer_id) = constraints.customer_id {\n+            let predicate = dsl::merchant_id\n+                .eq(merchant_id.clone())\n+                .and(dsl::merchant_reference_id.eq(customer_id));\n+            generics::generic_filter::<<Self as HasTable>::Table, _, _, Self>(\n+                conn,\n+                predicate,\n+                Some(constraints.limit),\n+                constraints.offset,\n+                Some(dsl::created_at),\n+            )\n+            .await\n+        } else {\n+            let predicate = dsl::merchant_id.eq(merchant_id.clone());\n+            generics::generic_filter::<<Self as HasTable>::Table, _, _, Self>(\n+                conn,\n+                predicate,\n+                Some(constraints.limit),\n+                constraints.offset,\n+                Some(dsl::created_at),\n+            )\n+            .await\n+        }\n     }\n \n     #[cfg(feature = \"v2\")]\ndiff --git a/crates/hyperswitch_domain_models/src/customer.rs b/crates/hyperswitch_domain_models/src/customer.rs\nindex 5a88cb6cd48..720296cdcac 100644\n--- a/crates/hyperswitch_domain_models/src/customer.rs\n+++ b/crates/hyperswitch_domain_models/src/customer.rs\n@@ -538,6 +538,7 @@ impl From<CustomerUpdate> for CustomerUpdateInternal {\n pub struct CustomerListConstraints {\n     pub limit: u16,\n     pub offset: Option<u32>,\n+    pub customer_id: Option<id_type::CustomerId>,\n }\n \n impl From<CustomerListConstraints> for query::CustomerListConstraints {\n@@ -545,6 +546,7 @@ impl From<CustomerListConstraints> for query::CustomerListConstraints {\n         Self {\n             limit: i64::from(value.limit),\n             offset: value.offset.map(i64::from),\n+            customer_id: value.customer_id,\n         }\n     }\n }\ndiff --git a/crates/router/src/core/customers.rs b/crates/router/src/core/customers.rs\nindex ffc44781037..09f12d62ba0 100644\n--- a/crates/router/src/core/customers.rs\n+++ b/crates/router/src/core/customers.rs\n@@ -590,6 +590,7 @@ pub async fn list_customers(\n             .limit\n             .unwrap_or(crate::consts::DEFAULT_LIST_API_LIMIT),\n         offset: request.offset,\n+        customer_id: request.customer_id,\n     };\n \n     let domain_customers = db\ndiff --git a/crates/router/src/core/locker_migration.rs b/crates/router/src/core/locker_migration.rs\nindex e2680666e4d..bea3ff4e58e 100644\n--- a/crates/router/src/core/locker_migration.rs\n+++ b/crates/router/src/core/locker_migration.rs\n@@ -54,6 +54,7 @@ pub async fn rust_locker_migration(\n     let constraints = CustomerListConstraints {\n         limit: u16::MAX,\n         offset: None,\n+        customer_id: None,\n     };\n \n     let domain_customers = db\n",
  "test_patch": "",
  "created_at": "2025-09-30T08:46:02Z",
  "hints_text": "## Type of Change\r\n<!-- Put an `x` in the boxes that apply -->\r\n\r\n- [ ] Bugfix\r\n- [x] New feature\r\n- [x] Enhancement\r\n- [ ] Refactoring\r\n- [ ] Dependency updates\r\n- [ ] Documentation\r\n- [ ] CI/CD\r\n\r\n## Description\r\n<!-- Describe your changes in detail -->\r\n\r\nThis PR introduces improvements to the **Customer page API**:\r\n\r\nAdded **search bar functionality** to filter customers by `customer_id`.\r\n\r\nThese changes enhance API usability and improve performance when handling large customer datasets.\r\n\r\n### Additional Changes\r\n\r\n- [ ] This PR modifies the API contract\r\n- [ ] This PR modifies the database schema\r\n- [ ] This PR modifies application configuration/environment variables\r\n\r\n<!--\r\nProvide links to the files with corresponding changes.\r\n\r\nFollowing are the paths where you can find config files:\r\n1. `config`\r\n2. `crates/router/src/configs`\r\n3. `loadtest/config`\r\n-->\r\n\r\n## Motivation and Context\r\n<!--\r\nWhy is this change required? What problem does it solve?\r\nIf it fixes an open issue, please link to the issue here.\r\n\r\nIf you don't have an issue, we'd recommend starting with one first so the PR\r\ncan focus on the implementation (unless it is an obvious bug or documentation fix\r\nthat will have little conversation).\r\n-->\r\n- Search functionality allows **direct lookup by `customer_id`**, making customer retrieval faster and more user-friendly.\r\n\r\n## How did you test it?\r\n<!--\r\nDid you write an integration/unit/API test to verify the code changes?\r\nOr did you test this change manually (provide relevant screenshots)?\r\n-->\r\nExecuted the following API call to fetch the list of roles:\r\nBefore: No search bar for the searching Items.\r\n```bash\r\ncurl --location 'http://localhost:8080/customers/list?limit=50&offset=0' \\\r\n--header 'Accept: application/json' \\\r\n--header 'api-key: <YOUR_API_KEY>' \\\r\n--header 'Content-Type: application/json' \\\r\n--data-binary '@'\r\n\r\n```\r\n\r\nResponse:\r\n\r\n```json\r\n[\r\n    {\r\n        \"customer_id\": \"cus_123\",\r\n        \"name\": \"John Doe\",\r\n        \"email\": \"guest@example.com\",\r\n        \"phone\": \"999999999\",\r\n        \"phone_country_code\": \"+65\",\r\n        \"description\": \"First customer\",\r\n        \"address\": null,\r\n        \"created_at\": \"2025-09-24T08:05:42.489Z\",\r\n        \"metadata\": {\r\n            \"udf1\": \"value1\",\r\n            \"new_customer\": \"true\",\r\n            \"login_date\": \"2019-09-10T10:11:12Z\"\r\n        },\r\n        \"default_payment_method_id\": null,\r\n        \"tax_registration_id\": null\r\n    },\r\n    {\r\n        \"customer_id\": \"cus_124\",\r\n        \"name\": \"Venu Doe\",\r\n        \"email\": \"guest@example.com\",\r\n        \"phone\": \"999999999\",\r\n        \"phone_country_code\": \"+65\",\r\n        \"description\": \"First customer\",\r\n        \"address\": null,\r\n        \"created_at\": \"2025-09-24T09:34:15.146Z\",\r\n        \"metadata\": {\r\n            \"udf1\": \"value1\",\r\n            \"new_customer\": \"true\",\r\n            \"login_date\": \"2019-09-10T10:11:12Z\"\r\n        },\r\n        \"default_payment_method_id\": null,\r\n        \"tax_registration_id\": null\r\n    },\r\n    {\r\n        \"customer_id\": \"cus_125\",\r\n        \"name\": \"Venu Madhav\",\r\n        \"email\": \"guest123@example.com\",\r\n        \"phone\": \"999999999\",\r\n        \"phone_country_code\": \"+65\",\r\n        \"description\": \"First customer\",\r\n        \"address\": null,\r\n        \"created_at\": \"2025-09-24T09:34:23.527Z\",\r\n        \"metadata\": {\r\n            \"udf1\": \"value1\",\r\n            \"new_customer\": \"true\",\r\n            \"login_date\": \"2019-09-10T10:11:12Z\"\r\n        },\r\n        \"default_payment_method_id\": null,\r\n        \"tax_registration_id\": null\r\n    },\r\n    {\r\n        \"customer_id\": \"cus_126\",\r\n        \"name\": \"Bandarupalli\",\r\n        \"email\": \"guest1@example.com\",\r\n        \"phone\": \"999999999\",\r\n        \"phone_country_code\": \"+65\",\r\n        \"description\": \"First customer\",\r\n        \"address\": null,\r\n        \"created_at\": \"2025-09-24T09:34:39.328Z\",\r\n        \"metadata\": {\r\n            \"udf1\": \"value1\",\r\n            \"new_customer\": \"true\",\r\n            \"login_date\": \"2019-09-10T10:11:12Z\"\r\n        },\r\n        \"default_payment_method_id\": null,\r\n        \"tax_registration_id\": null\r\n    },\r\n    {\r\n        \"customer_id\": \"cus_127\",\r\n        \"name\": \"venu 2\",\r\n        \"email\": \"guest1@example.com\",\r\n        \"phone\": \"999999999\",\r\n        \"phone_country_code\": \"+65\",\r\n        \"description\": \"First customer\",\r\n        \"address\": null,\r\n        \"created_at\": \"2025-09-24T09:35:06.393Z\",\r\n        \"metadata\": {\r\n            \"udf1\": \"value1\",\r\n            \"new_customer\": \"true\",\r\n            \"login_date\": \"2019-09-10T10:11:12Z\"\r\n        },\r\n        \"default_payment_method_id\": null,\r\n        \"tax_registration_id\": null\r\n    },\r\n    {\r\n        \"customer_id\": \"cus_128\",\r\n        \"name\": \"venu 3\",\r\n        \"email\": \"guest2@example.com\",\r\n        \"phone\": \"999999999\",\r\n        \"phone_country_code\": \"+65\",\r\n        \"description\": \"First customer\",\r\n        \"address\": null,\r\n        \"created_at\": \"2025-09-24T09:35:15.853Z\",\r\n        \"metadata\": {\r\n            \"udf1\": \"value1\",\r\n            \"new_customer\": \"true\",\r\n            \"login_date\": \"2019-09-10T10:11:12Z\"\r\n        },\r\n        \"default_payment_method_id\": null,\r\n        \"tax_registration_id\": null\r\n    },\r\n    {\r\n        \"customer_id\": \"cus_129\",\r\n        \"name\": \"venu 4\",\r\n        \"email\": \"guest3@example.com\",\r\n        \"phone\": \"999999999\",\r\n        \"phone_country_code\": \"+65\",\r\n        \"description\": \"First customer\",\r\n        \"address\": null,\r\n        \"created_at\": \"2025-09-24T09:35:21.549Z\",\r\n        \"metadata\": {\r\n            \"udf1\": \"value1\",\r\n            \"new_customer\": \"true\",\r\n            \"login_date\": \"2019-09-10T10:11:12Z\"\r\n        },\r\n        \"default_payment_method_id\": null,\r\n        \"tax_registration_id\": null\r\n    },\r\n    {\r\n        \"customer_id\": \"cus_129\",\r\n        \"name\": \"venu 5\",\r\n        \"email\": \"guest4@example.com\",\r\n        \"phone\": \"999999999\",\r\n        \"phone_country_code\": \"+65\",\r\n        \"description\": \"First customer\",\r\n        \"address\": null,\r\n        \"created_at\": \"2025-09-24T09:35:27.178Z\",\r\n        \"metadata\": {\r\n            \"udf1\": \"value1\",\r\n            \"new_customer\": \"true\",\r\n            \"login_date\": \"2019-09-10T10:11:12Z\"\r\n        },\r\n        \"default_payment_method_id\": null,\r\n        \"tax_registration_id\": null\r\n    },\r\n    {\r\n        \"customer_id\": \"cus_130\",\r\n        \"name\": \"venu 6\",\r\n        \"email\": \"guest6@example.com\",\r\n        \"phone\": \"999999999\",\r\n        \"phone_country_code\": \"+65\",\r\n        \"description\": \"First customer\",\r\n        \"address\": null,\r\n        \"created_at\": \"2025-09-24T09:35:51.674Z\",\r\n        \"metadata\": {\r\n            \"udf1\": \"value1\",\r\n            \"new_customer\": \"true\",\r\n            \"login_date\": \"2019-09-10T10:11:12Z\"\r\n        },\r\n        \"default_payment_method_id\": null,\r\n        \"tax_registration_id\": null\r\n    },\r\n    {\r\n        \"customer_id\": \"cus_131\",\r\n        \"name\": \"venu 7\",\r\n        \"email\": \"guest7@example.com\",\r\n        \"phone\": \"999999999\",\r\n        \"phone_country_code\": \"+65\",\r\n        \"description\": \"First customer\",\r\n        \"address\": null,\r\n        \"created_at\": \"2025-09-24T09:35:56.948Z\",\r\n        \"metadata\": {\r\n            \"udf1\": \"value1\",\r\n            \"new_customer\": \"true\",\r\n            \"login_date\": \"2019-09-10T10:11:12Z\"\r\n        },\r\n        \"default_payment_method_id\": null,\r\n        \"tax_registration_id\": null\r\n    },\r\n    {\r\n        \"customer_id\": \"cus_132\",\r\n        \"name\": \"venu 8\",\r\n        \"email\": \"guest8@example.com\",\r\n        \"phone\": \"999999999\",\r\n        \"phone_country_code\": \"+65\",\r\n        \"description\": \"First customer\",\r\n        \"address\": null,\r\n        \"created_at\": \"2025-09-24T09:36:03.017Z\",\r\n        \"metadata\": {\r\n            \"udf1\": \"value1\",\r\n            \"new_customer\": \"true\",\r\n            \"login_date\": \"2019-09-10T10:11:12Z\"\r\n        },\r\n        \"default_payment_method_id\": null,\r\n        \"tax_registration_id\": null\r\n    },\r\n    {\r\n        \"customer_id\": \"cus_133\",\r\n        \"name\": \"venu 9\",\r\n        \"email\": \"guest9@example.com\",\r\n        \"phone\": \"999999999\",\r\n        \"phone_country_code\": \"+65\",\r\n        \"description\": \"First customer\",\r\n        \"address\": null,\r\n        \"created_at\": \"2025-09-24T09:36:08.331Z\",\r\n        \"metadata\": {\r\n            \"udf1\": \"value1\",\r\n            \"new_customer\": \"true\",\r\n            \"login_date\": \"2019-09-10T10:11:12Z\"\r\n        },\r\n        \"default_payment_method_id\": null,\r\n        \"tax_registration_id\": null\r\n    },\r\n    {\r\n        \"customer_id\": \"cus_134\",\r\n        \"name\": null,\r\n        \"email\": \"guest@example.com\",\r\n        \"phone\": null,\r\n        \"phone_country_code\": null,\r\n        \"description\": null,\r\n        \"address\": null,\r\n        \"created_at\": \"2025-09-24T10:29:03.242Z\",\r\n        \"metadata\": null,\r\n        \"default_payment_method_id\": null,\r\n        \"tax_registration_id\": null\r\n    },\r\n    {\r\n        \"customer_id\": \"cus_135\",\r\n        \"name\": \"John Doe\",\r\n        \"email\": \"customer@gmail.com\",\r\n        \"phone\": \"9999999999\",\r\n        \"phone_country_code\": \"+1\",\r\n        \"description\": null,\r\n        \"address\": null,\r\n        \"created_at\": \"2025-09-24T10:30:14.808Z\",\r\n        \"metadata\": null,\r\n        \"default_payment_method_id\": \"pm_wQqUQeEP9YgJCLpa8NkG\",\r\n        \"tax_registration_id\": null\r\n    },\r\n    {\r\n        \"customer_id\": \"cus_136\",\r\n        \"name\": \"John Doe\",\r\n        \"email\": \"customer@gmail.com\",\r\n        \"phone\": \"9999999999\",\r\n        \"phone_country_code\": \"+1234\",\r\n        \"description\": null,\r\n        \"address\": null,\r\n        \"created_at\": \"2025-09-24T13:49:24.111Z\",\r\n        \"metadata\": null,\r\n        \"default_payment_method_id\": null,\r\n        \"tax_registration_id\": null\r\n    },\r\n    {\r\n        \"customer_id\": \"cus_137\",\r\n        \"name\": \"venu 10\",\r\n        \"email\": \"guest@example.com\",\r\n        \"phone\": \"999999999\",\r\n        \"phone_country_code\": \"+65\",\r\n        \"description\": \"First customer\",\r\n        \"address\": null,\r\n        \"created_at\": \"2025-09-25T13:25:45.670Z\",\r\n        \"metadata\": {\r\n            \"udf1\": \"value1\",\r\n            \"new_customer\": \"true\",\r\n            \"login_date\": \"2019-09-10T10:11:12Z\"\r\n        },\r\n        \"default_payment_method_id\": null,\r\n        \"tax_registration_id\": null\r\n    },\r\n    {\r\n        \"customer_id\": \"cus_138\",\r\n        \"name\": null,\r\n        \"email\": \"guest@example.com\",\r\n        \"phone\": null,\r\n        \"phone_country_code\": null,\r\n        \"description\": null,\r\n        \"address\": null,\r\n        \"created_at\": \"2025-09-25T13:39:37.242Z\",\r\n        \"metadata\": null,\r\n        \"default_payment_method_id\": null,\r\n        \"tax_registration_id\": null\r\n    },\r\n    {\r\n        \"customer_id\": \"cus_139\",\r\n        \"name\": null,\r\n        \"email\": \"guest@example.com\",\r\n        \"phone\": null,\r\n        \"phone_country_code\": null,\r\n        \"description\": null,\r\n        \"address\": null,\r\n        \"created_at\": \"2025-09-25T13:39:54.772Z\",\r\n        \"metadata\": null,\r\n        \"default_payment_method_id\": null,\r\n        \"tax_registration_id\": null\r\n    },\r\n    {\r\n        \"customer_id\": \"cus_140\",\r\n        \"name\": null,\r\n        \"email\": \"guest@example.com\",\r\n        \"phone\": null,\r\n        \"phone_country_code\": null,\r\n        \"description\": null,\r\n        \"address\": null,\r\n        \"created_at\": \"2025-09-25T13:42:24.499Z\",\r\n        \"metadata\": null,\r\n        \"default_payment_method_id\": null,\r\n        \"tax_registration_id\": null\r\n    }\r\n]\r\n```\r\n\r\nAfter adding the customer_id search feature\r\n```bash\r\ncurl --location 'http://localhost:8080/customers/list?limit=50&offset=0&customer_id=cus_123' \\\r\n--header 'Accept: application/json' \\\r\n--header 'api-key: <YOUR_API_KEY>' \\\r\n--header 'Content-Type: application/json' \\\r\n--data-binary '@'\r\n\r\n```\r\n\r\nResponse\r\n\r\n```json\r\n[\r\n    {\r\n        \"customer_id\": \"cus_123\",\r\n        \"name\": \"John Doe\",\r\n        \"email\": \"guest@example.com\",\r\n        \"phone\": \"999999999\",\r\n        \"phone_country_code\": \"+65\",\r\n        \"description\": \"First customer\",\r\n        \"address\": null,\r\n        \"created_at\": \"2025-09-24T08:05:42.489Z\",\r\n        \"metadata\": {\r\n            \"udf1\": \"value1\",\r\n            \"new_customer\": \"true\",\r\n            \"login_date\": \"2019-09-10T10:11:12Z\"\r\n        },\r\n        \"default_payment_method_id\": null,\r\n        \"tax_registration_id\": null\r\n    }\r\n]\r\n```\r\n\r\n## Checklist\r\n<!-- Put an `x` in the boxes that apply -->\r\n\r\n- [x] I formatted the code `cargo +nightly fmt --all`\r\n- [x] I addressed lints thrown by `cargo clippy`\r\n- [x] I reviewed the submitted code\r\n- [x] I added unit tests for my changes where possible\r\n",
  "base_commit": "2d580b3afbca861028e010853dc33c75818c9288"
}