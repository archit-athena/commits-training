{"prompt": "feat(router): adding generic tokenization endpoint (#7905)\n\nCo-authored-by: hyperswitch-bot[bot] <148525504+hyperswitch-bot[bot]@users.noreply.github.com>", "response": "Files to modify:\n\n\n**events.rs**\n  Add:\n    - impl: impl ApiEventMetric for tokenization::GenericTokenizationRequest\n    - impl: impl ApiEventMetric for tokenization::GenericTokenizationResponse\n\n**lib.rs**\n  Add:\n    - mod: pub::tokenization\n\n**payment_methods.rs**\n  Modify existing code\n\n**tokenization.rs**\n  Add:\n    - struct: pub::GenericTokenizationResponse\n    - struct: pub::GenericTokenizationRequest\n\n**enums.rs**\n  Add:\n    - enum: pub::TokenizationFlag\n\n**consts.rs**\n  Modify existing code\n\n**events.rs**\n  Add:\n    - impl: impl ApiEventMetric for tokenization::GenericTokenizationRequest\n    - impl: impl ApiEventMetric for tokenization::GenericTokenizationResponse\n\n**id_type.rs**\n  Modify existing code\n\n**global_id.rs**\n  Add:\n    - mod: pub::token\n\n**token.rs**\n  Add:\n    - function: pub::get_string_repr\n    - function: pub::generate\n    - function: private::get_api_event_type\n    - impl: impl GlobalTokenId\n    - impl: impl crate::events::ApiEventMetric for GlobalTokenId\n\n**lib.rs**\n  Add:\n    - mod: pub::tokenization\n\n**tokenization.rs**\n  Add:\n    - struct: pub::GenericTokenizationResponse\n    - struct: pub::GenericTokenizationRequest\n\n**enums.rs**\n  Add:\n    - enum: pub::TokenizationFlag\n\n**lib.rs**\n  Add:\n    - mod: pub::tokenization\n\n**mod.rs**\n  Add:\n    - mod: pub::tokenization\n\n**payment_methods_session.rs**\n  Modify existing code\n\n**query.rs**\n  Add:\n    - mod: pub::tokenization\n\n**tokenization.rs**\n  Add:\n    - struct: pub::GenericTokenizationResponse\n    - struct: pub::GenericTokenizationRequest\n\n**schema_v2.rs**\n  Modify existing code\n\n**tokenization.rs**\n  Add:\n    - struct: pub::GenericTokenizationResponse\n    - struct: pub::GenericTokenizationRequest\n\n**types.rs**\n  Modify existing code\n\n**lib.rs**\n  Add:\n    - mod: pub::tokenization\n\n**payment_methods.rs**\n  Modify existing code\n\n**tokenization.rs**\n  Add:\n    - struct: pub::GenericTokenizationResponse\n    - struct: pub::GenericTokenizationRequest\n\n**lib.rs**\n  Add:\n    - mod: pub::tokenization\n\n**secret.rs**\n  Add:\n    - function: private::fmt\n    - function: private::test_json_mask_strategy\n    - enum: pub::JsonMaskStrategy\n    - impl: impl Strategy<serde_json::Value> for JsonMaskStrategy\n    - mod: private::tests\n\n**openapi_v2.rs**\n  Modify existing code\n\n**routes.rs**\n  Add:\n    - mod: pub::tokenization\n\n**tokenization.rs**\n  Add:\n    - struct: pub::GenericTokenizationResponse\n    - struct: pub::GenericTokenizationRequest\n\n**core.rs**\n  Add:\n    - mod: pub::tokenization\n\n**payment_methods.rs**\n  Modify existing code\n\n**transformers.rs**\n  Modify existing code\n\n**vault.rs**\n  Add:\n    - function: pub::retrive_value_from_vault\n\n**tokenization.rs**\n  Add:\n    - struct: pub::GenericTokenizationResponse\n    - struct: pub::GenericTokenizationRequest\n\n**db.rs**\n  Modify existing code\n\n**kafka_store.rs**\n  Add:\n    - function: private::insert_tokenization\n    - function: private::get_entity_id_vault_id_by_token_id\n    - impl: impl TokenizationInterface for KafkaStore\n    - impl: impl TokenizationInterface for KafkaStore\n\n**lib.rs**\n  Add:\n    - mod: pub::tokenization\n\n**routes.rs**\n  Add:\n    - mod: pub::tokenization\n\n**app.rs**\n  Add:\n    - function: pub::server\n    - struct: pub::Tokenization\n    - impl: impl Tokenization\n\n**lock_utils.rs**\n  Modify existing code\n\n**tokenization.rs**\n  Add:\n    - struct: pub::GenericTokenizationResponse\n    - struct: pub::GenericTokenizationRequest\n\n**payment_methods.rs**\n  Modify existing code\n\n**types.rs**\n  Modify existing code\n\n**lib.rs**\n  Add:\n    - mod: pub::tokenization\n\n**mock_db.rs**\n  Modify existing code\n\n**tokenization.rs**\n  Add:\n    - struct: pub::GenericTokenizationResponse\n    - struct: pub::GenericTokenizationRequest"}
