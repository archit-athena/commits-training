{"prompt": "feat(core): Add support for process tracker retrieve api in v2 (#7602)\n\nCo-authored-by: hyperswitch-bot[bot] <148525504+hyperswitch-bot[bot]@users.noreply.github.com>", "response": "Files to modify:\n\n\n**events.rs**\n  Add:\n    - mod: pub::revenue_recovery\n\n**revenue_recovery.rs**\n  Add:\n    - function: private::get_api_event_type\n    - function: private::get_api_event_type\n    - impl: impl ApiEventMetric for RevenueRecoveryResponse\n    - impl: impl ApiEventMetric for RevenueRecoveryId\n\n**lib.rs**\n  Add:\n    - mod: pub::process_tracker\n\n**process_tracker.rs**\n  Add:\n    - mod: pub::revenue_recovery\n\n**revenue_recovery.rs**\n  Add:\n    - function: private::get_api_event_type\n    - function: private::get_api_event_type\n    - impl: impl ApiEventMetric for RevenueRecoveryResponse\n    - impl: impl ApiEventMetric for RevenueRecoveryId\n\n**enums.rs**\n  Add:\n    - enum: pub::ProcessTrackerStatus\n    - enum: pub::ProcessTrackerRunner\n\n**events.rs**\n  Add:\n    - mod: pub::revenue_recovery\n\n**payment.rs**\n  Add:\n    - function: pub::get_execute_revenue_recovery_id\n    - function: pub::get_psync_revenue_recovery_id\n\n**enums.rs**\n  Add:\n    - enum: pub::ProcessTrackerStatus\n    - enum: pub::ProcessTrackerRunner\n\n**process_tracker.rs**\n  Add:\n    - mod: pub::revenue_recovery\n\n**openapi_v2.rs**\n  Modify existing code\n\n**routes.rs**\n  Add:\n    - mod: pub::revenue_recovery\n\n**revenue_recovery.rs**\n  Add:\n    - function: private::get_api_event_type\n    - function: private::get_api_event_type\n    - impl: impl ApiEventMetric for RevenueRecoveryResponse\n    - impl: impl ApiEventMetric for RevenueRecoveryId\n\n**scheduler.rs**\n  Modify existing code\n\n**core.rs**\n  Remove:\n    - mod: pub::passive_churn_recovery\n  Add:\n    - mod: pub::revenue_recovery\n\n**revenue_recovery.rs**\n  Add:\n    - function: private::get_api_event_type\n    - function: private::get_api_event_type\n    - impl: impl ApiEventMetric for RevenueRecoveryResponse\n    - impl: impl ApiEventMetric for RevenueRecoveryId\n\n**transformers.rs**\n  Modify existing code\n\n**types.rs**\n  Modify existing code\n\n**recovery_incoming.rs**\n  Modify existing code\n\n**lib.rs**\n  Add:\n    - mod: pub::process_tracker\n\n**routes.rs**\n  Add:\n    - mod: pub::revenue_recovery\n\n**app.rs**\n  Add:\n    - function: pub::server\n    - struct: pub::ProcessTracker\n    - impl: impl ProcessTracker\n\n**lock_utils.rs**\n  Modify existing code\n\n**process_tracker.rs**\n  Add:\n    - mod: pub::revenue_recovery\n\n**revenue_recovery.rs**\n  Add:\n    - function: private::get_api_event_type\n    - function: private::get_api_event_type\n    - impl: impl ApiEventMetric for RevenueRecoveryResponse\n    - impl: impl ApiEventMetric for RevenueRecoveryId\n\n**permission_groups.rs**\n  Modify existing code\n\n**permissions.rs**\n  Modify existing code\n\n**storage.rs**\n  Remove:\n    - mod: pub::passive_churn_recovery\n  Add:\n    - mod: pub::revenue_recovery\n\n**revenue_recovery.rs**\n  Add:\n    - function: private::get_api_event_type\n    - function: private::get_api_event_type\n    - impl: impl ApiEventMetric for RevenueRecoveryResponse\n    - impl: impl ApiEventMetric for RevenueRecoveryId\n\n**workflows.rs**\n  Remove:\n    - mod: pub::passive_churn_recovery_workflow\n  Add:\n    - mod: pub::revenue_recovery\n\n**revenue_recovery.rs**\n  Add:\n    - function: private::get_api_event_type\n    - function: private::get_api_event_type\n    - impl: impl ApiEventMetric for RevenueRecoveryResponse\n    - impl: impl ApiEventMetric for RevenueRecoveryId\n\n**types.rs**\n  Modify existing code"}
