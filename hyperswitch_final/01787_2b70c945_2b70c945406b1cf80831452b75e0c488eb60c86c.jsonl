{"prompt": "feat(connector): [Recurly] Add record back support for recurly [V2] (#7544)\n\nCo-authored-by: Aniket Burman <aniket.burman@192.168.1.4>\nCo-authored-by: hyperswitch-bot[bot] <148525504+hyperswitch-bot[bot]@users.noreply.github.com>\nCo-authored-by: Aniket Burman <aniket.burman@192.168.1.5>", "response": "Files to modify:\n\n\n**recurly.rs**\n  Add:\n    - function: private::get_headers\n    - function: private::get_url\n    - function: private::get_content_type\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - impl: impl api::revenue_recovery::RevenueRecoveryRecordBack for Recurly\n    - impl: impl ConnectorIntegration<\nRecoveryRecordBack,\nRevenueRecoveryRecordBackRequest,\nRevenueRecoveryRecordBackResponse,\n> for Recurly\n\n**transformers.rs**\n  Add:\n    - function: private::try_from\n    - function: private::try_from\n    - struct: pub::RecurlyRecordbackResponse\n    - enum: pub::RecurlyRecordStatus\n    - impl: impl TryFrom<enums::AttemptStatus> for RecurlyRecordStatus\n    - impl: impl TryFrom<\nResponseRouterData<\nRecoveryRecordBack,\nRecurlyRecordbackResponse,\nRevenueRecoveryRecordBackRequest,\nRevenueRecoveryRecordBackResponse,\n>,\n> for RevenueRecoveryRecordBackRouterData\n\n**default_implementations.rs**\n  Modify existing code"}
