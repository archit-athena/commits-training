{"prompt": "Add a base struct for api error responses (#524)\n\nCo-authored-by: Sanchith Hegde <22217505+SanchithHegde@users.noreply.github.com>", "response": "Files to modify:\n\n\n**actix.rs**\n  Add:\n    - function: private::status_code\n    - function: private::error_response\n    - impl: impl actix_web::ResponseError for ApiErrorResponse\n\n**mod.rs**\n  Add:\n    - mod: pub::actix\n    - mod: pub::serde\n    - mod: pub::types\n\n**serde.rs**\n  Add:\n    - function: private::serialize\n    - impl: impl Serialize for ApiErrorResponse\n\n**types.rs**\n  Add:\n    - function: private::fmt\n    - function: pub::get_internal_error\n    - function: pub::error_type\n    - struct: pub::ApiError\n    - enum: pub::ErrorType\n    - enum: pub::ApiErrorResponse\n    - impl: impl ::core::fmt::Display for ApiErrorResponse\n    - impl: impl ApiErrorResponse\n\n**lib.rs**\n  Add:\n    - mod: pub::errors\n\n**errors.rs**\n  Add:\n    - function: private::switch\n    - trait: pub::ReportSwitchExt\n    - trait: pub::ErrorSwitch\n    - impl: impl ReportSwitchExt<T, U> for Result<T, error_stack::Report<V>>"}
