{"prompt": "feat(storage_impl): split payment intent interface implementation (#1946)", "response": "Files to modify:\n\n\n**payments.rs**\n  Modify existing code\n\n**errors.rs**\n  Add:\n    - enum: pub::StorageError\n\n**lib.rs**\n  Add:\n    - enum: pub::MerchantStorageScheme\n    - mod: pub::errors\n    - mod: pub::mandates\n    - mod: pub::payments\n\n**mandates.rs**\n  Add:\n    - struct: pub::MandateAmountData\n    - enum: pub::MandateDataType\n\n**payments.rs**\n  Modify existing code\n\n**payment_attempt.rs**\n  Add:\n    - struct: pub::PaymentAttempt\n    - struct: pub::PaymentListFilters\n    - struct: pub::PaymentAttemptNew\n    - enum: pub::PaymentAttemptUpdate\n    - trait: pub::PaymentAttemptInterface\n\n**payment_intent.rs**\n  Add:\n    - function: pub::apply_changeset\n    - function: private::from\n    - function: private::from\n    - function: private::from\n    - function: private::from\n    - struct: pub::PaymentIntent\n    - struct: pub::PaymentIntentNew\n    - struct: pub::PaymentIntentUpdateInternal\n    - enum: pub::PaymentIntentUpdate\n    - enum: pub::PaymentIntentFetchConstraints\n    - trait: pub::PaymentIntentInterface\n    - impl: impl PaymentIntentUpdate\n    - impl: impl From<PaymentIntentUpdate> for PaymentIntentUpdateInternal\n    - impl: impl From<api_models::payments::PaymentListConstraints> for PaymentIntentFetchConstraints\n    - impl: impl From<api_models::payments::TimeRange> for PaymentIntentFetchConstraints\n    - impl: impl From<api_models::payments::PaymentListFilterConstraints> for PaymentIntentFetchConstraints\n\n**zen.rs**\n  Modify existing code\n\n**admin.rs**\n  Modify existing code\n\n**errors.rs**\n  Add:\n    - enum: pub::StorageError\n\n**utils.rs**\n  Add:\n    - function: private::to_not_found_response\n    - function: private::to_duplicate_response\n    - impl: impl StorageErrorExt<T, errors::ApiErrorResponse> for error_stack::Result<T, data_models::errors::StorageError>\n\n**payments.rs**\n  Modify existing code\n\n**helpers.rs**\n  Modify existing code\n\n**operations.rs**\n  Modify existing code\n\n**payment_complete_authorize.rs**\n  Modify existing code\n\n**payment_confirm.rs**\n  Modify existing code\n\n**payment_create.rs**\n  Modify existing code\n\n**payment_method_validate.rs**\n  Modify existing code\n\n**payment_session.rs**\n  Modify existing code\n\n**payment_start.rs**\n  Modify existing code\n\n**payment_status.rs**\n  Modify existing code\n\n**payment_update.rs**\n  Modify existing code\n\n**db.rs**\n  Modify existing code\n\n**payment_attempt.rs**\n  Add:\n    - struct: pub::PaymentAttempt\n    - struct: pub::PaymentListFilters\n    - struct: pub::PaymentAttemptNew\n    - enum: pub::PaymentAttemptUpdate\n    - trait: pub::PaymentAttemptInterface\n\n**payment_intent.rs**\n  Add:\n    - function: pub::apply_changeset\n    - function: private::from\n    - function: private::from\n    - function: private::from\n    - function: private::from\n    - struct: pub::PaymentIntent\n    - struct: pub::PaymentIntentNew\n    - struct: pub::PaymentIntentUpdateInternal\n    - enum: pub::PaymentIntentUpdate\n    - enum: pub::PaymentIntentFetchConstraints\n    - trait: pub::PaymentIntentInterface\n    - impl: impl PaymentIntentUpdate\n    - impl: impl From<PaymentIntentUpdate> for PaymentIntentUpdateInternal\n    - impl: impl From<api_models::payments::PaymentListConstraints> for PaymentIntentFetchConstraints\n    - impl: impl From<api_models::payments::TimeRange> for PaymentIntentFetchConstraints\n    - impl: impl From<api_models::payments::PaymentListFilterConstraints> for PaymentIntentFetchConstraints\n\n**merchant_account.rs**\n  Modify existing code\n\n**storage.rs**\n  Remove:\n    - mod: pub::payment_intent\n\n**enums.rs**\n  Modify existing code\n\n**payment_intent.rs**\n  Add:\n    - function: pub::apply_changeset\n    - function: private::from\n    - function: private::from\n    - function: private::from\n    - function: private::from\n    - struct: pub::PaymentIntent\n    - struct: pub::PaymentIntentNew\n    - struct: pub::PaymentIntentUpdateInternal\n    - enum: pub::PaymentIntentUpdate\n    - enum: pub::PaymentIntentFetchConstraints\n    - trait: pub::PaymentIntentInterface\n    - impl: impl PaymentIntentUpdate\n    - impl: impl From<PaymentIntentUpdate> for PaymentIntentUpdateInternal\n    - impl: impl From<api_models::payments::PaymentListConstraints> for PaymentIntentFetchConstraints\n    - impl: impl From<api_models::payments::TimeRange> for PaymentIntentFetchConstraints\n    - impl: impl From<api_models::payments::PaymentListFilterConstraints> for PaymentIntentFetchConstraints\n\n**db_utils.rs**\n  Modify existing code\n\n**store.rs**\n  Remove:\n    - trait: pub::DatabaseStore\n  Add:\n    - trait: pub::DatabaseStore\n\n**lib.rs**\n  Add:\n    - enum: pub::MerchantStorageScheme\n    - mod: pub::errors\n    - mod: pub::mandates\n    - mod: pub::payments\n\n**metrics.rs**\n  Modify existing code\n\n**payments.rs**\n  Modify existing code\n\n**payment_attempt.rs**\n  Add:\n    - struct: pub::PaymentAttempt\n    - struct: pub::PaymentListFilters\n    - struct: pub::PaymentAttemptNew\n    - enum: pub::PaymentAttemptUpdate\n    - trait: pub::PaymentAttemptInterface\n\n**payment_intent.rs**\n  Add:\n    - function: pub::apply_changeset\n    - function: private::from\n    - function: private::from\n    - function: private::from\n    - function: private::from\n    - struct: pub::PaymentIntent\n    - struct: pub::PaymentIntentNew\n    - struct: pub::PaymentIntentUpdateInternal\n    - enum: pub::PaymentIntentUpdate\n    - enum: pub::PaymentIntentFetchConstraints\n    - trait: pub::PaymentIntentInterface\n    - impl: impl PaymentIntentUpdate\n    - impl: impl From<PaymentIntentUpdate> for PaymentIntentUpdateInternal\n    - impl: impl From<api_models::payments::PaymentListConstraints> for PaymentIntentFetchConstraints\n    - impl: impl From<api_models::payments::TimeRange> for PaymentIntentFetchConstraints\n    - impl: impl From<api_models::payments::PaymentListFilterConstraints> for PaymentIntentFetchConstraints\n\n**utils.rs**\n  Add:\n    - function: private::to_not_found_response\n    - function: private::to_duplicate_response\n    - impl: impl StorageErrorExt<T, errors::ApiErrorResponse> for error_stack::Result<T, data_models::errors::StorageError>"}
