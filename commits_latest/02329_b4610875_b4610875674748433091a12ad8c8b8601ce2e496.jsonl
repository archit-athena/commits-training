{"prompt": "refactor(connector): [NMI,PAYONE,RISKIFIED] moved to hyperswitch_connectors (#7666)", "response": "Files to modify:\n\n\n**connectors.rs**\n  Add:\n    - mod: pub::nmi\n    - mod: pub::payone\n    - mod: pub::riskified\n\n**nmi.rs**\n  Modify existing code\n\n**transformers.rs**\n  Modify existing code\n\n**payone.rs**\n  Remove:\n    - impl: impl api::Payment for Payone\n    - impl: impl api::PaymentSession for Payone\n    - impl: impl api::ConnectorAccessToken for Payone\n    - impl: impl api::MandateSetup for Payone\n    - impl: impl api::PaymentAuthorize for Payone\n    - impl: impl api::PaymentSync for Payone\n    - impl: impl api::PaymentCapture for Payone\n    - impl: impl api::PaymentVoid for Payone\n    - impl: impl api::Refund for Payone\n    - impl: impl api::RefundExecute for Payone\n    - impl: impl api::RefundSync for Payone\n    - impl: impl api::PaymentToken for Payone\n    - impl: impl ConnectorIntegration<\napi::PaymentMethodToken,\ntypes::PaymentMethodTokenizationData,\ntypes::PaymentsResponseData,\n> for CustomResult<Vec<(String, request::Maskable<String>)>, errors::ConnectorError>\n  Add:\n    - impl: impl Payment for Payone\n    - impl: impl PaymentSession for Payone\n    - impl: impl ConnectorAccessToken for Payone\n    - impl: impl MandateSetup for Payone\n    - impl: impl PaymentAuthorize for Payone\n    - impl: impl PaymentSync for Payone\n    - impl: impl PaymentCapture for Payone\n    - impl: impl PaymentVoid for Payone\n    - impl: impl Refund for Payone\n    - impl: impl RefundExecute for Payone\n    - impl: impl RefundSync for Payone\n    - impl: impl PaymentToken for Payone\n    - impl: impl ConnectorIntegration<PaymentMethodToken, PaymentMethodTokenizationData, PaymentsResponseData> for CustomResult<Vec<(String, Maskable<String>)>, ConnectorError>\n    - impl: impl ConnectorIntegration<Session, PaymentsSessionData, PaymentsResponseData> for Payone\n    - impl: impl ConnectorIntegration<AccessTokenAuth, AccessTokenRequestData, AccessToken> for Payone\n    - impl: impl ConnectorIntegration<SetupMandate, SetupMandateRequestData, PaymentsResponseData> for Payone\n    - impl: impl ConnectorIntegration<Authorize, PaymentsAuthorizeData, PaymentsResponseData> for Payone\n    - impl: impl ConnectorIntegration<PSync, PaymentsSyncData, PaymentsResponseData> for Payone\n    - impl: impl ConnectorIntegration<Capture, PaymentsCaptureData, PaymentsResponseData> for Payone\n    - impl: impl ConnectorIntegration<Void, PaymentsCancelData, PaymentsResponseData> for Payone\n    - impl: impl ConnectorIntegration<Execute, RefundsData, RefundsResponseData> for Payone\n    - impl: impl ConnectorIntegration<RSync, RefundsData, RefundsResponseData> for Payone\n    - impl: impl Payouts for Payone\n    - impl: impl PayoutFulfill for Payone\n    - impl: impl ConnectorIntegration<PoFulfill, PayoutsData, PayoutsResponseData> for (ConnectorError::FailedToObtainAuthType)\n\n**transformers.rs**\n  Modify existing code\n\n**riskified.rs**\n  Remove:\n    - impl: impl api::Refund for Riskified\n    - impl: impl api::RefundExecute for Riskified\n    - impl: impl api::RefundSync for Riskified\n    - impl: impl ConnectorIntegration<\nfrm_api::Sale,\nfrm_types::FraudCheckSaleData,\nfrm_types::FraudCheckResponseData,\n> for Riskified\n    - impl: impl ConnectorIntegration<\nfrm_api::RecordReturn,\nfrm_types::FraudCheckRecordReturnData,\nfrm_types::FraudCheckResponseData,\n> for Riskified\n    - impl: impl ConnectorIntegration<\napi::PaymentMethodToken,\ntypes::PaymentMethodTokenizationData,\ntypes::PaymentsResponseData,\n> for impl ConnectorIntegration<api::AccessTokenAuth, types::AccessTokenRequestData, types::AccessToken>\n    - impl: impl ConnectorIntegration<\napi::SetupMandate,\ntypes::SetupMandateRequestData,\ntypes::PaymentsResponseData,\n> for (\nerrors::ConnectorError::NotImplemented(\"Setup Mandate flow for Riskified\".to_string())\n.into(),\n)\n    - impl: impl api::PaymentSession for Riskified\n    - impl: impl ConnectorIntegration<api::Session, types::PaymentsSessionData, types::PaymentsResponseData> for Riskified\n    - impl: impl ConnectorIntegration<api::Capture, types::PaymentsCaptureData, types::PaymentsResponseData> for Riskified\n    - impl: impl ConnectorIntegration<api::PSync, types::PaymentsSyncData, types::PaymentsResponseData> for Riskified\n    - impl: impl ConnectorIntegration<api::Authorize, types::PaymentsAuthorizeData, types::PaymentsResponseData> for Riskified\n    - impl: impl ConnectorIntegration<api::Void, types::PaymentsCancelData, types::PaymentsResponseData> for Riskified\n    - impl: impl ConnectorIntegration<api::Execute, types::RefundsData, types::RefundsResponseData> for Riskified\n    - impl: impl ConnectorIntegration<api::RSync, types::RefundsData, types::RefundsResponseData> for Riskified\n    - impl: impl api::FraudCheck for Riskified\n    - impl: impl frm_api::FraudCheckSale for Riskified\n    - impl: impl frm_api::FraudCheckCheckout for Riskified\n    - impl: impl frm_api::FraudCheckTransaction for Riskified\n    - impl: impl frm_api::FraudCheckFulfillment for Riskified\n    - impl: impl frm_api::FraudCheckRecordReturn for Riskified\n    - impl: impl api::IncomingWebhook for (errors::ConnectorError::WebhookSourceVerificationFailed)\n  Add:\n    - impl: impl Payment for Riskified\n    - impl: impl PaymentAuthorize for Riskified\n    - impl: impl PaymentSync for Riskified\n    - impl: impl PaymentVoid for Riskified\n    - impl: impl PaymentCapture for Riskified\n    - impl: impl MandateSetup for Riskified\n    - impl: impl ConnectorAccessToken for Riskified\n    - impl: impl PaymentToken for Riskified\n    - impl: impl Refund for Riskified\n    - impl: impl RefundExecute for Riskified\n    - impl: impl RefundSync for Riskified\n    - impl: impl ConnectorIntegration<Sale, FraudCheckSaleData, FraudCheckResponseData> for Riskified\n    - impl: impl ConnectorIntegration<RecordReturn, FraudCheckRecordReturnData, FraudCheckResponseData> for impl ConnectorIntegration<PaymentMethodToken, PaymentMethodTokenizationData, PaymentsResponseData>\n    - impl: impl ConnectorIntegration<AccessTokenAuth, AccessTokenRequestData, AccessToken> for Riskified\n    - impl: impl ConnectorIntegration<SetupMandate, SetupMandateRequestData, PaymentsResponseData> for (ConnectorError::NotImplemented(\"Setup Mandate flow for Riskified\".to_string()).into())\n    - impl: impl PaymentSession for Riskified\n    - impl: impl ConnectorIntegration<Session, PaymentsSessionData, PaymentsResponseData> for Riskified\n    - impl: impl ConnectorIntegration<Capture, PaymentsCaptureData, PaymentsResponseData> for Riskified\n    - impl: impl ConnectorIntegration<PSync, PaymentsSyncData, PaymentsResponseData> for Riskified\n    - impl: impl ConnectorIntegration<Authorize, PaymentsAuthorizeData, PaymentsResponseData> for Riskified\n    - impl: impl ConnectorIntegration<Void, PaymentsCancelData, PaymentsResponseData> for Riskified\n    - impl: impl ConnectorIntegration<Execute, RefundsData, RefundsResponseData> for Riskified\n    - impl: impl ConnectorIntegration<RSync, RefundsData, RefundsResponseData> for Riskified\n    - impl: impl FraudCheck for Riskified\n    - impl: impl FraudCheckSale for Riskified\n    - impl: impl FraudCheckCheckout for Riskified\n    - impl: impl FraudCheckTransaction for Riskified\n    - impl: impl FraudCheckFulfillment for Riskified\n    - impl: impl FraudCheckRecordReturn for Riskified\n    - impl: impl IncomingWebhook for (ConnectorError::WebhookSourceVerificationFailed)\n\n**transformers.rs**\n  Modify existing code\n\n**api.rs**\n  Modify existing code\n\n**auth.rs**\n  Add:\n    - function: private::try_from\n    - struct: pub::RiskifiedAuthType\n    - impl: impl TryFrom<&ConnectorAuthType> for RiskifiedAuthType\n\n**default_implementations.rs**\n  Modify existing code\n\n**default_implementations_v2.rs**\n  Modify existing code\n\n**types.rs**\n  Modify existing code\n\n**utils.rs**\n  Add:\n    - function: private::is_payment_successful\n    - function: private::get_order_details\n    - function: private::get_currency\n    - trait: pub::FrmTransactionRouterDataRequest\n    - trait: pub::FraudCheckCheckoutRequest\n    - trait: pub::FraudCheckTransactionRequest\n    - impl: impl FrmTransactionRouterDataRequest for FrmTransactionRouterData\n    - impl: impl FraudCheckCheckoutRequest for FraudCheckCheckoutData\n    - impl: impl FraudCheckTransactionRequest for FraudCheckTransactionData\n\n**connector.rs**\n  Remove:\n    - mod: pub::nmi\n    - mod: pub::payone\n    - mod: pub::riskified\n\n**auth.rs**\n  Add:\n    - function: private::try_from\n    - struct: pub::RiskifiedAuthType\n    - impl: impl TryFrom<&ConnectorAuthType> for RiskifiedAuthType\n\n**flows.rs**\n  Modify existing code\n\n**macros.rs**\n  Modify existing code"}
