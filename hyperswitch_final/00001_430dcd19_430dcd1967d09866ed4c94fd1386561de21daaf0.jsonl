{"prompt": "initial commit", "response": "Files to modify:\n\n\n**mod.rs**\n  Add:\n    - function: pub::make\n    - function: private::id\n    - function: private::common_get_content_type\n    - function: private::base_url\n    - function: private::get_auth_header\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_webhook_object_reference_id\n    - function: private::get_webhook_event_type\n    - function: private::get_webhook_resource_object\n    - impl: impl api::ConnectorCommon for project\n    - impl: impl api::Payment for project\n    - impl: impl api::PaymentAuthorize for project\n    - impl: impl services::ConnectorIntegration<\napi::Authorize,\ntypes::PaymentsRequestData,\ntypes::PaymentsResponseData,\n> for project\n    - impl: impl services::ConnectorIntegration<\napi::Execute,\ntypes::RefundsRequestData,\ntypes::RefundsResponseData,\n> for project\n    - impl: impl services::ConnectorIntegration<api::Sync, types::RefundsRequestData, types::RefundsResponseData> for project\n    - impl: impl api::IncomingWebhook for project\n    - mod: private::transformers\n\n**transformers.rs**\n  Add:\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::default\n    - function: private::from\n    - function: private::try_from\n    - function: private::default\n    - function: private::from\n    - enum: pub::RefundStatus\n    - impl: impl TryFrom<&types::PaymentsRouterData> for project\n    - impl: impl TryFrom<&types::ConnectorAuthType> for project\n    - impl: impl Default for project\n    - impl: impl From<{{project-name | downcase | pascal_case}}PaymentStatus> for enums::AttemptStatus\n    - impl: impl TryFrom<&types::RefundsRouterData> for project\n    - impl: impl Default for RefundStatus\n    - impl: impl From<self::RefundStatus> for enums::RefundStatus\n\n**abs.rs**\n  Add:\n    - function: private::peek_cloning\n    - function: private::peek_cloning\n    - function: private::expose\n    - trait: pub::PeekInterface\n    - trait: pub::PeekOptionInterface\n    - trait: pub::ExposeInterface\n    - impl: impl PeekOptionInterface<Option<S>> for Option<Secret<S, I>>\n    - impl: impl PeekOptionInterface<S> for Secret<S, I>\n    - impl: impl ExposeInterface<S> for Secret<S, I>\n\n**boxed.rs**\n  Add:\n    - impl: impl SerializableSecret for Box<S>\n\n**bytes.rs**\n  Add:\n    - function: pub::new\n    - function: private::peek\n    - function: private::fmt\n    - function: private::from\n    - function: private::drop\n    - function: private::deserialize\n    - function: private::expecting\n    - function: private::visit_bytes\n    - function: private::visit_seq\n    - struct: pub::SecretBytesMut\n    - struct: private::SecretBytesVisitor\n    - impl: impl SecretBytesMut\n    - impl: impl PeekInterface<BytesMut> for SecretBytesMut\n    - impl: impl fmt::Debug for SecretBytesMut\n    - impl: impl From<BytesMut> for SecretBytesMut\n    - impl: impl Drop for SecretBytesMut\n    - impl: impl Deserialize<'de> for SecretBytesMut\n    - impl: impl de::Visitor<'de> for SecretBytesVisitor\n\n**diesel.rs**\n  Add:\n    - function: private::as_expression\n    - function: private::as_expression\n    - function: private::to_sql\n    - function: private::from_sql\n    - function: private::as_expression\n    - function: private::build\n    - function: private::as_expression\n    - function: private::as_expression\n    - function: private::to_sql\n    - function: private::from_sql\n    - function: private::as_expression\n    - function: private::build\n    - impl: impl AsExpression<T> for &'expr Secret<S, I>\n    - impl: impl AsExpression<T> for &'expr2 &'expr Secret<S, I>\n    - impl: impl ToSql<T, DB> for Secret<S, I>\n    - impl: impl FromSql<T, DB> for Secret<S, I>\n    - impl: impl AsExpression<T> for Secret<S, I>\n    - impl: impl Queryable<ST, DB> for Secret<S, I>\n    - impl: impl AsExpression<T> for &'expr StrongSecret<S, I>\n    - impl: impl AsExpression<T> for &'expr2 &'expr StrongSecret<S, I>\n    - impl: impl ToSql<T, DB> for StrongSecret<S, I>\n    - impl: impl FromSql<T, DB> for StrongSecret<S, I>\n    - impl: impl AsExpression<T> for StrongSecret<S, I>\n    - impl: impl Queryable<ST, DB> for StrongSecret<S, I>\n\n**lib.rs**\n  Add:\n    - mod: private::strategy\n    - mod: private::abs\n    - mod: private::secret\n    - mod: private::strong_secret\n    - mod: private::boxed\n    - mod: private::bytes\n    - mod: private::string\n    - mod: private::vec\n    - mod: private::serde\n    - mod: pub::prelude\n    - mod: private::diesel\n\n**secret.rs**\n  Add:\n    - function: pub::new\n    - function: private::peek\n    - function: private::from\n    - function: private::clone\n    - function: private::eq\n    - function: private::fmt\n    - function: private::default\n    - struct: pub::Secret\n    - impl: impl Secret<S, I>\n    - impl: impl PeekInterface<S> for Secret<S, I>\n    - impl: impl From<S> for Secret<S, I>\n    - impl: impl Clone for Secret<S, I>\n    - impl: impl PartialEq for Secret<S, I>\n    - impl: impl Eq for Secret<S, I>\n    - impl: impl fmt::Debug for Secret<S, I>\n    - impl: impl Default for Secret<S, I>\n\n**serde.rs**\n  Add:\n    - function: private::deserialize\n    - function: private::serialize\n    - function: private::deserialize\n    - function: private::serialize\n    - trait: pub::SerializableSecret\n    - impl: impl SerializableSecret for serde_json::Value\n    - impl: impl Deserialize<'de> for Secret<T, I>\n    - impl: impl Serialize for Secret<T, I>\n    - impl: impl Deserialize<'de> for StrongSecret<T, I>\n    - impl: impl Serialize for StrongSecret<T, I>\n\n**strategy.rs**\n  Add:\n    - function: private::fmt\n    - function: private::fmt\n    - function: private::fmt\n    - struct: pub::WithType\n    - struct: pub::WithoutType\n    - struct: pub::NoMasking\n    - trait: pub::Strategy\n    - impl: impl Strategy<T> for WithType\n    - impl: impl Strategy<T> for WithoutType\n    - impl: impl Strategy<T> for NoMasking\n\n**string.rs**\n  Add:\n    - function: private::from_str\n    - function: private::from_str\n    - impl: impl SerializableSecret for String\n    - impl: impl FromStr for Secret<String, I>\n    - impl: impl FromStr for StrongSecret<String, I>\n\n**strong_secret.rs**\n  Add:\n    - function: pub::new\n    - function: private::peek\n    - function: private::from\n    - function: private::clone\n    - function: private::eq\n    - function: private::fmt\n    - function: private::fmt\n    - function: private::default\n    - function: private::drop\n    - struct: pub::StrongSecret\n    - impl: impl StrongSecret<S, I>\n    - impl: impl PeekInterface<S> for StrongSecret<S, I>\n    - impl: impl From<S> for StrongSecret<S, I>\n    - impl: impl Clone for StrongSecret<S, I>\n    - impl: impl PartialEq for StrongSecret<S, I>\n    - impl: impl Eq for StrongSecret<S, I>\n    - impl: impl fmt::Debug for StrongSecret<S, I>\n    - impl: impl fmt::Display for StrongSecret<S, I>\n    - impl: impl Default for StrongSecret<S, I>\n    - impl: impl Drop for StrongSecret<T, S>\n\n**vec.rs**\n  Add:\n    - impl: impl SerializableSecret for Vec<S>\n\n**basic.rs**\n  Add:\n    - function: private::basic\n    - function: private::zeroize\n    - function: private::without_serialize\n    - function: private::zeroize\n    - function: private::for_string\n    - struct: pub::AccountNumber\n    - struct: pub::Composite\n    - struct: pub::AccountNumber\n    - struct: pub::Composite\n    - struct: pub::Composite\n    - impl: impl ZeroizableSecret for AccountNumber\n    - impl: impl SerializableSecret for AccountNumber\n    - impl: impl ZeroizableSecret for AccountNumber\n\n**router.rs**\n  Add:\n    - function: private::main\n\n**scheduler.rs**\n  Add:\n    - function: private::main\n    - function: private::start_scheduler\n\n**compatibility.rs**\n  Add:\n    - mod: pub::stripe\n    - mod: pub::wrap\n\n**stripe.rs**\n  Add:\n    - function: pub::server\n    - struct: pub::StripeApis\n    - impl: impl StripeApis\n    - mod: private::app\n    - mod: private::customers\n    - mod: private::payment_intents\n    - mod: private::refunds\n    - mod: private::errors\n\n**app.rs**\n  Add:\n    - function: pub::server\n    - function: pub::server\n    - function: pub::server\n    - struct: pub::PaymentIntents\n    - struct: pub::Refunds\n    - struct: pub::Customers\n    - impl: impl PaymentIntents\n    - impl: impl Refunds\n    - impl: impl Customers\n\n**customers.rs**\n  Add:\n    - function: pub::customer_create\n    - function: pub::customer_retrieve\n    - function: pub::customer_update\n    - function: pub::customer_delete\n    - mod: private::types\n\n**types.rs**\n  Add:\n    - function: private::from\n    - function: private::from\n    - function: private::from\n    - function: private::from\n    - struct: pub::CustomerAddress\n    - struct: pub::CreateCustomerRequest\n    - struct: pub::CustomerUpdateRequest\n    - struct: pub::CreateCustomerResponse\n    - struct: pub::CustomerDeleteResponse\n    - impl: impl From<CreateCustomerRequest> for customers::CreateCustomerRequest\n    - impl: impl From<CustomerUpdateRequest> for customers::CustomerUpdateRequest\n    - impl: impl From<customers::CustomerResponse> for CreateCustomerResponse\n    - impl: impl From<customers::CustomerDeleteResponse> for CustomerDeleteResponse\n\n**errors.rs**\n  Add:\n    - function: private::fmt\n    - function: private::from\n    - function: private::status_code\n    - function: private::error_response\n    - function: private::from\n    - enum: pub::ErrorCode\n    - enum: pub::StripeErrorType\n    - impl: impl ::core::fmt::Display for ErrorCode\n    - impl: impl From<ApiErrorResponse> for ErrorCode\n    - impl: impl actix_web::ResponseError for ErrorCode\n    - impl: impl From<serde_qs::Error> for ErrorCode\n\n**payment_intents.rs**\n  Add:\n    - function: pub::payment_intents_create\n    - function: pub::payment_intents_retrieve\n    - function: pub::payment_intents_update\n    - function: pub::payment_intents_confirm\n    - function: pub::payment_intents_capture\n    - function: pub::payment_intents_cancel\n    - function: pub::payment_intent_list\n    - mod: private::types\n\n**types.rs**\n  Add:\n    - function: private::from\n    - function: private::from\n    - function: private::from\n    - function: private::from\n    - struct: pub::CustomerAddress\n    - struct: pub::CreateCustomerRequest\n    - struct: pub::CustomerUpdateRequest\n    - struct: pub::CreateCustomerResponse\n    - struct: pub::CustomerDeleteResponse\n    - impl: impl From<CreateCustomerRequest> for customers::CreateCustomerRequest\n    - impl: impl From<CustomerUpdateRequest> for customers::CustomerUpdateRequest\n    - impl: impl From<customers::CustomerResponse> for CreateCustomerResponse\n    - impl: impl From<customers::CustomerDeleteResponse> for CustomerDeleteResponse\n\n**refunds.rs**\n  Add:\n    - function: pub::refund_create\n    - function: pub::refund_retrieve\n    - function: pub::refund_update\n    - mod: private::types\n\n**types.rs**\n  Add:\n    - function: private::from\n    - function: private::from\n    - function: private::from\n    - function: private::from\n    - struct: pub::CustomerAddress\n    - struct: pub::CreateCustomerRequest\n    - struct: pub::CustomerUpdateRequest\n    - struct: pub::CreateCustomerResponse\n    - struct: pub::CustomerDeleteResponse\n    - impl: impl From<CreateCustomerRequest> for customers::CreateCustomerRequest\n    - impl: impl From<CustomerUpdateRequest> for customers::CustomerUpdateRequest\n    - impl: impl From<customers::CustomerResponse> for CreateCustomerResponse\n    - impl: impl From<customers::CustomerDeleteResponse> for CustomerDeleteResponse\n\n**wrap.rs**\n  Add:\n    - function: pub::compatibility_api_wrap\n\n**configs.rs**\n  Add:\n    - mod: pub::settings\n\n**settings.rs**\n  Add:\n    - function: pub::new\n    - function: pub::with_config_path\n    - struct: pub::CmdLineConf\n    - struct: pub::Settings\n    - struct: pub::Keys\n    - struct: pub::Locker\n    - struct: pub::Proxy\n    - struct: pub::Server\n    - struct: pub::Database\n    - struct: pub::Redis\n    - struct: pub::Connectors\n    - struct: pub::ConnectorParams\n    - struct: pub::SchedulerSettings\n    - struct: pub::ProducerSettings\n    - impl: impl Settings\n\n**connection.rs**\n  Add:\n    - function: private::on_acquire\n    - function: pub::redis_connection\n    - function: pub::make_pg_pool\n    - function: pub::pg_connection\n    - struct: private::TestTransaction\n    - impl: impl CustomizeConnection<PgPooledConn, ConnectionError> for TestTransaction\n\n**connector.rs**\n  Add:\n    - mod: pub::aci\n    - mod: pub::adyen\n    - mod: pub::authorizedotnet\n    - mod: pub::checkout\n    - mod: pub::stripe\n\n**aci.rs**\n  Add:\n    - function: private::id\n    - function: private::common_get_content_type\n    - function: private::base_url\n    - function: private::get_auth_header\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_webhook_object_reference_id\n    - function: private::get_webhook_event_type\n    - function: private::get_webhook_resource_object\n    - struct: pub::Aci\n    - impl: impl api::ConnectorCommon for Aci\n    - impl: impl api::Payment for Aci\n    - impl: impl api::PaymentAuthorize for Aci\n    - impl: impl api::PaymentSync for Aci\n    - impl: impl api::PaymentVoid for Aci\n    - impl: impl api::PaymentCapture for Aci\n    - impl: impl services::ConnectorIntegration<\napi::PCapture,\ntypes::PaymentsRequestCaptureData,\ntypes::PaymentsResponseData,\n> for Aci\n    - impl: impl services::ConnectorIntegration<\napi::PSync,\ntypes::PaymentsRequestSyncData,\ntypes::PaymentsResponseData,\n> for Aci\n    - impl: impl services::ConnectorIntegration<\napi::Authorize,\ntypes::PaymentsRequestData,\ntypes::PaymentsResponseData,\n> for Aci\n    - impl: impl services::ConnectorIntegration<\napi::Void,\ntypes::PaymentRequestCancelData,\ntypes::PaymentsResponseData,\n> for Aci\n    - impl: impl api::Refund for Aci\n    - impl: impl api::RefundExecute for Aci\n    - impl: impl api::RefundSync for Aci\n    - impl: impl services::ConnectorIntegration<\napi::Execute,\ntypes::RefundsRequestData,\ntypes::RefundsResponseData,\n> for Aci\n    - impl: impl services::ConnectorIntegration<\napi::RSync,\ntypes::RefundsRequestData,\ntypes::RefundsResponseData,\n> for Aci\n    - impl: impl api::IncomingWebhook for Aci\n    - impl: impl services::ConnectorRedirectResponse for Aci\n    - mod: private::result_codes\n    - mod: private::transformers\n\n**result_codes.rs**\n  Modify existing code\n\n**transformers.rs**\n  Add:\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::default\n    - function: private::from\n    - function: private::try_from\n    - function: private::default\n    - function: private::from\n    - enum: pub::RefundStatus\n    - impl: impl TryFrom<&types::PaymentsRouterData> for project\n    - impl: impl TryFrom<&types::ConnectorAuthType> for project\n    - impl: impl Default for project\n    - impl: impl From<{{project-name | downcase | pascal_case}}PaymentStatus> for enums::AttemptStatus\n    - impl: impl TryFrom<&types::RefundsRouterData> for project\n    - impl: impl Default for RefundStatus\n    - impl: impl From<self::RefundStatus> for enums::RefundStatus\n\n**adyen.rs**\n  Add:\n    - function: private::id\n    - function: private::get_auth_header\n    - function: private::base_url\n    - function: private::get_headers\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_webhook_object_from_body\n    - function: private::get_webhook_source_verification_algorithm\n    - function: private::get_webhook_source_verification_signature\n    - function: private::get_webhook_source_verification_message\n    - function: private::get_webhook_source_verification_merchant_secret\n    - function: private::get_webhook_object_reference_id\n    - function: private::get_webhook_event_type\n    - function: private::get_webhook_resource_object\n    - function: private::get_webhook_api_response\n    - struct: pub::Adyen\n    - impl: impl api::ConnectorCommon for Adyen\n    - impl: impl api::Payment for Adyen\n    - impl: impl api::PaymentAuthorize for Adyen\n    - impl: impl api::PaymentSync for Adyen\n    - impl: impl api::PaymentVoid for Adyen\n    - impl: impl api::PaymentCapture for Adyen\n    - impl: impl services::ConnectorIntegration<\napi::PCapture,\ntypes::PaymentsRequestCaptureData,\ntypes::PaymentsResponseData,\n> for Adyen\n    - impl: impl services::ConnectorIntegration<\napi::PSync,\ntypes::PaymentsRequestSyncData,\ntypes::PaymentsResponseData,\n> for Adyen\n    - impl: impl services::ConnectorIntegration<\napi::Authorize,\ntypes::PaymentsRequestData,\ntypes::PaymentsResponseData,\n> for Adyen\n    - impl: impl services::ConnectorIntegration<\napi::Void,\ntypes::PaymentRequestCancelData,\ntypes::PaymentsResponseData,\n> for Adyen\n    - impl: impl api::Refund for Adyen\n    - impl: impl api::RefundExecute for Adyen\n    - impl: impl api::RefundSync for Adyen\n    - impl: impl services::ConnectorIntegration<\napi::Execute,\ntypes::RefundsRequestData,\ntypes::RefundsResponseData,\n> for Adyen\n    - impl: impl services::ConnectorIntegration<\napi::RSync,\ntypes::RefundsRequestData,\ntypes::RefundsResponseData,\n> for Adyen\n    - impl: impl api::IncomingWebhook for Adyen\n    - impl: impl services::ConnectorRedirectResponse for Adyen\n    - mod: private::transformers\n\n**transformers.rs**\n  Add:\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::default\n    - function: private::from\n    - function: private::try_from\n    - function: private::default\n    - function: private::from\n    - enum: pub::RefundStatus\n    - impl: impl TryFrom<&types::PaymentsRouterData> for project\n    - impl: impl TryFrom<&types::ConnectorAuthType> for project\n    - impl: impl Default for project\n    - impl: impl From<{{project-name | downcase | pascal_case}}PaymentStatus> for enums::AttemptStatus\n    - impl: impl TryFrom<&types::RefundsRouterData> for project\n    - impl: impl Default for RefundStatus\n    - impl: impl From<self::RefundStatus> for enums::RefundStatus\n\n**authorizedotnet.rs**\n  Add:\n    - function: private::id\n    - function: private::common_get_content_type\n    - function: private::base_url\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_webhook_object_reference_id\n    - function: private::get_webhook_event_type\n    - function: private::get_webhook_resource_object\n    - struct: pub::Authorizedotnet\n    - impl: impl api::ConnectorCommon for Authorizedotnet\n    - impl: impl api::Payment for Authorizedotnet\n    - impl: impl api::PaymentAuthorize for Authorizedotnet\n    - impl: impl api::PaymentSync for Authorizedotnet\n    - impl: impl api::PaymentVoid for Authorizedotnet\n    - impl: impl api::PaymentCapture for Authorizedotnet\n    - impl: impl services::ConnectorIntegration<\napi::PCapture,\ntypes::PaymentsRequestCaptureData,\ntypes::PaymentsResponseData,\n> for Authorizedotnet\n    - impl: impl services::ConnectorIntegration<\napi::PSync,\ntypes::PaymentsRequestSyncData,\ntypes::PaymentsResponseData,\n> for Authorizedotnet\n    - impl: impl services::ConnectorIntegration<\napi::Authorize,\ntypes::PaymentsRequestData,\ntypes::PaymentsResponseData,\n> for Authorizedotnet\n    - impl: impl services::ConnectorIntegration<\napi::Void,\ntypes::PaymentRequestCancelData,\ntypes::PaymentsResponseData,\n> for Authorizedotnet\n    - impl: impl api::Refund for Authorizedotnet\n    - impl: impl api::RefundExecute for Authorizedotnet\n    - impl: impl api::RefundSync for Authorizedotnet\n    - impl: impl services::ConnectorIntegration<\napi::Execute,\ntypes::RefundsRequestData,\ntypes::RefundsResponseData,\n> for Authorizedotnet\n    - impl: impl services::ConnectorIntegration<\napi::RSync,\ntypes::RefundsRequestData,\ntypes::RefundsResponseData,\n> for Authorizedotnet\n    - impl: impl api::IncomingWebhook for Authorizedotnet\n    - impl: impl services::ConnectorRedirectResponse for Authorizedotnet\n    - mod: private::transformers\n\n**transformers.rs**\n  Add:\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::default\n    - function: private::from\n    - function: private::try_from\n    - function: private::default\n    - function: private::from\n    - enum: pub::RefundStatus\n    - impl: impl TryFrom<&types::PaymentsRouterData> for project\n    - impl: impl TryFrom<&types::ConnectorAuthType> for project\n    - impl: impl Default for project\n    - impl: impl From<{{project-name | downcase | pascal_case}}PaymentStatus> for enums::AttemptStatus\n    - impl: impl TryFrom<&types::RefundsRouterData> for project\n    - impl: impl Default for RefundStatus\n    - impl: impl From<self::RefundStatus> for enums::RefundStatus\n\n**checkout.rs**\n  Add:\n    - function: private::id\n    - function: private::common_get_content_type\n    - function: private::get_auth_header\n    - function: private::base_url\n    - function: private::get_headers\n    - function: private::get_url\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_url\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_webhook_object_reference_id\n    - function: private::get_webhook_event_type\n    - function: private::get_webhook_resource_object\n    - struct: pub::Checkout\n    - impl: impl api::ConnectorCommon for Checkout\n    - impl: impl api::Payment for Checkout\n    - impl: impl api::PaymentAuthorize for Checkout\n    - impl: impl api::PaymentSync for Checkout\n    - impl: impl api::PaymentVoid for Checkout\n    - impl: impl api::PaymentCapture for Checkout\n    - impl: impl services::ConnectorIntegration<\napi::PCapture,\ntypes::PaymentsRequestCaptureData,\ntypes::PaymentsResponseData,\n> for Checkout\n    - impl: impl services::ConnectorIntegration<\napi::PSync,\ntypes::PaymentsRequestSyncData,\ntypes::PaymentsResponseData,\n> for Checkout\n    - impl: impl services::ConnectorIntegration<\napi::Authorize,\ntypes::PaymentsRequestData,\ntypes::PaymentsResponseData,\n> for Checkout\n    - impl: impl services::ConnectorIntegration<\napi::Void,\ntypes::PaymentRequestCancelData,\ntypes::PaymentsResponseData,\n> for Checkout\n    - impl: impl api::Refund for Checkout\n    - impl: impl api::RefundExecute for Checkout\n    - impl: impl api::RefundSync for Checkout\n    - impl: impl services::ConnectorIntegration<\napi::Execute,\ntypes::RefundsRequestData,\ntypes::RefundsResponseData,\n> for Checkout\n    - impl: impl services::ConnectorIntegration<\napi::RSync,\ntypes::RefundsRequestData,\ntypes::RefundsResponseData,\n> for Checkout\n    - impl: impl api::IncomingWebhook for Checkout\n    - impl: impl services::ConnectorRedirectResponse for Checkout\n    - mod: private::transformers\n\n**transformers.rs**\n  Add:\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::default\n    - function: private::from\n    - function: private::try_from\n    - function: private::default\n    - function: private::from\n    - enum: pub::RefundStatus\n    - impl: impl TryFrom<&types::PaymentsRouterData> for project\n    - impl: impl TryFrom<&types::ConnectorAuthType> for project\n    - impl: impl Default for project\n    - impl: impl From<{{project-name | downcase | pascal_case}}PaymentStatus> for enums::AttemptStatus\n    - impl: impl TryFrom<&types::RefundsRouterData> for project\n    - impl: impl Default for RefundStatus\n    - impl: impl From<self::RefundStatus> for enums::RefundStatus\n\n**stripe.rs**\n  Add:\n    - function: pub::server\n    - struct: pub::StripeApis\n    - impl: impl StripeApis\n    - mod: private::app\n    - mod: private::customers\n    - mod: private::payment_intents\n    - mod: private::refunds\n    - mod: private::errors\n\n**transformers.rs**\n  Add:\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::default\n    - function: private::from\n    - function: private::try_from\n    - function: private::default\n    - function: private::from\n    - enum: pub::RefundStatus\n    - impl: impl TryFrom<&types::PaymentsRouterData> for project\n    - impl: impl TryFrom<&types::ConnectorAuthType> for project\n    - impl: impl Default for project\n    - impl: impl From<{{project-name | downcase | pascal_case}}PaymentStatus> for enums::AttemptStatus\n    - impl: impl TryFrom<&types::RefundsRouterData> for project\n    - impl: impl Default for RefundStatus\n    - impl: impl From<self::RefundStatus> for enums::RefundStatus\n\n**consts.rs**\n  Modify existing code\n\n**core.rs**\n  Add:\n    - mod: pub::admin\n    - mod: pub::customers\n    - mod: pub::errors\n    - mod: pub::mandate\n    - mod: pub::payment_methods\n    - mod: pub::payments\n    - mod: pub::refunds\n    - mod: pub::utils\n    - mod: pub::webhooks\n\n**admin.rs**\n  Add:\n    - function: private::create_merchant_api_key\n    - function: pub::create_merchant_account\n    - function: pub::get_merchant_account\n    - function: pub::merchant_account_update\n    - function: pub::merchant_account_delete\n    - function: private::get_parent_merchant\n    - function: private::validate_merchant_id\n    - function: pub::create_payment_connector\n    - function: pub::retrieve_payment_connector\n    - function: pub::update_payment_connector\n    - function: pub::delete_payment_connector\n\n**customers.rs**\n  Add:\n    - function: pub::customer_create\n    - function: pub::customer_retrieve\n    - function: pub::customer_update\n    - function: pub::customer_delete\n    - mod: private::types\n\n**errors.rs**\n  Add:\n    - function: private::fmt\n    - function: private::from\n    - function: private::status_code\n    - function: private::error_response\n    - function: private::from\n    - enum: pub::ErrorCode\n    - enum: pub::StripeErrorType\n    - impl: impl ::core::fmt::Display for ErrorCode\n    - impl: impl From<ApiErrorResponse> for ErrorCode\n    - impl: impl actix_web::ResponseError for ErrorCode\n    - impl: impl From<serde_qs::Error> for ErrorCode\n\n**api_error_response.rs**\n  Add:\n    - function: private::fmt\n    - function: private::status_code\n    - function: private::error_response\n    - enum: pub::ErrorType\n    - enum: pub::ApiErrorResponse\n    - impl: impl ::core::fmt::Display for ApiErrorResponse\n    - impl: impl actix_web::ResponseError for ApiErrorResponse\n\n**error_handlers.rs**\n  Add:\n    - function: pub::custom_error_handlers\n\n**utils.rs**\n  Add:\n    - function: private::to_not_found_response\n    - function: private::to_duplicate_response\n    - function: private::to_unsuccessful_processing_step_response\n    - function: private::to_refund_failed_response\n    - function: private::to_payment_failed_response\n    - trait: pub::StorageErrorExt\n    - trait: pub::ApiClientErrorExt\n    - trait: pub::ConnectorErrorExt\n    - impl: impl StorageErrorExt for error_stack::Report<super::StorageError>\n    - impl: impl ApiClientErrorExt for error_stack::Report<super::ApiClientError>\n    - impl: impl ConnectorErrorExt for error_stack::Report<super::ConnectorError>\n\n**mandate.rs**\n  Add:\n    - function: pub::get_mandate\n    - function: pub::revoke_mandate\n    - function: pub::get_customer_mandates\n\n**payment_methods.rs**\n  Add:\n    - mod: pub::cards\n    - mod: pub::transformers\n\n**cards.rs**\n  Add:\n    - function: pub::create_payment_method\n    - function: pub::add_payment_method\n    - function: pub::add_card\n    - function: pub::mock_add_card\n    - function: pub::mock_get_card\n    - function: pub::get_card\n    - function: pub::delete_card\n    - function: pub::list_payment_methods\n    - function: private::filter_payment_methods\n    - function: private::filter_accepted_enum_based\n    - function: private::filter_amount_based\n    - function: private::filter_recurring_based\n    - function: private::filter_installment_based\n    - function: pub::list_customer_payment_method\n    - function: pub::get_tempcard_from_payment_method\n    - function: pub::get_card_info_value\n    - function: pub::get_card_info_from_value\n    - function: pub::retrieve_payment_method\n    - function: pub::delete_payment_method\n\n**transformers.rs**\n  Add:\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::default\n    - function: private::from\n    - function: private::try_from\n    - function: private::default\n    - function: private::from\n    - enum: pub::RefundStatus\n    - impl: impl TryFrom<&types::PaymentsRouterData> for project\n    - impl: impl TryFrom<&types::ConnectorAuthType> for project\n    - impl: impl Default for project\n    - impl: impl From<{{project-name | downcase | pascal_case}}PaymentStatus> for enums::AttemptStatus\n    - impl: impl TryFrom<&types::RefundsRouterData> for project\n    - impl: impl Default for RefundStatus\n    - impl: impl From<self::RefundStatus> for enums::RefundStatus\n\n**payments.rs**\n  Add:\n    - function: pub::payments_operation_core\n    - function: pub::payments_core\n    - function: private::is_start_pay\n    - function: pub::handle_payments_redirect_response\n    - function: pub::payments_response_for_redirection_flows\n    - function: private::call_connector_service\n    - function: pub::if_not_create_change_operation\n    - function: pub::is_confirm\n    - function: pub::should_call_connector\n    - function: pub::list_payments\n    - function: pub::add_process_sync_task\n    - struct: pub::PaymentAddress\n    - struct: pub::PaymentData\n    - struct: pub::CustomerDetails\n    - enum: pub::CallConnectorAction\n    - mod: pub::flows\n    - mod: pub::helpers\n    - mod: pub::operations\n    - mod: pub::transformers\n\n**flows.rs**\n  Add:\n    - trait: pub::ConstructFlowSpecificData\n    - trait: pub::Feature\n    - mod: private::authorize_flow\n    - mod: private::cancel_flow\n    - mod: private::capture_flow\n    - mod: private::psync_flow\n\n**authorize_flow.rs**\n  Add:\n    - function: private::construct_r_d\n    - function: private::decide_flows\n    - function: pub::decide_flow\n    - function: private::generate_mandate\n    - impl: impl ConstructFlowSpecificData<\napi::Authorize,\ntypes::PaymentsRequestData,\ntypes::PaymentsResponseData,\n> for PaymentData<api::Authorize>\n    - impl: impl Feature<api::Authorize, types::PaymentsRequestData> for types::RouterData<api::Authorize, types::PaymentsRequestData, types::PaymentsResponseData>\n    - impl: impl PaymentsRouterData\n\n**cancel_flow.rs**\n  Add:\n    - function: private::construct_r_d\n    - function: private::decide_flows\n    - function: pub::decide_flow\n    - impl: impl ConstructFlowSpecificData<\napi::Void,\ntypes::PaymentRequestCancelData,\ntypes::PaymentsResponseData,\n> for PaymentData<api::Void>\n    - impl: impl Feature<api::Void, types::PaymentRequestCancelData> for types::RouterData<api::Void, types::PaymentRequestCancelData, types::PaymentsResponseData>\n    - impl: impl PaymentRouterCancelData\n\n**capture_flow.rs**\n  Add:\n    - function: private::construct_r_d\n    - function: private::decide_flows\n    - function: pub::decide_flow\n    - impl: impl ConstructFlowSpecificData<\napi::PCapture,\ntypes::PaymentsRequestCaptureData,\ntypes::PaymentsResponseData,\n> for PaymentData<api::PCapture>\n    - impl: impl Feature<api::PCapture, types::PaymentsRequestCaptureData> for types::RouterData<\napi::PCapture,\ntypes::PaymentsRequestCaptureData,\ntypes::PaymentsResponseData,\n>\n    - impl: impl PaymentsRouterCaptureData\n\n**psync_flow.rs**\n  Add:\n    - function: private::construct_r_d\n    - function: private::decide_flows\n    - function: pub::decide_flow\n    - impl: impl ConstructFlowSpecificData<\napi::PSync,\ntypes::PaymentsRequestSyncData,\ntypes::PaymentsResponseData,\n> for PaymentData<api::PSync>\n    - impl: impl Feature<api::PSync, types::PaymentsRequestSyncData> for types::RouterData<api::PSync, types::PaymentsRequestSyncData, types::PaymentsResponseData>\n    - impl: impl PaymentsRouterSyncData\n\n**helpers.rs**\n  Add:\n    - function: pub::get_address_for_payment_request\n    - function: pub::get_address_by_id\n    - function: pub::get_token_pm_type_mandate_details\n    - function: pub::get_token_for_recurring_mandate\n    - function: pub::validate_merchant_id\n    - function: pub::validate_request_amount_and_amount_to_capture\n    - function: pub::validate_mandate\n    - function: private::validate_new_mandate_request\n    - function: pub::create_server_url\n    - function: pub::create_startpay_url\n    - function: pub::create_redirect_url\n    - function: private::validate_recurring_mandate\n    - function: pub::payment_attempt_status_fsm\n    - function: pub::payment_intent_status_fsm\n    - function: pub::response_operation\n    - function: pub::amap\n    - function: pub::call_payment_method\n    - function: pub::client_secret_auth\n    - function: pub::get_customer_from_details\n    - function: pub::create_customer_if_not_exist\n    - function: pub::make_pm_data\n    - function: pub::payment_method_data_from_temp_card\n    - function: pub::create_temp_card\n    - function: pub::validate_capture_method\n    - function: pub::validate_status\n    - function: pub::validate_amount_to_capture\n    - function: pub::can_call_connector\n    - function: pub::append_option\n    - function: pub::filter_by_constraints\n    - function: pub::validate_payment_list_request\n    - function: pub::get_handle_response_url\n    - function: pub::make_merchant_url_with_response\n    - function: pub::make_pg_redirect_response\n    - function: pub::make_url_with_signature\n    - function: pub::hmac_sha256_sorted_query_params\n\n**operations.rs**\n  Add:\n    - function: private::to_validate_request\n    - function: private::to_get_tracker\n    - function: private::to_domain\n    - function: private::to_update_tracker\n    - function: private::to_post_update_tracker\n    - function: private::get_or_create_customer_details\n    - function: private::make_pm_data\n    - function: private::get_or_create_customer_details\n    - function: private::make_pm_data\n    - function: private::get_or_create_customer_details\n    - function: private::make_pm_data\n    - function: private::get_or_create_customer_details\n    - function: private::make_pm_data\n    - trait: pub::Operation\n    - trait: pub::ValidateRequest\n    - trait: pub::GetTracker\n    - trait: pub::Domain\n    - trait: pub::UpdateTracker\n    - trait: pub::PostUpdateTracker\n    - impl: impl Domain<F, api::PaymentsRequest> for Op\n    - impl: impl Domain<F, api::PaymentsRetrieveRequest> for Op\n    - impl: impl Domain<F, api::PaymentsCaptureRequest> for Op\n    - impl: impl Domain<F, api::PaymentsCancelRequest> for Op\n    - mod: private::payment_cancel\n    - mod: private::payment_capture\n    - mod: private::payment_confirm\n    - mod: private::payment_create\n    - mod: private::payment_response\n    - mod: private::payment_start\n    - mod: private::payment_status\n    - mod: private::payment_update\n\n**payment_cancel.rs**\n  Add:\n    - function: private::get_trackers\n    - function: private::update_trackers\n    - function: private::validate_request\n    - struct: pub::PaymentCancel\n    - impl: impl GetTracker<F, PaymentData<F>, api::PaymentsCancelRequest> for PaymentCancel\n    - impl: impl UpdateTracker<F, PaymentData<F>, api::PaymentsCancelRequest> for PaymentCancel\n    - impl: impl ValidateRequest<F, api::PaymentsCancelRequest> for PaymentCancel\n\n**payment_capture.rs**\n  Add:\n    - function: private::get_trackers\n    - function: private::update_trackers\n    - function: private::validate_request\n    - struct: pub::PaymentCapture\n    - impl: impl GetTracker<F, payments::PaymentData<F>, api::PaymentsCaptureRequest> for PaymentCapture\n    - impl: impl UpdateTracker<F, payments::PaymentData<F>, api::PaymentsCaptureRequest> for PaymentCapture\n    - impl: impl ValidateRequest<F, api::PaymentsCaptureRequest> for PaymentCapture\n\n**payment_confirm.rs**\n  Add:\n    - function: private::get_trackers\n    - function: private::update_trackers\n    - function: private::validate_request\n    - struct: pub::PaymentConfirm\n    - impl: impl GetTracker<F, PaymentData<F>, api::PaymentsRequest> for PaymentConfirm\n    - impl: impl UpdateTracker<F, PaymentData<F>, api::PaymentsRequest> for PaymentConfirm\n    - impl: impl ValidateRequest<F, api::PaymentsRequest> for PaymentConfirm\n\n**payment_create.rs**\n  Add:\n    - function: private::get_trackers\n    - function: private::update_trackers\n    - function: private::validate_request\n    - function: private::make_payment_attempt\n    - function: private::make_payment_intent\n    - function: private::make_connector_response\n    - function: pub::payments_create_request_validation\n    - struct: pub::PaymentCreate\n    - impl: impl GetTracker<F, PaymentData<F>, api::PaymentsRequest> for PaymentCreate\n    - impl: impl UpdateTracker<F, PaymentData<F>, api::PaymentsRequest> for PaymentCreate\n    - impl: impl ValidateRequest<F, api::PaymentsRequest> for PaymentCreate\n    - impl: impl PaymentCreate\n\n**payment_response.rs**\n  Add:\n    - function: private::update_tracker\n    - function: private::update_tracker\n    - function: private::update_tracker\n    - function: private::update_tracker\n    - function: private::payment_response_ut\n    - struct: pub::PaymentResponse\n    - impl: impl PostUpdateTracker<F, PaymentData<F>, types::PaymentsRequestData> for PaymentResponse\n    - impl: impl PostUpdateTracker<F, PaymentData<F>, types::PaymentsRequestSyncData> for PaymentResponse\n    - impl: impl PostUpdateTracker<F, PaymentData<F>, types::PaymentsRequestCaptureData> for PaymentResponse\n    - impl: impl PostUpdateTracker<F, PaymentData<F>, types::PaymentRequestCancelData> for PaymentResponse\n\n**payment_start.rs**\n  Add:\n    - function: private::get_trackers\n    - function: private::update_trackers\n    - function: private::validate_request\n    - function: private::get_or_create_customer_details\n    - function: private::make_pm_data\n    - struct: pub::PaymentStart\n    - impl: impl GetTracker<F, PaymentData<F>, api::PaymentsStartRequest> for PaymentStart\n    - impl: impl UpdateTracker<F, PaymentData<F>, api::PaymentsStartRequest> for PaymentStart\n    - impl: impl ValidateRequest<F, api::PaymentsStartRequest> for PaymentStart\n    - impl: impl Domain<F, api::PaymentsStartRequest> for Op\n\n**payment_status.rs**\n  Add:\n    - function: private::to_domain\n    - function: private::to_update_tracker\n    - function: private::to_domain\n    - function: private::to_update_tracker\n    - function: private::update_trackers\n    - function: private::update_trackers\n    - function: private::get_trackers\n    - function: private::get_tracker_for_sync\n    - function: private::validate_request\n    - struct: pub::PaymentStatus\n    - impl: impl Operation<F, api::PaymentsRequest> for PaymentStatus\n    - impl: impl Operation<F, api::PaymentsRequest> for &PaymentStatus\n    - impl: impl UpdateTracker<F, PaymentData<F>, api::PaymentsRequest> for PaymentStatus\n    - impl: impl UpdateTracker<F, PaymentData<F>, api::PaymentsRetrieveRequest> for PaymentStatus\n    - impl: impl GetTracker<F, PaymentData<F>, api::PaymentsRetrieveRequest> for PaymentStatus\n    - impl: impl ValidateRequest<F, api::PaymentsRetrieveRequest> for PaymentStatus\n\n**payment_update.rs**\n  Add:\n    - function: private::get_trackers\n    - function: private::update_trackers\n    - function: private::validate_request\n    - struct: pub::PaymentUpdate\n    - impl: impl GetTracker<F, PaymentData<F>, api::PaymentsRequest> for PaymentUpdate\n    - impl: impl UpdateTracker<F, PaymentData<F>, api::PaymentsRequest> for PaymentUpdate\n    - impl: impl ValidateRequest<F, api::PaymentsRequest> for PaymentUpdate\n\n**transformers.rs**\n  Add:\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::default\n    - function: private::from\n    - function: private::try_from\n    - function: private::default\n    - function: private::from\n    - enum: pub::RefundStatus\n    - impl: impl TryFrom<&types::PaymentsRouterData> for project\n    - impl: impl TryFrom<&types::ConnectorAuthType> for project\n    - impl: impl Default for project\n    - impl: impl From<{{project-name | downcase | pascal_case}}PaymentStatus> for enums::AttemptStatus\n    - impl: impl TryFrom<&types::RefundsRouterData> for project\n    - impl: impl Default for RefundStatus\n    - impl: impl From<self::RefundStatus> for enums::RefundStatus\n\n**refunds.rs**\n  Add:\n    - function: pub::refund_create\n    - function: pub::refund_retrieve\n    - function: pub::refund_update\n    - mod: private::types\n\n**validator.rs**\n  Add:\n    - function: pub::validate_success_transaction\n    - function: pub::validate_refund_amount\n    - function: pub::validate_payment_order_age\n    - function: pub::validate_maximum_refund_against_payment_attempt\n    - function: pub::validate_uniqueness_of_refund_id_against_merchant_id\n    - enum: pub::RefundValidationError\n\n**utils.rs**\n  Add:\n    - function: private::to_not_found_response\n    - function: private::to_duplicate_response\n    - function: private::to_unsuccessful_processing_step_response\n    - function: private::to_refund_failed_response\n    - function: private::to_payment_failed_response\n    - trait: pub::StorageErrorExt\n    - trait: pub::ApiClientErrorExt\n    - trait: pub::ConnectorErrorExt\n    - impl: impl StorageErrorExt for error_stack::Report<super::StorageError>\n    - impl: impl ApiClientErrorExt for error_stack::Report<super::ApiClientError>\n    - impl: impl ConnectorErrorExt for error_stack::Report<super::ConnectorError>\n\n**webhooks.rs**\n  Add:\n    - function: private::payments_incoming_webhook_flow\n    - function: private::create_event_and_trigger_outgoing_webhook\n    - function: private::trigger_webhook_to_merchant\n    - function: pub::webhooks_core\n    - mod: pub::transformers\n    - mod: pub::utils\n\n**transformers.rs**\n  Add:\n    - function: private::try_from\n    - function: private::try_from\n    - function: private::default\n    - function: private::from\n    - function: private::try_from\n    - function: private::default\n    - function: private::from\n    - enum: pub::RefundStatus\n    - impl: impl TryFrom<&types::PaymentsRouterData> for project\n    - impl: impl TryFrom<&types::ConnectorAuthType> for project\n    - impl: impl Default for project\n    - impl: impl From<{{project-name | downcase | pascal_case}}PaymentStatus> for enums::AttemptStatus\n    - impl: impl TryFrom<&types::RefundsRouterData> for project\n    - impl: impl Default for RefundStatus\n    - impl: impl From<self::RefundStatus> for enums::RefundStatus\n\n**utils.rs**\n  Add:\n    - function: private::to_not_found_response\n    - function: private::to_duplicate_response\n    - function: private::to_unsuccessful_processing_step_response\n    - function: private::to_refund_failed_response\n    - function: private::to_payment_failed_response\n    - trait: pub::StorageErrorExt\n    - trait: pub::ApiClientErrorExt\n    - trait: pub::ConnectorErrorExt\n    - impl: impl StorageErrorExt for error_stack::Report<super::StorageError>\n    - impl: impl ApiClientErrorExt for error_stack::Report<super::ApiClientError>\n    - impl: impl ConnectorErrorExt for error_stack::Report<super::ConnectorError>\n\n**cors.rs**\n  Add:\n    - function: pub::cors\n\n**db.rs**\n  Add:\n    - function: pub::new\n    - function: pub::test\n    - struct: pub::SqlDb\n    - trait: pub::Db\n    - impl: impl SqlDb\n    - impl: impl Db for Store\n    - mod: pub::address\n    - mod: pub::configs\n    - mod: pub::connector_response\n    - mod: pub::customers\n    - mod: pub::events\n    - mod: pub::locker_mock_up\n    - mod: pub::mandate\n    - mod: pub::merchant_account\n    - mod: pub::merchant_connector_account\n    - mod: pub::payment_attempt\n    - mod: pub::payment_intent\n    - mod: pub::payment_method\n    - mod: pub::process_tracker\n    - mod: pub::refund\n    - mod: pub::temp_card\n\n**address.rs**\n  Add:\n    - function: private::find_address\n    - function: private::update_address\n    - function: private::insert_address\n    - trait: pub::IAddress\n    - impl: impl IAddress for Store\n\n**configs.rs**\n  Add:\n    - mod: pub::settings\n\n**connector_response.rs**\n  Add:\n    - function: private::insert_connector_response\n    - function: private::find_connector_response_by_payment_id_merchant_id_txn_id\n    - function: private::update_connector_response\n    - trait: pub::IConnectorResponse\n    - impl: impl IConnectorResponse for Store\n\n**customers.rs**\n  Add:\n    - function: pub::customer_create\n    - function: pub::customer_retrieve\n    - function: pub::customer_update\n    - function: pub::customer_delete\n    - mod: private::types\n\n**events.rs**\n  Add:\n    - function: private::insert_event\n    - trait: pub::IEvent\n    - impl: impl IEvent for Store\n\n**locker_mock_up.rs**\n  Add:\n    - function: private::find_locker_by_card_id\n    - function: private::insert_locker_mock_up\n    - trait: pub::ILockerMockUp\n    - impl: impl ILockerMockUp for Store\n\n**mandate.rs**\n  Add:\n    - function: pub::get_mandate\n    - function: pub::revoke_mandate\n    - function: pub::get_customer_mandates\n\n**merchant_account.rs**\n  Add:\n    - function: private::insert_merchant\n    - function: private::find_merchant_account_by_merchant_id\n    - function: private::update_merchant\n    - function: private::find_merchant_account_by_api_key\n    - function: private::find_merchant_account_by_publishable_key\n    - function: private::delete_merchant_account_by_merchant_id\n    - trait: pub::IMerchantAccount\n    - impl: impl IMerchantAccount for Store\n\n**merchant_connector_account.rs**\n  Add:\n    - function: private::find_merchant_connector_account_by_merchant_id_connector\n    - function: private::find_by_merchant_connector_account_merchant_id_merchant_connector_id\n    - function: private::insert_merchant_connector_account\n    - function: private::find_merchant_connector_account_by_merchant_id_list\n    - function: private::update_merchant_connector_account\n    - function: private::delete_merchant_connector_account_by_merchant_id_merchant_connector_id\n    - trait: pub::IMerchantConnectorAccount\n    - impl: impl IMerchantConnectorAccount for Store\n\n**payment_attempt.rs**\n  Add:\n    - function: private::insert_payment_attempt\n    - function: private::update_payment_attempt\n    - function: private::find_payment_attempt_by_payment_id_merchant_id\n    - function: private::find_payment_attempt_by_transaction_id_payment_id_merchant_id\n    - function: private::find_payment_attempt_last_successful_attempt_by_payment_id_merchant_id\n    - function: private::find_payment_attempt_by_merchant_id_connector_txn_id\n    - function: private::insert_payment_attempt\n    - function: private::update_payment_attempt\n    - function: private::find_payment_attempt_by_payment_id_merchant_id\n    - function: private::find_payment_attempt_by_transaction_id_payment_id_merchant_id\n    - function: private::find_payment_attempt_last_successful_attempt_by_payment_id_merchant_id\n    - function: private::find_payment_attempt_by_merchant_id_connector_txn_id\n    - trait: pub::IPaymentAttempt\n    - impl: impl IPaymentAttempt for Store\n    - impl: impl IPaymentAttempt for Store\n    - mod: private::storage\n    - mod: private::storage\n\n**payment_intent.rs**\n  Add:\n    - function: private::insert_payment_intent\n    - function: private::update_payment_intent\n    - function: private::find_payment_intent_by_payment_id_merchant_id\n    - function: private::filter_payment_intent_by_constraints\n    - function: private::insert_payment_intent\n    - function: private::update_payment_intent\n    - function: private::find_payment_intent_by_payment_id_merchant_id\n    - function: private::filter_payment_intent_by_constraints\n    - trait: pub::IPaymentIntent\n    - impl: impl IPaymentIntent for Store\n    - impl: impl IPaymentIntent for Store\n    - mod: private::storage\n    - mod: private::storage\n\n**payment_method.rs**\n  Add:\n    - function: private::find_payment_method\n    - function: private::insert_payment_method\n    - function: private::find_payment_method_by_customer_id_merchant_id_list\n    - function: private::delete_payment_method_by_merchant_id_payment_method_id\n    - trait: pub::IPaymentMethod\n    - impl: impl IPaymentMethod for Store\n\n**process_tracker.rs**\n  Add:\n    - function: private::find_process_by_id\n    - function: private::reinitialize_limbo_processes\n    - function: private::find_processes_by_time_status\n    - function: private::insert_process\n    - function: private::update_process\n    - function: private::update_process_tracker\n    - function: private::process_tracker_update_process_status_by_ids\n    - trait: pub::IProcessTracker\n    - impl: impl IProcessTracker for Store\n\n**refund.rs**\n  Add:\n    - function: private::find_refund_by_internal_reference_id_merchant_id\n    - function: private::insert_refund\n    - function: private::find_refund_by_merchant_id_transaction_id\n    - function: private::update_refund\n    - function: private::find_refund_by_merchant_id_refund_id\n    - function: private::find_refund_by_payment_id_merchant_id\n    - trait: pub::IRefund\n    - impl: impl IRefund for Store\n\n**temp_card.rs**\n  Add:\n    - function: private::insert_temp_card\n    - function: private::find_tempcard_by_transaction_id\n    - function: private::insert_tempcard_with_token\n    - function: private::find_tempcard_by_token\n    - trait: pub::ITempCard\n    - impl: impl ITempCard for Store\n\n**env.rs**\n  Add:\n    - function: pub::setup\n    - mod: pub::logger\n\n**lib.rs**\n  Add:\n    - mod: private::strategy\n    - mod: private::abs\n    - mod: private::secret\n    - mod: private::strong_secret\n    - mod: private::boxed\n    - mod: private::bytes\n    - mod: private::string\n    - mod: private::vec\n    - mod: private::serde\n    - mod: pub::prelude\n    - mod: private::diesel\n\n**pii.rs**\n  Add:\n    - function: private::fmt\n    - function: private::fmt\n    - function: private::fmt\n    - function: private::test_valid_card_number_masking\n    - function: private::test_invalid_card_number_masking\n    - function: private::test_valid_email_masking\n    - function: private::test_invalid_email_masking\n    - function: private::test_valid_ip_addr_masking\n    - function: private::test_invalid_ip_addr_masking\n    - struct: pub::CardNumber\n    - struct: pub::Email\n    - struct: pub::IpAddress\n    - impl: impl Strategy<T> for CardNumber\n    - impl: impl Strategy<T> for Email\n    - impl: impl Strategy<T> for IpAddress\n    - mod: private::pii_masking_strategy_tests\n\n**routes.rs**\n  Add:\n    - mod: private::admin\n    - mod: private::app\n    - mod: private::customers\n    - mod: private::health\n    - mod: private::mandates\n    - mod: private::metrics\n    - mod: private::payment_methods\n    - mod: pub::payments\n    - mod: private::payouts\n    - mod: private::refunds\n    - mod: private::webhooks\n\n**admin.rs**\n  Add:\n    - function: private::create_merchant_api_key\n    - function: pub::create_merchant_account\n    - function: pub::get_merchant_account\n    - function: pub::merchant_account_update\n    - function: pub::merchant_account_delete\n    - function: private::get_parent_merchant\n    - function: private::validate_merchant_id\n    - function: pub::create_payment_connector\n    - function: pub::retrieve_payment_connector\n    - function: pub::update_payment_connector\n    - function: pub::delete_payment_connector\n\n**app.rs**\n  Add:\n    - function: pub::server\n    - function: pub::server\n    - function: pub::server\n    - struct: pub::PaymentIntents\n    - struct: pub::Refunds\n    - struct: pub::Customers\n    - impl: impl PaymentIntents\n    - impl: impl Refunds\n    - impl: impl Customers\n\n**customers.rs**\n  Add:\n    - function: pub::customer_create\n    - function: pub::customer_retrieve\n    - function: pub::customer_update\n    - function: pub::customer_delete\n    - mod: private::types\n\n**health.rs**\n  Add:\n    - function: pub::health\n\n**mandates.rs**\n  Add:\n    - function: pub::get_mandate\n    - function: pub::revoke_mandate\n\n**metrics.rs**\n  Modify existing code\n\n**payment_methods.rs**\n  Add:\n    - mod: pub::cards\n    - mod: pub::transformers\n\n**payments.rs**\n  Add:\n    - function: pub::payments_operation_core\n    - function: pub::payments_core\n    - function: private::is_start_pay\n    - function: pub::handle_payments_redirect_response\n    - function: pub::payments_response_for_redirection_flows\n    - function: private::call_connector_service\n    - function: pub::if_not_create_change_operation\n    - function: pub::is_confirm\n    - function: pub::should_call_connector\n    - function: pub::list_payments\n    - function: pub::add_process_sync_task\n    - struct: pub::PaymentAddress\n    - struct: pub::PaymentData\n    - struct: pub::CustomerDetails\n    - enum: pub::CallConnectorAction\n    - mod: pub::flows\n    - mod: pub::helpers\n    - mod: pub::operations\n    - mod: pub::transformers\n\n**payouts.rs**\n  Add:\n    - function: pub::payouts_create\n    - function: pub::payouts_retrieve\n    - function: pub::payouts_update\n    - function: pub::payouts_reverse\n    - function: pub::payouts_cancel\n    - function: pub::payouts_accounts\n    - function: private::http_response\n\n**refunds.rs**\n  Add:\n    - function: pub::refund_create\n    - function: pub::refund_retrieve\n    - function: pub::refund_update\n    - mod: private::types\n\n**webhooks.rs**\n  Add:\n    - function: private::payments_incoming_webhook_flow\n    - function: private::create_event_and_trigger_outgoing_webhook\n    - function: private::trigger_webhook_to_merchant\n    - function: pub::webhooks_core\n    - mod: pub::transformers\n    - mod: pub::utils\n\n**scheduler.rs**\n  Add:\n    - function: private::main\n    - function: private::start_scheduler\n\n**consumer.rs**\n  Add:\n    - function: pub::valid_business_statuses\n    - function: pub::start_consumer\n    - function: pub::consumer_operations\n    - function: pub::fetch_consumer_tasks\n    - function: pub::start_workflow\n    - function: pub::run_executor\n    - function: pub::some_error_handler\n    - function: pub::create_task\n\n**producer.rs**\n  Add:\n    - function: pub::fetch_upper_limit\n    - function: pub::fetch_lower_limit\n    - function: pub::producer_lock_key\n    - function: pub::producer_lock_ttl\n    - function: pub::start_producer\n    - function: pub::run_producer_flow\n    - function: pub::fetch_producer_tasks\n\n**types.rs**\n  Add:\n    - function: private::from\n    - function: private::from\n    - function: private::from\n    - function: private::from\n    - struct: pub::CustomerAddress\n    - struct: pub::CreateCustomerRequest\n    - struct: pub::CustomerUpdateRequest\n    - struct: pub::CreateCustomerResponse\n    - struct: pub::CustomerDeleteResponse\n    - impl: impl From<CreateCustomerRequest> for customers::CreateCustomerRequest\n    - impl: impl From<CustomerUpdateRequest> for customers::CustomerUpdateRequest\n    - impl: impl From<customers::CustomerResponse> for CreateCustomerResponse\n    - impl: impl From<customers::CustomerDeleteResponse> for CustomerDeleteResponse\n\n**batch.rs**\n  Add:\n    - function: pub::to_redis_field_value_pairs\n    - function: pub::from_redis_stream_entry\n    - struct: pub::ProcessTrackerBatch\n    - impl: impl ProcessTrackerBatch\n\n**config.rs**\n  Add:\n    - function: pub::new\n    - struct: pub::SchedulerConfig\n    - impl: impl SchedulerConfig\n\n**flow.rs**\n  Add:\n    - enum: pub::SchedulerFlow\n\n**options.rs**\n  Add:\n    - struct: pub::Milliseconds\n    - struct: pub::SchedulerOptions\n    - struct: pub::ReadinessOptions\n\n**process_data.rs**\n  Add:\n    - struct: pub::ProcessData\n    - struct: pub::RetryMapping\n    - struct: pub::ConnectorPTMapping\n\n**state.rs**\n  Add:\n    - struct: pub::DummyWorkflowState\n    - enum: pub::WorkflowState\n    - impl: impl DummyWorkflowState\n\n**utils.rs**\n  Add:\n    - function: private::to_not_found_response\n    - function: private::to_duplicate_response\n    - function: private::to_unsuccessful_processing_step_response\n    - function: private::to_refund_failed_response\n    - function: private::to_payment_failed_response\n    - trait: pub::StorageErrorExt\n    - trait: pub::ApiClientErrorExt\n    - trait: pub::ConnectorErrorExt\n    - impl: impl StorageErrorExt for error_stack::Report<super::StorageError>\n    - impl: impl ApiClientErrorExt for error_stack::Report<super::ApiClientError>\n    - impl: impl ConnectorErrorExt for error_stack::Report<super::ConnectorError>\n\n**workflows.rs**\n  Add:\n    - function: private::execute_workflow\n    - function: private::success_handler\n    - function: private::error_handler\n    - function: private::test_enum_to_string\n    - trait: pub::ProcessTrackerWorkflow\n    - mod: pub::payment_sync\n    - mod: pub::refund_router\n    - mod: private::workflow_tests\n\n**payment_sync.rs**\n  Add:\n    - function: private::execute_workflow\n    - function: private::error_handler\n    - function: pub::get_sync_process_schedule_time\n    - function: pub::get_sync_schedule_time\n    - function: private::get_delay\n    - function: pub::retry_sync_task\n    - impl: impl ProcessTrackerWorkflow for PaymentsSyncWorkflow\n\n**refund_router.rs**\n  Add:\n    - function: private::execute_workflow\n    - function: private::error_handler\n    - impl: impl ProcessTrackerWorkflow for RefundWorkflowRouter\n\n**schema.rs**\n  Modify existing code\n\n**services.rs**\n  Add:\n    - struct: pub::Store\n    - mod: pub::api\n    - mod: pub::encryption\n    - mod: pub::logger\n    - mod: pub::redis\n\n**api.rs**\n  Add:\n    - function: private::get_connector_integration\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: pub::execute_connector_processing_step\n    - function: pub::call_connector_api\n    - function: private::send_request\n    - function: private::handle_response\n    - function: private::from\n    - function: pub::new\n    - function: private::from\n    - function: private::from\n    - function: pub::get_auth_flow\n    - function: pub::get_auth_type\n    - function: pub::server_wrap_util\n    - function: pub::server_wrap\n    - function: pub::log_and_return_error_response\n    - function: pub::authenticate_merchant\n    - function: pub::authenticate_connector\n    - function: pub::get_auth_type_and_check_client_secret\n    - function: private::get_api_key\n    - function: pub::authenticate_by_api_key\n    - function: private::authenticate_by_publishable_key\n    - function: pub::http_response_json\n    - function: pub::http_response_plaintext\n    - function: pub::http_response_ok\n    - function: pub::http_redirect_response\n    - function: pub::http_response_err\n    - function: private::get_flow_type\n    - function: pub::build_redirection_form\n    - function: private::test_mime_essence\n    - struct: pub::BachRedirectResponse\n    - struct: pub::RedirectForm\n    - enum: pub::BachResponse\n    - enum: pub::ApiAuthentication\n    - enum: pub::MerchantAuthentication\n    - enum: pub::ConnectorAuthentication\n    - enum: pub::AuthFlow\n    - trait: pub::ConnectorIntegrationExt\n    - trait: pub::ConnectorIntegration\n    - trait: pub::ConnectorRedirectResponse\n    - impl: impl ConnectorIntegrationExt<T, Req, Resp> for S\n    - impl: impl From<&storage::PaymentAttempt> for BachRedirectResponse\n    - impl: impl RedirectForm\n    - impl: impl From<MerchantAuthentication<'a>> for ApiAuthentication<'a>\n    - impl: impl From<ConnectorAuthentication<'a>> for ApiAuthentication<'a>\n    - mod: private::client\n    - mod: pub::request\n    - mod: private::tests\n\n**client.rs**\n  Add:\n    - function: private::get_proxy_url\n    - function: pub::create_client\n    - function: pub::proxy_bypass_urls\n    - enum: private::ProxyType\n    - impl: impl ProxyType\n\n**request.rs**\n  Add:\n    - function: pub::new\n    - function: pub::set_body\n    - function: pub::add_header\n    - function: pub::add_content_type\n    - function: pub::new\n    - function: pub::url\n    - function: pub::method\n    - function: pub::header\n    - function: pub::headers\n    - function: pub::body\n    - function: pub::content_type\n    - function: pub::build\n    - function: private::default\n    - function: private::construct_header_map\n    - function: private::add_headers\n    - struct: pub::Request\n    - struct: pub::RequestBuilder\n    - enum: pub::Method\n    - enum: pub::ContentType\n    - trait: pub::HeaderExt\n    - trait: pub::RequestBuilderExt\n    - impl: impl Request\n    - impl: impl RequestBuilder\n    - impl: impl Default for RequestBuilder\n    - impl: impl HeaderExt for Headers\n    - impl: impl RequestBuilderExt for reqwest::RequestBuilder\n\n**encryption.rs**\n  Add:\n    - function: private::new\n    - function: private::advance\n    - function: pub::get_encryption_key\n    - function: pub::set_encryption_key\n    - function: pub::get_encryption_key\n    - function: pub::encrypt\n    - function: pub::decrypt\n    - function: private::generate_key\n    - function: private::test_enc\n    - function: private::test_kms\n    - struct: private::NonceGen\n    - struct: pub::KeyHandler\n    - impl: impl NonceGen\n    - impl: impl NonceSequence for NonceGen\n    - impl: impl KeyHandler\n    - impl: impl KeyHandler\n    - mod: private::tests\n\n**locking.rs**\n  Modify existing code\n\n**logger.rs**\n  Modify existing code\n\n**redis.rs**\n  Add:\n    - function: pub::new\n    - function: pub::close_connections\n    - function: private::from\n    - struct: pub::RedisConnectionPool\n    - struct: private::RedisConfig\n    - impl: impl RedisConnectionPool\n    - impl: impl From<&crate::configs::settings::Redis> for RedisConfig\n    - mod: pub::commands\n    - mod: pub::types\n\n**commands.rs**\n  Add:\n    - function: pub::set_key\n    - function: pub::serialize_and_set_key\n    - function: pub::get_key\n    - function: pub::get_and_deserialize_key\n    - function: pub::delete_key\n    - function: pub::set_key_with_expiry\n    - function: pub::set_key_if_not_exist\n    - function: pub::set_expiry\n    - function: pub::stream_append_entry\n    - function: pub::stream_delete_entries\n    - function: pub::stream_acknowledge_entries\n    - function: pub::stream_read_entries\n    - function: pub::stream_read_with_options\n    - function: pub::consumer_group_create\n    - function: pub::consumer_group_destroy\n    - function: pub::consumer_group_delete_consumer\n    - function: pub::consumer_group_set_last_id\n    - function: pub::consumer_group_set_message_owner\n    - impl: impl super::RedisConnectionPool\n\n**types.rs**\n  Add:\n    - function: private::from\n    - function: private::from\n    - function: private::from\n    - function: private::from\n    - struct: pub::CustomerAddress\n    - struct: pub::CreateCustomerRequest\n    - struct: pub::CustomerUpdateRequest\n    - struct: pub::CreateCustomerResponse\n    - struct: pub::CustomerDeleteResponse\n    - impl: impl From<CreateCustomerRequest> for customers::CreateCustomerRequest\n    - impl: impl From<CustomerUpdateRequest> for customers::CustomerUpdateRequest\n    - impl: impl From<customers::CustomerResponse> for CreateCustomerResponse\n    - impl: impl From<customers::CustomerDeleteResponse> for CustomerDeleteResponse\n\n**types.rs**\n  Add:\n    - function: private::from\n    - function: private::from\n    - function: private::from\n    - function: private::from\n    - struct: pub::CustomerAddress\n    - struct: pub::CreateCustomerRequest\n    - struct: pub::CustomerUpdateRequest\n    - struct: pub::CreateCustomerResponse\n    - struct: pub::CustomerDeleteResponse\n    - impl: impl From<CreateCustomerRequest> for customers::CreateCustomerRequest\n    - impl: impl From<CustomerUpdateRequest> for customers::CustomerUpdateRequest\n    - impl: impl From<customers::CustomerResponse> for CreateCustomerResponse\n    - impl: impl From<customers::CustomerDeleteResponse> for CustomerDeleteResponse\n\n**api.rs**\n  Add:\n    - function: private::get_connector_integration\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: pub::execute_connector_processing_step\n    - function: pub::call_connector_api\n    - function: private::send_request\n    - function: private::handle_response\n    - function: private::from\n    - function: pub::new\n    - function: private::from\n    - function: private::from\n    - function: pub::get_auth_flow\n    - function: pub::get_auth_type\n    - function: pub::server_wrap_util\n    - function: pub::server_wrap\n    - function: pub::log_and_return_error_response\n    - function: pub::authenticate_merchant\n    - function: pub::authenticate_connector\n    - function: pub::get_auth_type_and_check_client_secret\n    - function: private::get_api_key\n    - function: pub::authenticate_by_api_key\n    - function: private::authenticate_by_publishable_key\n    - function: pub::http_response_json\n    - function: pub::http_response_plaintext\n    - function: pub::http_response_ok\n    - function: pub::http_redirect_response\n    - function: pub::http_response_err\n    - function: private::get_flow_type\n    - function: pub::build_redirection_form\n    - function: private::test_mime_essence\n    - struct: pub::BachRedirectResponse\n    - struct: pub::RedirectForm\n    - enum: pub::BachResponse\n    - enum: pub::ApiAuthentication\n    - enum: pub::MerchantAuthentication\n    - enum: pub::ConnectorAuthentication\n    - enum: pub::AuthFlow\n    - trait: pub::ConnectorIntegrationExt\n    - trait: pub::ConnectorIntegration\n    - trait: pub::ConnectorRedirectResponse\n    - impl: impl ConnectorIntegrationExt<T, Req, Resp> for S\n    - impl: impl From<&storage::PaymentAttempt> for BachRedirectResponse\n    - impl: impl RedirectForm\n    - impl: impl From<MerchantAuthentication<'a>> for ApiAuthentication<'a>\n    - impl: impl From<ConnectorAuthentication<'a>> for ApiAuthentication<'a>\n    - mod: private::client\n    - mod: pub::request\n    - mod: private::tests\n\n**admin.rs**\n  Add:\n    - function: private::create_merchant_api_key\n    - function: pub::create_merchant_account\n    - function: pub::get_merchant_account\n    - function: pub::merchant_account_update\n    - function: pub::merchant_account_delete\n    - function: private::get_parent_merchant\n    - function: private::validate_merchant_id\n    - function: pub::create_payment_connector\n    - function: pub::retrieve_payment_connector\n    - function: pub::update_payment_connector\n    - function: pub::delete_payment_connector\n\n**bank_accounts.rs**\n  Modify existing code\n\n**cards.rs**\n  Add:\n    - function: pub::create_payment_method\n    - function: pub::add_payment_method\n    - function: pub::add_card\n    - function: pub::mock_add_card\n    - function: pub::mock_get_card\n    - function: pub::get_card\n    - function: pub::delete_card\n    - function: pub::list_payment_methods\n    - function: private::filter_payment_methods\n    - function: private::filter_accepted_enum_based\n    - function: private::filter_amount_based\n    - function: private::filter_recurring_based\n    - function: private::filter_installment_based\n    - function: pub::list_customer_payment_method\n    - function: pub::get_tempcard_from_payment_method\n    - function: pub::get_card_info_value\n    - function: pub::get_card_info_from_value\n    - function: pub::retrieve_payment_method\n    - function: pub::delete_payment_method\n\n**customers.rs**\n  Add:\n    - function: pub::customer_create\n    - function: pub::customer_retrieve\n    - function: pub::customer_update\n    - function: pub::customer_delete\n    - mod: private::types\n\n**disputes.rs**\n  Modify existing code\n\n**files.rs**\n  Modify existing code\n\n**mandates.rs**\n  Add:\n    - function: pub::get_mandate\n    - function: pub::revoke_mandate\n\n**payment_methods.rs**\n  Add:\n    - mod: pub::cards\n    - mod: pub::transformers\n\n**payments.rs**\n  Add:\n    - function: pub::payments_operation_core\n    - function: pub::payments_core\n    - function: private::is_start_pay\n    - function: pub::handle_payments_redirect_response\n    - function: pub::payments_response_for_redirection_flows\n    - function: private::call_connector_service\n    - function: pub::if_not_create_change_operation\n    - function: pub::is_confirm\n    - function: pub::should_call_connector\n    - function: pub::list_payments\n    - function: pub::add_process_sync_task\n    - struct: pub::PaymentAddress\n    - struct: pub::PaymentData\n    - struct: pub::CustomerDetails\n    - enum: pub::CallConnectorAction\n    - mod: pub::flows\n    - mod: pub::helpers\n    - mod: pub::operations\n    - mod: pub::transformers\n\n**payouts.rs**\n  Add:\n    - function: pub::payouts_create\n    - function: pub::payouts_retrieve\n    - function: pub::payouts_update\n    - function: pub::payouts_reverse\n    - function: pub::payouts_cancel\n    - function: pub::payouts_accounts\n    - function: private::http_response\n\n**refunds.rs**\n  Add:\n    - function: pub::refund_create\n    - function: pub::refund_retrieve\n    - function: pub::refund_update\n    - mod: private::types\n\n**webhooks.rs**\n  Add:\n    - function: private::payments_incoming_webhook_flow\n    - function: private::create_event_and_trigger_outgoing_webhook\n    - function: private::trigger_webhook_to_merchant\n    - function: pub::webhooks_core\n    - mod: pub::transformers\n    - mod: pub::utils\n\n**connector.rs**\n  Add:\n    - mod: pub::aci\n    - mod: pub::adyen\n    - mod: pub::authorizedotnet\n    - mod: pub::checkout\n    - mod: pub::stripe\n\n**storage.rs**\n  Add:\n    - function: private::from\n    - function: private::build\n    - function: private::from\n    - function: private::build\n    - struct: pub::DieselArray\n    - struct: pub::OptionalDieselArray\n    - impl: impl From<DieselArray<T>> for Vec<T>\n    - impl: impl Queryable<Array<Nullable<U>>, Pg> for DieselArray<T>\n    - impl: impl From<OptionalDieselArray<T>> for Option<Vec<T>>\n    - impl: impl Queryable<Nullable<Array<Nullable<U>>>, Pg> for OptionalDieselArray<T>\n    - mod: pub::address\n    - mod: pub::configs\n    - mod: pub::connector_response\n    - mod: pub::customers\n    - mod: pub::enums\n    - mod: pub::events\n    - mod: pub::locker_mock_up\n    - mod: pub::mandate\n    - mod: pub::merchant_account\n    - mod: pub::merchant_connector_account\n    - mod: pub::payment_attempt\n    - mod: pub::payment_intent\n    - mod: pub::payment_method\n    - mod: pub::process_tracker\n    - mod: private::query\n    - mod: pub::refund\n    - mod: pub::temp_card\n    - mod: pub::diesel_impl\n\n**address.rs**\n  Add:\n    - function: private::find_address\n    - function: private::update_address\n    - function: private::insert_address\n    - trait: pub::IAddress\n    - impl: impl IAddress for Store\n\n**configs.rs**\n  Add:\n    - mod: pub::settings\n\n**connector_response.rs**\n  Add:\n    - function: private::insert_connector_response\n    - function: private::find_connector_response_by_payment_id_merchant_id_txn_id\n    - function: private::update_connector_response\n    - trait: pub::IConnectorResponse\n    - impl: impl IConnectorResponse for Store\n\n**customers.rs**\n  Add:\n    - function: pub::customer_create\n    - function: pub::customer_retrieve\n    - function: pub::customer_update\n    - function: pub::customer_delete\n    - mod: private::types\n\n**dispute.rs**\n  Modify existing code\n\n**enums.rs**\n  Add:\n    - enum: pub::AttemptStatus\n    - enum: pub::AuthenticationType\n    - enum: pub::CaptureMethod\n    - enum: pub::ConnectorType\n    - enum: pub::Currency\n    - enum: pub::EventClass\n    - enum: pub::EventObjectType\n    - enum: pub::EventType\n    - enum: pub::IntentStatus\n    - enum: pub::FutureUsage\n    - enum: pub::PaymentFlow\n    - enum: pub::PaymentMethodIssuerCode\n    - enum: pub::PaymentMethodSubType\n    - enum: pub::PaymentMethodType\n    - enum: pub::ProcessTrackerStatus\n    - enum: pub::RefundStatus\n    - enum: pub::RefundType\n    - enum: pub::RoutingAlgorithm\n    - enum: pub::MandateType\n    - enum: pub::MandateStatus\n    - mod: pub::diesel_exports\n\n**events.rs**\n  Add:\n    - function: private::insert_event\n    - trait: pub::IEvent\n    - impl: impl IEvent for Store\n\n**locker_mock_up.rs**\n  Add:\n    - function: private::find_locker_by_card_id\n    - function: private::insert_locker_mock_up\n    - trait: pub::ILockerMockUp\n    - impl: impl ILockerMockUp for Store\n\n**mandate.rs**\n  Add:\n    - function: pub::get_mandate\n    - function: pub::revoke_mandate\n    - function: pub::get_customer_mandates\n\n**merchant_account.rs**\n  Add:\n    - function: private::insert_merchant\n    - function: private::find_merchant_account_by_merchant_id\n    - function: private::update_merchant\n    - function: private::find_merchant_account_by_api_key\n    - function: private::find_merchant_account_by_publishable_key\n    - function: private::delete_merchant_account_by_merchant_id\n    - trait: pub::IMerchantAccount\n    - impl: impl IMerchantAccount for Store\n\n**merchant_connector_account.rs**\n  Add:\n    - function: private::find_merchant_connector_account_by_merchant_id_connector\n    - function: private::find_by_merchant_connector_account_merchant_id_merchant_connector_id\n    - function: private::insert_merchant_connector_account\n    - function: private::find_merchant_connector_account_by_merchant_id_list\n    - function: private::update_merchant_connector_account\n    - function: private::delete_merchant_connector_account_by_merchant_id_merchant_connector_id\n    - trait: pub::IMerchantConnectorAccount\n    - impl: impl IMerchantConnectorAccount for Store\n\n**payment_attempt.rs**\n  Add:\n    - function: private::insert_payment_attempt\n    - function: private::update_payment_attempt\n    - function: private::find_payment_attempt_by_payment_id_merchant_id\n    - function: private::find_payment_attempt_by_transaction_id_payment_id_merchant_id\n    - function: private::find_payment_attempt_last_successful_attempt_by_payment_id_merchant_id\n    - function: private::find_payment_attempt_by_merchant_id_connector_txn_id\n    - function: private::insert_payment_attempt\n    - function: private::update_payment_attempt\n    - function: private::find_payment_attempt_by_payment_id_merchant_id\n    - function: private::find_payment_attempt_by_transaction_id_payment_id_merchant_id\n    - function: private::find_payment_attempt_last_successful_attempt_by_payment_id_merchant_id\n    - function: private::find_payment_attempt_by_merchant_id_connector_txn_id\n    - trait: pub::IPaymentAttempt\n    - impl: impl IPaymentAttempt for Store\n    - impl: impl IPaymentAttempt for Store\n    - mod: private::storage\n    - mod: private::storage\n\n**payment_intent.rs**\n  Add:\n    - function: private::insert_payment_intent\n    - function: private::update_payment_intent\n    - function: private::find_payment_intent_by_payment_id_merchant_id\n    - function: private::filter_payment_intent_by_constraints\n    - function: private::insert_payment_intent\n    - function: private::update_payment_intent\n    - function: private::find_payment_intent_by_payment_id_merchant_id\n    - function: private::filter_payment_intent_by_constraints\n    - trait: pub::IPaymentIntent\n    - impl: impl IPaymentIntent for Store\n    - impl: impl IPaymentIntent for Store\n    - mod: private::storage\n    - mod: private::storage\n\n**payment_method.rs**\n  Add:\n    - function: private::find_payment_method\n    - function: private::insert_payment_method\n    - function: private::find_payment_method_by_customer_id_merchant_id_list\n    - function: private::delete_payment_method_by_merchant_id_payment_method_id\n    - trait: pub::IPaymentMethod\n    - impl: impl IPaymentMethod for Store\n\n**process_tracker.rs**\n  Add:\n    - function: private::find_process_by_id\n    - function: private::reinitialize_limbo_processes\n    - function: private::find_processes_by_time_status\n    - function: private::insert_process\n    - function: private::update_process\n    - function: private::update_process_tracker\n    - function: private::process_tracker_update_process_status_by_ids\n    - trait: pub::IProcessTracker\n    - impl: impl IProcessTracker for Store\n\n**query.rs**\n  Add:\n    - mod: private::address\n    - mod: private::configs\n    - mod: private::connector_response\n    - mod: private::customers\n    - mod: private::events\n    - mod: private::generics\n    - mod: private::locker_mock_up\n    - mod: private::mandate\n    - mod: private::merchant_account\n    - mod: private::merchant_connector_account\n    - mod: private::payment_attempt\n    - mod: private::payment_intent\n    - mod: private::payment_method\n    - mod: private::process_tracker\n    - mod: private::refund\n    - mod: private::temp_card\n\n**address.rs**\n  Add:\n    - function: private::find_address\n    - function: private::update_address\n    - function: private::insert_address\n    - trait: pub::IAddress\n    - impl: impl IAddress for Store\n\n**configs.rs**\n  Add:\n    - mod: pub::settings\n\n**connector_response.rs**\n  Add:\n    - function: private::insert_connector_response\n    - function: private::find_connector_response_by_payment_id_merchant_id_txn_id\n    - function: private::update_connector_response\n    - trait: pub::IConnectorResponse\n    - impl: impl IConnectorResponse for Store\n\n**customers.rs**\n  Add:\n    - function: pub::customer_create\n    - function: pub::customer_retrieve\n    - function: pub::customer_update\n    - function: pub::customer_delete\n    - mod: private::types\n\n**events.rs**\n  Add:\n    - function: private::insert_event\n    - trait: pub::IEvent\n    - impl: impl IEvent for Store\n\n**generics.rs**\n  Add:\n    - function: pub::generic_insert\n    - function: pub::generic_update\n    - function: pub::generic_update_with_results\n    - function: pub::generic_update_by_id\n    - function: pub::generic_delete\n    - function: pub::generic_delete_with_results\n    - function: pub::generic_delete_one_with_results\n    - function: private::generic_find_by_id_core\n    - function: pub::generic_find_by_id\n    - function: pub::generic_find_by_id_optional\n    - function: private::generic_find_one_core\n    - function: pub::generic_find_one\n    - function: pub::generic_find_one_optional\n    - function: pub::generic_filter\n    - function: private::to_optional\n\n**locker_mock_up.rs**\n  Add:\n    - function: private::find_locker_by_card_id\n    - function: private::insert_locker_mock_up\n    - trait: pub::ILockerMockUp\n    - impl: impl ILockerMockUp for Store\n\n**mandate.rs**\n  Add:\n    - function: pub::get_mandate\n    - function: pub::revoke_mandate\n    - function: pub::get_customer_mandates\n\n**merchant_account.rs**\n  Add:\n    - function: private::insert_merchant\n    - function: private::find_merchant_account_by_merchant_id\n    - function: private::update_merchant\n    - function: private::find_merchant_account_by_api_key\n    - function: private::find_merchant_account_by_publishable_key\n    - function: private::delete_merchant_account_by_merchant_id\n    - trait: pub::IMerchantAccount\n    - impl: impl IMerchantAccount for Store\n\n**merchant_connector_account.rs**\n  Add:\n    - function: private::find_merchant_connector_account_by_merchant_id_connector\n    - function: private::find_by_merchant_connector_account_merchant_id_merchant_connector_id\n    - function: private::insert_merchant_connector_account\n    - function: private::find_merchant_connector_account_by_merchant_id_list\n    - function: private::update_merchant_connector_account\n    - function: private::delete_merchant_connector_account_by_merchant_id_merchant_connector_id\n    - trait: pub::IMerchantConnectorAccount\n    - impl: impl IMerchantConnectorAccount for Store\n\n**payment_attempt.rs**\n  Add:\n    - function: private::insert_payment_attempt\n    - function: private::update_payment_attempt\n    - function: private::find_payment_attempt_by_payment_id_merchant_id\n    - function: private::find_payment_attempt_by_transaction_id_payment_id_merchant_id\n    - function: private::find_payment_attempt_last_successful_attempt_by_payment_id_merchant_id\n    - function: private::find_payment_attempt_by_merchant_id_connector_txn_id\n    - function: private::insert_payment_attempt\n    - function: private::update_payment_attempt\n    - function: private::find_payment_attempt_by_payment_id_merchant_id\n    - function: private::find_payment_attempt_by_transaction_id_payment_id_merchant_id\n    - function: private::find_payment_attempt_last_successful_attempt_by_payment_id_merchant_id\n    - function: private::find_payment_attempt_by_merchant_id_connector_txn_id\n    - trait: pub::IPaymentAttempt\n    - impl: impl IPaymentAttempt for Store\n    - impl: impl IPaymentAttempt for Store\n    - mod: private::storage\n    - mod: private::storage\n\n**payment_intent.rs**\n  Add:\n    - function: private::insert_payment_intent\n    - function: private::update_payment_intent\n    - function: private::find_payment_intent_by_payment_id_merchant_id\n    - function: private::filter_payment_intent_by_constraints\n    - function: private::insert_payment_intent\n    - function: private::update_payment_intent\n    - function: private::find_payment_intent_by_payment_id_merchant_id\n    - function: private::filter_payment_intent_by_constraints\n    - trait: pub::IPaymentIntent\n    - impl: impl IPaymentIntent for Store\n    - impl: impl IPaymentIntent for Store\n    - mod: private::storage\n    - mod: private::storage\n\n**payment_method.rs**\n  Add:\n    - function: private::find_payment_method\n    - function: private::insert_payment_method\n    - function: private::find_payment_method_by_customer_id_merchant_id_list\n    - function: private::delete_payment_method_by_merchant_id_payment_method_id\n    - trait: pub::IPaymentMethod\n    - impl: impl IPaymentMethod for Store\n\n**process_tracker.rs**\n  Add:\n    - function: private::find_process_by_id\n    - function: private::reinitialize_limbo_processes\n    - function: private::find_processes_by_time_status\n    - function: private::insert_process\n    - function: private::update_process\n    - function: private::update_process_tracker\n    - function: private::process_tracker_update_process_status_by_ids\n    - trait: pub::IProcessTracker\n    - impl: impl IProcessTracker for Store\n\n**refund.rs**\n  Add:\n    - function: private::find_refund_by_internal_reference_id_merchant_id\n    - function: private::insert_refund\n    - function: private::find_refund_by_merchant_id_transaction_id\n    - function: private::update_refund\n    - function: private::find_refund_by_merchant_id_refund_id\n    - function: private::find_refund_by_payment_id_merchant_id\n    - trait: pub::IRefund\n    - impl: impl IRefund for Store\n\n**temp_card.rs**\n  Add:\n    - function: private::insert_temp_card\n    - function: private::find_tempcard_by_transaction_id\n    - function: private::insert_tempcard_with_token\n    - function: private::find_tempcard_by_token\n    - trait: pub::ITempCard\n    - impl: impl ITempCard for Store\n\n**refund.rs**\n  Add:\n    - function: private::find_refund_by_internal_reference_id_merchant_id\n    - function: private::insert_refund\n    - function: private::find_refund_by_merchant_id_transaction_id\n    - function: private::update_refund\n    - function: private::find_refund_by_merchant_id_refund_id\n    - function: private::find_refund_by_payment_id_merchant_id\n    - trait: pub::IRefund\n    - impl: impl IRefund for Store\n\n**temp_card.rs**\n  Add:\n    - function: private::insert_temp_card\n    - function: private::find_tempcard_by_transaction_id\n    - function: private::insert_tempcard_with_token\n    - function: private::find_tempcard_by_token\n    - trait: pub::ITempCard\n    - impl: impl ITempCard for Store\n\n**utils.rs**\n  Add:\n    - function: private::to_not_found_response\n    - function: private::to_duplicate_response\n    - function: private::to_unsuccessful_processing_step_response\n    - function: private::to_refund_failed_response\n    - function: private::to_payment_failed_response\n    - trait: pub::StorageErrorExt\n    - trait: pub::ApiClientErrorExt\n    - trait: pub::ConnectorErrorExt\n    - impl: impl StorageErrorExt for error_stack::Report<super::StorageError>\n    - impl: impl ApiClientErrorExt for error_stack::Report<super::ApiClientError>\n    - impl: impl ConnectorErrorExt for error_stack::Report<super::ConnectorError>\n\n**crypto.rs**\n  Add:\n    - function: private::sign_message\n    - function: private::verify_signature\n    - function: private::encode_message\n    - function: private::decode_message\n    - function: private::sign_message\n    - function: private::verify_signature\n    - function: private::sign_message\n    - function: private::verify_signature\n    - function: private::encode_message\n    - function: private::decode_message\n    - function: private::test_hmac_sha256_sign_message\n    - function: private::test_hmac_sha256_verify_signature\n    - function: private::test_hmac_sha512_sign_message\n    - function: private::test_hmac_sha512_verify_signature\n    - function: private::test_gcm_aes_256_encode_message\n    - function: private::test_gcm_aes_256_decode_message\n    - struct: pub::NoAlgorithm\n    - struct: pub::HmacSha256\n    - struct: pub::HmacSha512\n    - struct: pub::GcmAes256\n    - trait: pub::SignMessage\n    - trait: pub::VerifySignature\n    - trait: pub::EncodeMessage\n    - trait: pub::DecodeMessage\n    - impl: impl SignMessage for NoAlgorithm\n    - impl: impl VerifySignature for NoAlgorithm\n    - impl: impl EncodeMessage for NoAlgorithm\n    - impl: impl DecodeMessage for NoAlgorithm\n    - impl: impl SignMessage for HmacSha256\n    - impl: impl VerifySignature for HmacSha256\n    - impl: impl SignMessage for HmacSha512\n    - impl: impl VerifySignature for HmacSha512\n    - impl: impl EncodeMessage for GcmAes256\n    - impl: impl DecodeMessage for GcmAes256\n    - mod: private::crypto_tests\n\n**custom_serde.rs**\n  Add:\n    - function: pub::serialize\n    - function: pub::deserialize\n    - function: pub::serialize\n    - function: pub::deserialize\n    - function: private::expecting\n    - function: private::visit_str\n    - function: private::expecting\n    - function: private::visit_some\n    - function: private::visit_none\n    - function: private::visit_unit\n    - function: pub::deserialize\n    - function: pub::deserialize_option\n    - struct: private::PaymentIdVisitor\n    - struct: private::OptionalPaymentIdVisitor\n    - impl: impl Visitor<'de> for PaymentIdVisitor\n    - impl: impl Visitor<'de> for OptionalPaymentIdVisitor\n    - mod: pub::iso8601\n    - mod: pub::option\n    - mod: pub::payment_id_type\n\n**ext_traits.rs**\n  Add:\n    - function: private::check_value_present\n    - function: private::get_required_value\n    - function: private::parse_enum\n    - function: private::parse_value\n    - function: private::update_value\n    - function: private::parse_enum\n    - function: private::parse_struct\n    - function: private::parse_struct\n    - function: private::parse_struct\n    - function: private::parse_value\n    - function: private::parse_value\n    - function: private::convert_and_encode\n    - function: private::convert_and_url_encode\n    - function: private::encode\n    - function: private::encode_to_value\n    - function: private::encode_to_vec\n    - function: pub::merge_json_values\n    - function: private::validate_opt\n    - function: pub::validate_email\n    - function: pub::validate_address\n    - function: private::test_validate_email\n    - trait: pub::OptionExt\n    - trait: pub::StringExt\n    - trait: pub::BytesExt\n    - trait: pub::ByteSliceExt\n    - trait: pub::ValueExt\n    - trait: pub::Encode\n    - trait: pub::ValidateVar\n    - trait: pub::ValidateCall\n    - impl: impl OptionExt<T> for Option<T>\n    - impl: impl StringExt<T> for String\n    - impl: impl BytesExt<T> for bytes::Bytes\n    - impl: impl ByteSliceExt<T> for [u8]\n    - impl: impl ValueExt<T> for serde_json::Value\n    - impl: impl ValueExt<T> for Secret<serde_json::Value, MaskingStrategy>\n    - impl: impl Encode<'e, P> for A\n    - impl: impl ValidateCall<T, F> for Option<&T>\n    - mod: private::tests\n\n**fp_utils.rs**\n  Add:\n    - function: private::pure\n    - function: private::pure\n    - function: pub::when\n    - trait: pub::Kind\n    - trait: pub::Applicative\n    - impl: impl Kind<F> for Option<A>\n    - impl: impl Kind<F> for Result<A, B>\n    - impl: impl Applicative<A> for Option<A>\n    - impl: impl Applicative<A> for Result<A, E>\n\n**aci.rs**\n  Add:\n    - function: private::id\n    - function: private::common_get_content_type\n    - function: private::base_url\n    - function: private::get_auth_header\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_webhook_object_reference_id\n    - function: private::get_webhook_event_type\n    - function: private::get_webhook_resource_object\n    - struct: pub::Aci\n    - impl: impl api::ConnectorCommon for Aci\n    - impl: impl api::Payment for Aci\n    - impl: impl api::PaymentAuthorize for Aci\n    - impl: impl api::PaymentSync for Aci\n    - impl: impl api::PaymentVoid for Aci\n    - impl: impl api::PaymentCapture for Aci\n    - impl: impl services::ConnectorIntegration<\napi::PCapture,\ntypes::PaymentsRequestCaptureData,\ntypes::PaymentsResponseData,\n> for Aci\n    - impl: impl services::ConnectorIntegration<\napi::PSync,\ntypes::PaymentsRequestSyncData,\ntypes::PaymentsResponseData,\n> for Aci\n    - impl: impl services::ConnectorIntegration<\napi::Authorize,\ntypes::PaymentsRequestData,\ntypes::PaymentsResponseData,\n> for Aci\n    - impl: impl services::ConnectorIntegration<\napi::Void,\ntypes::PaymentRequestCancelData,\ntypes::PaymentsResponseData,\n> for Aci\n    - impl: impl api::Refund for Aci\n    - impl: impl api::RefundExecute for Aci\n    - impl: impl api::RefundSync for Aci\n    - impl: impl services::ConnectorIntegration<\napi::Execute,\ntypes::RefundsRequestData,\ntypes::RefundsResponseData,\n> for Aci\n    - impl: impl services::ConnectorIntegration<\napi::RSync,\ntypes::RefundsRequestData,\ntypes::RefundsResponseData,\n> for Aci\n    - impl: impl api::IncomingWebhook for Aci\n    - impl: impl services::ConnectorRedirectResponse for Aci\n    - mod: private::result_codes\n    - mod: private::transformers\n\n**authorizedotnet.rs**\n  Add:\n    - function: private::id\n    - function: private::common_get_content_type\n    - function: private::base_url\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_webhook_object_reference_id\n    - function: private::get_webhook_event_type\n    - function: private::get_webhook_resource_object\n    - struct: pub::Authorizedotnet\n    - impl: impl api::ConnectorCommon for Authorizedotnet\n    - impl: impl api::Payment for Authorizedotnet\n    - impl: impl api::PaymentAuthorize for Authorizedotnet\n    - impl: impl api::PaymentSync for Authorizedotnet\n    - impl: impl api::PaymentVoid for Authorizedotnet\n    - impl: impl api::PaymentCapture for Authorizedotnet\n    - impl: impl services::ConnectorIntegration<\napi::PCapture,\ntypes::PaymentsRequestCaptureData,\ntypes::PaymentsResponseData,\n> for Authorizedotnet\n    - impl: impl services::ConnectorIntegration<\napi::PSync,\ntypes::PaymentsRequestSyncData,\ntypes::PaymentsResponseData,\n> for Authorizedotnet\n    - impl: impl services::ConnectorIntegration<\napi::Authorize,\ntypes::PaymentsRequestData,\ntypes::PaymentsResponseData,\n> for Authorizedotnet\n    - impl: impl services::ConnectorIntegration<\napi::Void,\ntypes::PaymentRequestCancelData,\ntypes::PaymentsResponseData,\n> for Authorizedotnet\n    - impl: impl api::Refund for Authorizedotnet\n    - impl: impl api::RefundExecute for Authorizedotnet\n    - impl: impl api::RefundSync for Authorizedotnet\n    - impl: impl services::ConnectorIntegration<\napi::Execute,\ntypes::RefundsRequestData,\ntypes::RefundsResponseData,\n> for Authorizedotnet\n    - impl: impl services::ConnectorIntegration<\napi::RSync,\ntypes::RefundsRequestData,\ntypes::RefundsResponseData,\n> for Authorizedotnet\n    - impl: impl api::IncomingWebhook for Authorizedotnet\n    - impl: impl services::ConnectorRedirectResponse for Authorizedotnet\n    - mod: private::transformers\n\n**checkout.rs**\n  Add:\n    - function: private::id\n    - function: private::common_get_content_type\n    - function: private::get_auth_header\n    - function: private::base_url\n    - function: private::get_headers\n    - function: private::get_url\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_headers\n    - function: private::get_url\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_webhook_object_reference_id\n    - function: private::get_webhook_event_type\n    - function: private::get_webhook_resource_object\n    - struct: pub::Checkout\n    - impl: impl api::ConnectorCommon for Checkout\n    - impl: impl api::Payment for Checkout\n    - impl: impl api::PaymentAuthorize for Checkout\n    - impl: impl api::PaymentSync for Checkout\n    - impl: impl api::PaymentVoid for Checkout\n    - impl: impl api::PaymentCapture for Checkout\n    - impl: impl services::ConnectorIntegration<\napi::PCapture,\ntypes::PaymentsRequestCaptureData,\ntypes::PaymentsResponseData,\n> for Checkout\n    - impl: impl services::ConnectorIntegration<\napi::PSync,\ntypes::PaymentsRequestSyncData,\ntypes::PaymentsResponseData,\n> for Checkout\n    - impl: impl services::ConnectorIntegration<\napi::Authorize,\ntypes::PaymentsRequestData,\ntypes::PaymentsResponseData,\n> for Checkout\n    - impl: impl services::ConnectorIntegration<\napi::Void,\ntypes::PaymentRequestCancelData,\ntypes::PaymentsResponseData,\n> for Checkout\n    - impl: impl api::Refund for Checkout\n    - impl: impl api::RefundExecute for Checkout\n    - impl: impl api::RefundSync for Checkout\n    - impl: impl services::ConnectorIntegration<\napi::Execute,\ntypes::RefundsRequestData,\ntypes::RefundsResponseData,\n> for Checkout\n    - impl: impl services::ConnectorIntegration<\napi::RSync,\ntypes::RefundsRequestData,\ntypes::RefundsResponseData,\n> for Checkout\n    - impl: impl api::IncomingWebhook for Checkout\n    - impl: impl services::ConnectorRedirectResponse for Checkout\n    - mod: private::transformers\n\n**connector_auth.rs**\n  Add:\n    - function: pub::new\n    - function: private::from\n    - struct: pub::ConnectorAuthentication\n    - struct: pub::BodyKey\n    - impl: impl ConnectorAuthentication\n    - impl: impl From<BodyKey> for ConnectorAuthType\n\n**main.rs**\n  Add:\n    - mod: private::aci\n    - mod: private::authorizedotnet\n    - mod: private::checkout\n    - mod: private::connector_auth\n\n**customers.rs**\n  Add:\n    - function: pub::customer_create\n    - function: pub::customer_retrieve\n    - function: pub::customer_update\n    - function: pub::customer_delete\n    - mod: private::types\n\n**health_check.rs**\n  Add:\n    - function: private::health_check\n    - function: private::health_check_root\n    - mod: private::utils\n\n**integration_demo.rs**\n  Add:\n    - function: pub::init\n    - function: private::mk_merchant_account\n    - function: private::mk_payment\n    - function: private::mk_connector\n    - function: private::create_payment\n    - function: private::address\n    - function: private::health\n    - struct: private::TestApp\n    - impl: impl TestApp\n    - mod: private::utils\n\n**payments.rs**\n  Add:\n    - function: pub::payments_operation_core\n    - function: pub::payments_core\n    - function: private::is_start_pay\n    - function: pub::handle_payments_redirect_response\n    - function: pub::payments_response_for_redirection_flows\n    - function: private::call_connector_service\n    - function: pub::if_not_create_change_operation\n    - function: pub::is_confirm\n    - function: pub::should_call_connector\n    - function: pub::list_payments\n    - function: pub::add_process_sync_task\n    - struct: pub::PaymentAddress\n    - struct: pub::PaymentData\n    - struct: pub::CustomerDetails\n    - enum: pub::CallConnectorAction\n    - mod: pub::flows\n    - mod: pub::helpers\n    - mod: pub::operations\n    - mod: pub::transformers\n\n**payments2.rs**\n  Add:\n    - function: private::connector_list\n    - function: private::payments_create_core\n    - function: private::payments_create_core_adyen_no_redirect\n    - mod: private::utils\n\n**payouts.rs**\n  Add:\n    - function: pub::payouts_create\n    - function: pub::payouts_retrieve\n    - function: pub::payouts_update\n    - function: pub::payouts_reverse\n    - function: pub::payouts_cancel\n    - function: pub::payouts_accounts\n    - function: private::http_response\n\n**refunds.rs**\n  Add:\n    - function: pub::refund_create\n    - function: pub::refund_retrieve\n    - function: pub::refund_update\n    - mod: private::types\n\n**utils.rs**\n  Add:\n    - function: private::to_not_found_response\n    - function: private::to_duplicate_response\n    - function: private::to_unsuccessful_processing_step_response\n    - function: private::to_refund_failed_response\n    - function: private::to_payment_failed_response\n    - trait: pub::StorageErrorExt\n    - trait: pub::ApiClientErrorExt\n    - trait: pub::ConnectorErrorExt\n    - impl: impl StorageErrorExt for error_stack::Report<super::StorageError>\n    - impl: impl ApiClientErrorExt for error_stack::Report<super::ApiClientError>\n    - impl: impl ConnectorErrorExt for error_stack::Report<super::ConnectorError>\n\n**webhooks.rs**\n  Add:\n    - function: private::payments_incoming_webhook_flow\n    - function: private::create_event_and_trigger_outgoing_webhook\n    - function: private::trigger_webhook_to_merchant\n    - function: pub::webhooks_core\n    - mod: pub::transformers\n    - mod: pub::utils\n\n**lib.rs**\n  Add:\n    - mod: private::strategy\n    - mod: private::abs\n    - mod: private::secret\n    - mod: private::strong_secret\n    - mod: private::boxed\n    - mod: private::bytes\n    - mod: private::string\n    - mod: private::vec\n    - mod: private::serde\n    - mod: pub::prelude\n    - mod: private::diesel\n\n**macros.rs**\n  Add:\n    - function: pub::debug_as_display_inner\n    - mod: pub::api_error\n    - mod: pub::diesel\n    - mod: private::helpers\n    - mod: pub::operation\n\n**api_error.rs**\n  Add:\n    - function: pub::api_error_derive_inner\n    - function: private::implement_error_type\n    - function: private::implement_error_code\n    - function: private::implement_error_message\n    - function: private::implement_serialize\n    - mod: private::helpers\n\n**helpers.rs**\n  Add:\n    - function: pub::get_address_for_payment_request\n    - function: pub::get_address_by_id\n    - function: pub::get_token_pm_type_mandate_details\n    - function: pub::get_token_for_recurring_mandate\n    - function: pub::validate_merchant_id\n    - function: pub::validate_request_amount_and_amount_to_capture\n    - function: pub::validate_mandate\n    - function: private::validate_new_mandate_request\n    - function: pub::create_server_url\n    - function: pub::create_startpay_url\n    - function: pub::create_redirect_url\n    - function: private::validate_recurring_mandate\n    - function: pub::payment_attempt_status_fsm\n    - function: pub::payment_intent_status_fsm\n    - function: pub::response_operation\n    - function: pub::amap\n    - function: pub::call_payment_method\n    - function: pub::client_secret_auth\n    - function: pub::get_customer_from_details\n    - function: pub::create_customer_if_not_exist\n    - function: pub::make_pm_data\n    - function: pub::payment_method_data_from_temp_card\n    - function: pub::create_temp_card\n    - function: pub::validate_capture_method\n    - function: pub::validate_status\n    - function: pub::validate_amount_to_capture\n    - function: pub::can_call_connector\n    - function: pub::append_option\n    - function: pub::filter_by_constraints\n    - function: pub::validate_payment_list_request\n    - function: pub::get_handle_response_url\n    - function: pub::make_merchant_url_with_response\n    - function: pub::make_pg_redirect_response\n    - function: pub::make_url_with_signature\n    - function: pub::hmac_sha256_sorted_query_params\n\n**diesel.rs**\n  Add:\n    - function: private::as_expression\n    - function: private::as_expression\n    - function: private::to_sql\n    - function: private::from_sql\n    - function: private::as_expression\n    - function: private::build\n    - function: private::as_expression\n    - function: private::as_expression\n    - function: private::to_sql\n    - function: private::from_sql\n    - function: private::as_expression\n    - function: private::build\n    - impl: impl AsExpression<T> for &'expr Secret<S, I>\n    - impl: impl AsExpression<T> for &'expr2 &'expr Secret<S, I>\n    - impl: impl ToSql<T, DB> for Secret<S, I>\n    - impl: impl FromSql<T, DB> for Secret<S, I>\n    - impl: impl AsExpression<T> for Secret<S, I>\n    - impl: impl Queryable<ST, DB> for Secret<S, I>\n    - impl: impl AsExpression<T> for &'expr StrongSecret<S, I>\n    - impl: impl AsExpression<T> for &'expr2 &'expr StrongSecret<S, I>\n    - impl: impl ToSql<T, DB> for StrongSecret<S, I>\n    - impl: impl FromSql<T, DB> for StrongSecret<S, I>\n    - impl: impl AsExpression<T> for StrongSecret<S, I>\n    - impl: impl Queryable<ST, DB> for StrongSecret<S, I>\n\n**helpers.rs**\n  Add:\n    - function: pub::get_address_for_payment_request\n    - function: pub::get_address_by_id\n    - function: pub::get_token_pm_type_mandate_details\n    - function: pub::get_token_for_recurring_mandate\n    - function: pub::validate_merchant_id\n    - function: pub::validate_request_amount_and_amount_to_capture\n    - function: pub::validate_mandate\n    - function: private::validate_new_mandate_request\n    - function: pub::create_server_url\n    - function: pub::create_startpay_url\n    - function: pub::create_redirect_url\n    - function: private::validate_recurring_mandate\n    - function: pub::payment_attempt_status_fsm\n    - function: pub::payment_intent_status_fsm\n    - function: pub::response_operation\n    - function: pub::amap\n    - function: pub::call_payment_method\n    - function: pub::client_secret_auth\n    - function: pub::get_customer_from_details\n    - function: pub::create_customer_if_not_exist\n    - function: pub::make_pm_data\n    - function: pub::payment_method_data_from_temp_card\n    - function: pub::create_temp_card\n    - function: pub::validate_capture_method\n    - function: pub::validate_status\n    - function: pub::validate_amount_to_capture\n    - function: pub::can_call_connector\n    - function: pub::append_option\n    - function: pub::filter_by_constraints\n    - function: pub::validate_payment_list_request\n    - function: pub::get_handle_response_url\n    - function: pub::make_merchant_url_with_response\n    - function: pub::make_pg_redirect_response\n    - function: pub::make_url_with_signature\n    - function: pub::hmac_sha256_sorted_query_params\n\n**operation.rs**\n  Add:\n    - function: private::from\n    - function: private::to_operation\n    - function: private::to_ref_operation\n    - function: private::from\n    - function: private::get_req_type\n    - function: private::to_function\n    - function: private::to_ref_function\n    - function: private::find_operation_attr\n    - function: private::find_value\n    - function: private::find_properties\n    - function: pub::operation_derive_inner\n    - enum: private::Derives\n    - enum: private::Conversion\n    - impl: impl From<String> for Derives\n    - impl: impl Derives\n    - impl: impl From<String> for Conversion\n    - impl: impl Conversion\n\n**build.rs**\n  Add:\n    - function: private::main\n\n**env.rs**\n  Add:\n    - function: pub::setup\n    - mod: pub::logger\n\n**lib.rs**\n  Add:\n    - mod: private::strategy\n    - mod: private::abs\n    - mod: private::secret\n    - mod: private::strong_secret\n    - mod: private::boxed\n    - mod: private::bytes\n    - mod: private::string\n    - mod: private::vec\n    - mod: private::serde\n    - mod: pub::prelude\n    - mod: private::diesel\n\n**config.rs**\n  Add:\n    - function: pub::new\n    - struct: pub::SchedulerConfig\n    - impl: impl SchedulerConfig\n\n**formatter.rs**\n  Add:\n    - function: private::fmt\n    - function: pub::new\n    - function: pub::new_with_implicit_entries\n    - function: private::common_serialize\n    - function: private::flush\n    - function: private::span_serialize\n    - function: pub::event_serialize\n    - function: private::span_message\n    - function: private::event_message\n    - function: private::on_event\n    - function: private::on_enter\n    - function: private::on_close\n    - struct: pub::FormattingLayer\n    - enum: pub::RecordType\n    - impl: impl fmt::Display for RecordType\n    - impl: impl FormattingLayer<W>\n    - impl: impl Layer<S> for FormattingLayer<W>\n\n**macros.rs**\n  Add:\n    - function: pub::debug_as_display_inner\n    - mod: pub::api_error\n    - mod: pub::diesel\n    - mod: private::helpers\n    - mod: pub::operation\n\n**mod.rs**\n  Add:\n    - function: pub::make\n    - function: private::id\n    - function: private::common_get_content_type\n    - function: private::base_url\n    - function: private::get_auth_header\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_webhook_object_reference_id\n    - function: private::get_webhook_event_type\n    - function: private::get_webhook_resource_object\n    - impl: impl api::ConnectorCommon for project\n    - impl: impl api::Payment for project\n    - impl: impl api::PaymentAuthorize for project\n    - impl: impl services::ConnectorIntegration<\napi::Authorize,\ntypes::PaymentsRequestData,\ntypes::PaymentsResponseData,\n> for project\n    - impl: impl services::ConnectorIntegration<\napi::Execute,\ntypes::RefundsRequestData,\ntypes::RefundsResponseData,\n> for project\n    - impl: impl services::ConnectorIntegration<api::Sync, types::RefundsRequestData, types::RefundsResponseData> for project\n    - impl: impl api::IncomingWebhook for project\n    - mod: private::transformers\n\n**setup.rs**\n  Add:\n    - function: private::on_event\n    - function: pub::setup\n    - function: private::setup_metrics\n    - struct: pub::DebugLayer\n    - struct: pub::TelemetryGuard\n    - impl: impl Layer<S> for DebugLayer\n\n**storage.rs**\n  Add:\n    - function: private::from\n    - function: private::build\n    - function: private::from\n    - function: private::build\n    - struct: pub::DieselArray\n    - struct: pub::OptionalDieselArray\n    - impl: impl From<DieselArray<T>> for Vec<T>\n    - impl: impl Queryable<Array<Nullable<U>>, Pg> for DieselArray<T>\n    - impl: impl From<OptionalDieselArray<T>> for Option<Vec<T>>\n    - impl: impl Queryable<Nullable<Array<Nullable<U>>>, Pg> for OptionalDieselArray<T>\n    - mod: pub::address\n    - mod: pub::configs\n    - mod: pub::connector_response\n    - mod: pub::customers\n    - mod: pub::enums\n    - mod: pub::events\n    - mod: pub::locker_mock_up\n    - mod: pub::mandate\n    - mod: pub::merchant_account\n    - mod: pub::merchant_connector_account\n    - mod: pub::payment_attempt\n    - mod: pub::payment_intent\n    - mod: pub::payment_method\n    - mod: pub::process_tracker\n    - mod: private::query\n    - mod: pub::refund\n    - mod: pub::temp_card\n    - mod: pub::diesel_impl\n\n**types.rs**\n  Add:\n    - function: private::from\n    - function: private::from\n    - function: private::from\n    - function: private::from\n    - struct: pub::CustomerAddress\n    - struct: pub::CreateCustomerRequest\n    - struct: pub::CustomerUpdateRequest\n    - struct: pub::CreateCustomerResponse\n    - struct: pub::CustomerDeleteResponse\n    - impl: impl From<CreateCustomerRequest> for customers::CreateCustomerRequest\n    - impl: impl From<CustomerUpdateRequest> for customers::CustomerUpdateRequest\n    - impl: impl From<customers::CustomerResponse> for CreateCustomerResponse\n    - impl: impl From<customers::CustomerDeleteResponse> for CustomerDeleteResponse\n\n**env.rs**\n  Add:\n    - function: pub::setup\n    - mod: pub::logger\n\n**logger.rs**\n  Modify existing code\n\n**mod.rs**\n  Add:\n    - function: pub::make\n    - function: private::id\n    - function: private::common_get_content_type\n    - function: private::base_url\n    - function: private::get_auth_header\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::handle_response\n    - function: private::get_error_response\n    - function: private::get_webhook_object_reference_id\n    - function: private::get_webhook_event_type\n    - function: private::get_webhook_resource_object\n    - impl: impl api::ConnectorCommon for project\n    - impl: impl api::Payment for project\n    - impl: impl api::PaymentAuthorize for project\n    - impl: impl services::ConnectorIntegration<\napi::Authorize,\ntypes::PaymentsRequestData,\ntypes::PaymentsResponseData,\n> for project\n    - impl: impl services::ConnectorIntegration<\napi::Execute,\ntypes::RefundsRequestData,\ntypes::RefundsResponseData,\n> for project\n    - impl: impl services::ConnectorIntegration<api::Sync, types::RefundsRequestData, types::RefundsResponseData> for project\n    - impl: impl api::IncomingWebhook for project\n    - mod: private::transformers\n\n**some_module.rs**\n  Add:\n    - function: pub::fn_with_colon\n    - function: pub::fn_without_colon"}
