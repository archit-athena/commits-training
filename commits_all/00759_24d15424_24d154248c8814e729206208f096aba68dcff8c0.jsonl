{"prompt": "feat(analytics): authentication analytics (#4429)\n\nCo-authored-by: Sampras Lopes <lsampras@pm.me>\nCo-authored-by: hyperswitch-bot[bot] <148525504+hyperswitch-bot[bot]@users.noreply.github.com>", "response": "Files to modify:\n\n\n**auth_events.rs**\n  Add:\n    - mod: pub::accumulator\n    - mod: private::core\n    - mod: pub::metrics\n\n**accumulator.rs**\n  Add:\n    - function: private::add_metrics_bucket\n    - function: private::collect\n    - function: pub::collect\n    - struct: pub::AuthEventMetricsAccumulator\n    - struct: pub::CountAccumulator\n    - trait: pub::AuthEventMetricAccumulator\n    - impl: impl AuthEventMetricAccumulator for CountAccumulator\n    - impl: impl AuthEventMetricsAccumulator\n\n**core.rs**\n  Add:\n    - function: pub::get_metrics\n\n**metrics.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::AuthEventMetricRow\n    - trait: pub::AuthEventMetricAnalytics\n    - trait: pub::AuthEventMetric\n    - impl: impl AuthEventMetric<T> for AuthEventMetrics\n    - mod: private::authentication_attempt_count\n    - mod: private::authentication_success_count\n    - mod: private::challenge_attempt_count\n    - mod: private::challenge_flow_count\n    - mod: private::challenge_success_count\n    - mod: private::frictionless_flow_count\n    - mod: private::three_ds_sdk_count\n\n**authentication_attempt_count.rs**\n  Remove:\n    - struct: pub::ThreeDsMethodInvokedCount\n    - impl: impl super::SdkEventMetric<T> for switch()\n  Add:\n    - struct: pub::AuthenticationAttemptCount\n\n**authentication_success_count.rs**\n  Remove:\n    - struct: pub::AuthenticationUnsuccessfulCount\n    - impl: impl super::SdkEventMetric<T> for switch()\n  Add:\n    - struct: pub::AuthenticationSuccessCount\n\n**challenge_attempt_count.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::ChallengeAttemptCount\n    - impl: impl super::AuthEventMetric<T> for ChallengeAttemptCount\n\n**challenge_flow_count.rs**\n  Remove:\n    - struct: pub::ThreeDsChallengeFlowCount\n    - impl: impl super::SdkEventMetric<T> for switch()\n  Add:\n    - struct: pub::ChallengeFlowCount\n\n**challenge_success_count.rs**\n  Remove:\n    - struct: pub::ThreeDsMethodUnsuccessfulCount\n    - impl: impl super::SdkEventMetric<T> for MetricsResult<Vec<(SdkEventMetricsBucketIdentifier, SdkEventMetricRow)>>\n  Add:\n    - struct: pub::ChallengeSuccessCount\n\n**frictionless_flow_count.rs**\n  Remove:\n    - struct: pub::ThreeDsMethodSkippedCount\n    - impl: impl super::SdkEventMetric<T> for switch()\n  Add:\n    - struct: pub::FrictionlessFlowCount\n\n**three_ds_sdk_count.rs**\n  Remove:\n    - struct: pub::ThreeDsMethodSuccessfulCount\n    - impl: impl super::SdkEventMetric<T> for switch()\n  Add:\n    - struct: pub::ThreeDsSdkCount\n\n**clickhouse.rs**\n  Add:\n    - function: private::try_into\n    - impl: impl super::auth_events::metrics::AuthEventMetricAnalytics for ClickhouseClient\n    - impl: impl TryInto<AuthEventMetricRow> for serde_json::Value\n\n**core.rs**\n  Add:\n    - function: pub::get_metrics\n\n**lib.rs**\n  Add:\n    - function: pub::get_auth_event_metrics\n    - mod: pub::auth_events\n\n**query.rs**\n  Modify existing code\n\n**accumulator.rs**\n  Add:\n    - function: private::add_metrics_bucket\n    - function: private::collect\n    - function: pub::collect\n    - struct: pub::AuthEventMetricsAccumulator\n    - struct: pub::CountAccumulator\n    - trait: pub::AuthEventMetricAccumulator\n    - impl: impl AuthEventMetricAccumulator for CountAccumulator\n    - impl: impl AuthEventMetricsAccumulator\n\n**core.rs**\n  Add:\n    - function: pub::get_metrics\n\n**metrics.rs**\n  Add:\n    - function: private::load_metrics\n    - struct: pub::AuthEventMetricRow\n    - trait: pub::AuthEventMetricAnalytics\n    - trait: pub::AuthEventMetric\n    - impl: impl AuthEventMetric<T> for AuthEventMetrics\n    - mod: private::authentication_attempt_count\n    - mod: private::authentication_success_count\n    - mod: private::challenge_attempt_count\n    - mod: private::challenge_flow_count\n    - mod: private::challenge_success_count\n    - mod: private::frictionless_flow_count\n    - mod: private::three_ds_sdk_count\n\n**average_payment_time.rs**\n  Modify existing code\n\n**load_time.rs**\n  Remove:\n    - struct: pub::ThreeDsFrictionlessFlowCount\n  Add:\n    - struct: pub::LoadTime\n\n**sqlx.rs**\n  Modify existing code\n\n**types.rs**\n  Modify existing code\n\n**utils.rs**\n  Add:\n    - function: pub::get_auth_event_metrics_info\n\n**analytics.rs**\n  Add:\n    - struct: pub::GetAuthEventMetricRequest\n    - mod: pub::auth_events\n\n**auth_events.rs**\n  Add:\n    - mod: pub::accumulator\n    - mod: private::core\n    - mod: pub::metrics\n\n**sdk_events.rs**\n  Remove:\n    - struct: pub::ThreeDsMethodInvokedCount\n    - struct: pub::ThreeDsMethodSkippedCount\n    - struct: pub::ThreeDsMethodSuccessfulCount\n    - struct: pub::ThreeDsMethodUnsuccessfulCount\n    - struct: pub::AuthenticationUnsuccessfulCount\n    - struct: pub::ThreeDsChallengeFlowCount\n    - struct: pub::ThreeDsFrictionlessFlowCount\n  Add:\n    - struct: pub::LoadTime\n\n**events.rs**\n  Modify existing code\n\n**analytics.rs**\n  Add:\n    - struct: pub::GetAuthEventMetricRequest\n    - mod: pub::auth_events"}
