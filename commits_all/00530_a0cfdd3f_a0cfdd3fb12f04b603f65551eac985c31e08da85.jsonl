{"prompt": "feat(router): add payments incremental authorization api (#3038)\n\nCo-authored-by: hyperswitch-bot[bot] <148525504+hyperswitch-bot[bot]@users.noreply.github.com>", "response": "Files to modify:\n\n\n**payment.rs**\n  Add:\n    - function: private::get_api_event_type\n    - impl: impl ApiEventMetric for PaymentsIncrementalAuthorizationRequest\n\n**payments.rs**\n  Add:\n    - struct: pub::IncrementalAuthorizationResponse\n    - struct: pub::PaymentsIncrementalAuthorizationRequest\n\n**enums.rs**\n  Add:\n    - enum: pub::AuthorizationStatus\n\n**request.rs**\n  Modify existing code\n\n**payments.rs**\n  Add:\n    - struct: pub::IncrementalAuthorizationResponse\n    - struct: pub::PaymentsIncrementalAuthorizationRequest\n\n**payment_attempt.rs**\n  Modify existing code\n\n**payment_intent.rs**\n  Modify existing code\n\n**authorization.rs**\n  Add:\n    - function: private::from\n    - struct: pub::Authorization\n    - struct: pub::AuthorizationNew\n    - struct: pub::AuthorizationUpdateInternal\n    - enum: pub::AuthorizationUpdate\n    - impl: impl From<AuthorizationUpdate> for AuthorizationUpdateInternal\n\n**lib.rs**\n  Add:\n    - mod: pub::authorization\n\n**payment_attempt.rs**\n  Modify existing code\n\n**payment_intent.rs**\n  Modify existing code\n\n**query.rs**\n  Add:\n    - mod: pub::authorization\n\n**authorization.rs**\n  Add:\n    - function: private::from\n    - struct: pub::Authorization\n    - struct: pub::AuthorizationNew\n    - struct: pub::AuthorizationUpdateInternal\n    - enum: pub::AuthorizationUpdate\n    - impl: impl From<AuthorizationUpdate> for AuthorizationUpdateInternal\n\n**schema.rs**\n  Modify existing code\n\n**cybersource.rs**\n  Add:\n    - function: private::get_headers\n    - function: private::get_content_type\n    - function: private::get_url\n    - function: private::get_request_body\n    - function: private::build_request\n    - function: private::handle_response\n    - function: private::get_error_response\n    - impl: impl api::PaymentIncrementalAuthorization for Cybersource\n    - impl: impl ConnectorIntegration<\napi::IncrementalAuthorization,\ntypes::PaymentsIncrementalAuthorizationData,\ntypes::PaymentsResponseData,\n> for Cybersource\n\n**transformers.rs**\n  Add:\n    - function: private::try_from\n    - function: private::from\n    - function: private::try_from\n    - struct: pub::MerchantInitiatedTransaction\n    - struct: pub::AdditionalAmount\n    - struct: pub::CybersourcePaymentsIncrementalAuthorizationRequest\n    - struct: pub::CybersourcePaymentsIncrementalAuthorizationResponse\n    - enum: pub::CybersourceIncrementalAuthorizationStatus\n    - impl: impl TryFrom<&CybersourceRouterData<&types::PaymentsIncrementalAuthorizationRouterData>> for CybersourcePaymentsIncrementalAuthorizationRequest\n    - impl: impl From<CybersourceIncrementalAuthorizationStatus> for common_enums::AuthorizationStatus\n    - impl: impl TryFrom<(\ntypes::ResponseRouterData<\nF,\nCybersourcePaymentsIncrementalAuthorizationResponse,\nT,\ntypes::PaymentsResponseData,\n>,\nbool,\n)> for types::RouterData<F, T, types::PaymentsResponseData>\n\n**payments.rs**\n  Add:\n    - struct: pub::IncrementalAuthorizationResponse\n    - struct: pub::PaymentsIncrementalAuthorizationRequest\n\n**flows.rs**\n  Add:\n    - impl: impl api::PaymentIncrementalAuthorization for connector::DummyConnector<T>\n    - impl: impl services::ConnectorIntegration<\napi::IncrementalAuthorization,\ntypes::PaymentsIncrementalAuthorizationData,\ntypes::PaymentsResponseData,\n> for connector::DummyConnector<T>\n    - mod: pub::incremental_authorization_flow\n\n**incremental_authorization_flow.rs**\n  Add:\n    - function: private::construct_router_data\n    - function: private::decide_flows\n    - function: private::add_access_token\n    - function: private::build_flow_specific_connector_request\n    - impl: impl ConstructFlowSpecificData<\napi::IncrementalAuthorization,\ntypes::PaymentsIncrementalAuthorizationData,\ntypes::PaymentsResponseData,\n> for PaymentData<api::IncrementalAuthorization>\n    - impl: impl Feature<api::IncrementalAuthorization, types::PaymentsIncrementalAuthorizationData> for types::RouterData<\napi::IncrementalAuthorization,\ntypes::PaymentsIncrementalAuthorizationData,\ntypes::PaymentsResponseData,\n>\n\n**helpers.rs**\n  Add:\n    - function: pub::validate_payment_status_against_allowed_statuses\n\n**operations.rs**\n  Add:\n    - mod: pub::payments_incremental_authorization\n\n**payment_approve.rs**\n  Modify existing code\n\n**payment_cancel.rs**\n  Modify existing code\n\n**payment_capture.rs**\n  Modify existing code\n\n**payment_complete_authorize.rs**\n  Modify existing code\n\n**payment_confirm.rs**\n  Modify existing code\n\n**payment_create.rs**\n  Modify existing code\n\n**payment_reject.rs**\n  Modify existing code\n\n**payment_response.rs**\n  Add:\n    - function: private::update_tracker\n    - impl: impl PostUpdateTracker<F, PaymentData<F>, types::PaymentsIncrementalAuthorizationData> for PaymentResponse\n\n**payment_session.rs**\n  Modify existing code\n\n**payment_start.rs**\n  Modify existing code\n\n**payment_status.rs**\n  Modify existing code\n\n**payment_update.rs**\n  Modify existing code\n\n**payments_incremental_authorization.rs**\n  Add:\n    - function: private::get_trackers\n    - function: private::update_trackers\n    - function: private::validate_request\n    - function: private::get_or_create_customer_details\n    - function: private::make_pm_data\n    - function: private::get_connector\n    - struct: pub::PaymentIncrementalAuthorization\n    - impl: impl GetTracker<F, payments::PaymentData<F>, PaymentsIncrementalAuthorizationRequest, Ctx> for PaymentIncrementalAuthorization\n    - impl: impl UpdateTracker<F, payments::PaymentData<F>, PaymentsIncrementalAuthorizationRequest, Ctx> for PaymentIncrementalAuthorization\n    - impl: impl ValidateRequest<F, PaymentsIncrementalAuthorizationRequest, Ctx> for PaymentIncrementalAuthorization\n    - impl: impl Domain<F, PaymentsIncrementalAuthorizationRequest, Ctx> for PaymentIncrementalAuthorization\n\n**transformers.rs**\n  Add:\n    - function: private::try_from\n    - function: private::from\n    - function: private::try_from\n    - struct: pub::MerchantInitiatedTransaction\n    - struct: pub::AdditionalAmount\n    - struct: pub::CybersourcePaymentsIncrementalAuthorizationRequest\n    - struct: pub::CybersourcePaymentsIncrementalAuthorizationResponse\n    - enum: pub::CybersourceIncrementalAuthorizationStatus\n    - impl: impl TryFrom<&CybersourceRouterData<&types::PaymentsIncrementalAuthorizationRouterData>> for CybersourcePaymentsIncrementalAuthorizationRequest\n    - impl: impl From<CybersourceIncrementalAuthorizationStatus> for common_enums::AuthorizationStatus\n    - impl: impl TryFrom<(\ntypes::ResponseRouterData<\nF,\nCybersourcePaymentsIncrementalAuthorizationResponse,\nT,\ntypes::PaymentsResponseData,\n>,\nbool,\n)> for types::RouterData<F, T, types::PaymentsResponseData>\n\n**db.rs**\n  Add:\n    - mod: pub::authorization\n\n**authorization.rs**\n  Add:\n    - function: private::from\n    - struct: pub::Authorization\n    - struct: pub::AuthorizationNew\n    - struct: pub::AuthorizationUpdateInternal\n    - enum: pub::AuthorizationUpdate\n    - impl: impl From<AuthorizationUpdate> for AuthorizationUpdateInternal\n\n**kafka_store.rs**\n  Add:\n    - function: private::insert_authorization\n    - function: private::find_all_authorizations_by_merchant_id_payment_id\n    - function: private::update_authorization_by_merchant_id_authorization_id\n    - impl: impl AuthorizationInterface for KafkaStore\n\n**openapi.rs**\n  Modify existing code\n\n**app.rs**\n  Modify existing code\n\n**lock_utils.rs**\n  Modify existing code\n\n**payments.rs**\n  Add:\n    - struct: pub::IncrementalAuthorizationResponse\n    - struct: pub::PaymentsIncrementalAuthorizationRequest\n\n**api.rs**\n  Add:\n    - impl: impl Authenticate for api_models::payments::PaymentsIncrementalAuthorizationRequest\n\n**types.rs**\n  Add:\n    - struct: pub::PaymentsIncrementalAuthorizationData\n    - impl: impl Capturable for PaymentsIncrementalAuthorizationData\n\n**payments.rs**\n  Add:\n    - struct: pub::IncrementalAuthorizationResponse\n    - struct: pub::PaymentsIncrementalAuthorizationRequest\n\n**storage.rs**\n  Add:\n    - mod: pub::authorization\n\n**authorization.rs**\n  Add:\n    - function: private::from\n    - struct: pub::Authorization\n    - struct: pub::AuthorizationNew\n    - struct: pub::AuthorizationUpdateInternal\n    - enum: pub::AuthorizationUpdate\n    - impl: impl From<AuthorizationUpdate> for AuthorizationUpdateInternal\n\n**transformers.rs**\n  Add:\n    - function: private::try_from\n    - function: private::from\n    - function: private::try_from\n    - struct: pub::MerchantInitiatedTransaction\n    - struct: pub::AdditionalAmount\n    - struct: pub::CybersourcePaymentsIncrementalAuthorizationRequest\n    - struct: pub::CybersourcePaymentsIncrementalAuthorizationResponse\n    - enum: pub::CybersourceIncrementalAuthorizationStatus\n    - impl: impl TryFrom<&CybersourceRouterData<&types::PaymentsIncrementalAuthorizationRouterData>> for CybersourcePaymentsIncrementalAuthorizationRequest\n    - impl: impl From<CybersourceIncrementalAuthorizationStatus> for common_enums::AuthorizationStatus\n    - impl: impl TryFrom<(\ntypes::ResponseRouterData<\nF,\nCybersourcePaymentsIncrementalAuthorizationResponse,\nT,\ntypes::PaymentsResponseData,\n>,\nbool,\n)> for types::RouterData<F, T, types::PaymentsResponseData>\n\n**sample_data.rs**\n  Modify existing code\n\n**utils.rs**\n  Modify existing code\n\n**operation.rs**\n  Modify existing code\n\n**types.rs**\n  Add:\n    - struct: pub::PaymentsIncrementalAuthorizationData\n    - impl: impl Capturable for PaymentsIncrementalAuthorizationData\n\n**payment_intent.rs**\n  Modify existing code\n\n**payment_attempt.rs**\n  Modify existing code\n\n**payment_intent.rs**\n  Modify existing code"}
